<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- Import the common properties to support NuGet restore -->
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <Import Project="..\..\..\Avalonia\build\TargetFrameworks.props" />
  <PropertyGroup>
    <!-- A target framework version is required by Visual Studio.  It can be any version with a targeting pack installed. -->
    <TargetFrameworkVersion>v4.8.1</TargetFrameworkVersion>
    <!-- The configuration and platform will be used to determine which assemblies to include from solution and
				 project documentation sources -->
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>0d38b9f6-2433-453b-963f-a73964bf9f5d</ProjectGuid>
    <SHFBSchemaVersion>2017.9.26.0</SHFBSchemaVersion>
    <!-- AssemblyName, Name, and RootNamespace are not used by SHFB but Visual Studio adds them anyway -->
    <AssemblyName>ApiDocumentation</AssemblyName>
    <RootNamespace>ApiDocumentation</RootNamespace>
    <Name>ApiDocumentation</Name>
    <!-- SHFB properties -->
    <FrameworkVersion>.NET Core/.NET Standard/.NET 5.0+</FrameworkVersion>
    <OutputPath>..\..\..\website\docs\</OutputPath>
    <HtmlHelpName>ApiDocumentation</HtmlHelpName>
    <Language>en-US</Language>
    <TransformComponentArguments>
      <Argument Key="BibliographyDataFile" Value="" />
      <Argument Key="MaxVersionParts" Value="3" />
      <Argument Key="IncludeEnumValues" Value="True" />
      <Argument Key="EnumMemberSortOrder" Value="Value" />
      <Argument Key="FlagsEnumValueFormat" Value="IntegerValue" />
      <Argument Key="FlagsEnumSeparatorSize" Value="0" />
      <Argument Key="IncludeIntegerEnumSeparators" Value="true" />
      <Argument Key="BaseSourceCodeUrl" Value="https://github.com/AvaloniaUI/Avalonia/tree/master/src/" />
      <Argument Key="ShowParametersOnAllMethods" Value="True" />
    </TransformComponentArguments>
    <HelpFileFormat>Markdown</HelpFileFormat>
    <SyntaxFilters>C#, Visual Basic, F#</SyntaxFilters>
    <PresentationStyle>DocusaurusMarkdown</PresentationStyle>
    <CleanIntermediates>True</CleanIntermediates>
    <KeepLogFile>True</KeepLogFile>
    <DisableCodeBlockComponent>False</DisableCodeBlockComponent>
    <IndentHtml>False</IndentHtml>
    <BuildAssemblerVerbosity>OnlyWarningsAndErrors</BuildAssemblerVerbosity>
    <SaveComponentCacheCapacity>100</SaveComponentCacheCapacity>
    <DocumentationSources>
      <DocumentationSource sourceFile="..\..\..\Avalonia\src\Avalonia.Controls\Avalonia.Controls.csproj" TargetFramework="$(AvsCurrentTargetFramework)" />
      <DocumentationSource sourceFile="..\..\..\Avalonia\packages\Avalonia\Avalonia.csproj" TargetFramework="$(AvsCurrentTargetFramework)" />
      <DocumentationSource sourceFile="..\..\..\Avalonia\src\Android\Avalonia.Android\Avalonia.Android.csproj" TargetFramework="$(AvsCurrentAndroidTargetFramework)" />
      <DocumentationSource sourceFile="..\..\..\Avalonia\src\Avalonia.Base\Avalonia.Base.csproj" TargetFramework="$(AvsCurrentTargetFramework)" />
      <DocumentationSource sourceFile="..\..\..\Avalonia\src\Avalonia.Controls.ColorPicker\Avalonia.Controls.ColorPicker.csproj" TargetFramework="$(AvsCurrentTargetFramework)" />
      <DocumentationSource sourceFile="..\..\..\Avalonia\src\Avalonia.Controls.DataGrid\Avalonia.Controls.DataGrid.csproj" TargetFramework="$(AvsCurrentTargetFramework)" />
      <DocumentationSource sourceFile="..\..\..\Avalonia\src\Avalonia.Controls\Avalonia.Controls.csproj" TargetFramework="$(AvsCurrentTargetFramework)" />
      <DocumentationSource sourceFile="..\..\..\Avalonia\src\Avalonia.DesignerSupport\Avalonia.DesignerSupport.csproj" TargetFramework="$(AvsCurrentTargetFramework)" />
      <DocumentationSource sourceFile="..\..\..\Avalonia\src\Avalonia.Desktop\Avalonia.Desktop.csproj" TargetFramework="$(AvsCurrentTargetFramework)" />
      <DocumentationSource sourceFile="..\..\..\Avalonia\src\Avalonia.Diagnostics\Avalonia.Diagnostics.csproj" TargetFramework="$(AvsCurrentTargetFramework)" />
      <DocumentationSource sourceFile="..\..\..\Avalonia\src\Avalonia.Dialogs\Avalonia.Dialogs.csproj" TargetFramework="$(AvsCurrentTargetFramework)" />
      <DocumentationSource sourceFile="..\..\..\Avalonia\src\Avalonia.Fonts.Inter\Avalonia.Fonts.Inter.csproj" TargetFramework="$(AvsCurrentTargetFramework)" />
      <DocumentationSource sourceFile="..\..\..\Avalonia\src\Avalonia.FreeDesktop\Avalonia.FreeDesktop.csproj" TargetFramework="$(AvsCurrentTargetFramework)" />
      <DocumentationSource sourceFile="..\..\..\Avalonia\src\Avalonia.Metal\Avalonia.Metal.csproj" TargetFramework="$(AvsCurrentTargetFramework)" />
      <DocumentationSource sourceFile="..\..\..\Avalonia\src\Avalonia.Native\Avalonia.Native.csproj" TargetFramework="$(AvsCurrentTargetFramework)" />
      <DocumentationSource sourceFile="..\..\..\Avalonia\src\Avalonia.OpenGL\Avalonia.OpenGL.csproj" TargetFramework="$(AvsCurrentTargetFramework)" />
      <DocumentationSource sourceFile="..\..\..\Avalonia\src\Avalonia.ReactiveUI\Avalonia.ReactiveUI.csproj" TargetFramework="$(AvsCurrentTargetFramework)" />
      <DocumentationSource sourceFile="..\..\..\Avalonia\src\Avalonia.Themes.Fluent\Avalonia.Themes.Fluent.csproj" TargetFramework="$(AvsCurrentTargetFramework)" />
      <DocumentationSource sourceFile="..\..\..\Avalonia\src\Avalonia.Themes.Fluent\Avalonia.Themes.Fluent.csproj" TargetFramework="$(AvsCurrentTargetFramework)" />
      <DocumentationSource sourceFile="..\..\..\Avalonia\src\Avalonia.Themes.Simple\Avalonia.Themes.Simple.csproj" TargetFramework="$(AvsCurrentTargetFramework)" />
      <DocumentationSource sourceFile="..\..\..\Avalonia\src\Avalonia.Vulkan\Avalonia.Vulkan.csproj" TargetFramework="$(AvsCurrentTargetFramework)" />
      <DocumentationSource sourceFile="..\..\..\Avalonia\src\Avalonia.X11\Avalonia.X11.csproj" TargetFramework="$(AvsCurrentTargetFramework)" />
      <DocumentationSource sourceFile="..\..\..\Avalonia\src\Browser\Avalonia.Browser.Blazor\Avalonia.Browser.Blazor.csproj" TargetFramework="$(AvsCurrentBrowserTargetFramework)" />
      <DocumentationSource sourceFile="..\..\..\Avalonia\src\iOS\Avalonia.iOS\Avalonia.iOS.csproj" TargetFramework="$(AvsCurrentIOSTargetFramework)" />
      <DocumentationSource sourceFile="..\..\..\Avalonia\src\Linux\Avalonia.LinuxFramebuffer\Avalonia.LinuxFramebuffer.csproj" TargetFramework="$(AvsCurrentTargetFramework)" />
      <DocumentationSource sourceFile="..\..\..\Avalonia\src\Skia\Avalonia.Skia\Avalonia.Skia.csproj" TargetFramework="$(AvsCurrentTargetFramework)" />
      <DocumentationSource sourceFile="..\..\..\Avalonia\src\Windows\Avalonia.Direct2D1\Avalonia.Direct2D1.csproj" TargetFramework="$(AvsCurrentTargetFramework)" />
      <DocumentationSource sourceFile="..\..\..\Avalonia\src\Windows\Avalonia.Win32.Automation\Avalonia.Win32.Automation.csproj" TargetFramework="$(AvsCurrentTargetFramework)" />
      <DocumentationSource sourceFile="..\..\..\Avalonia\src\Windows\Avalonia.Win32\Avalonia.Win32.csproj" TargetFramework="$(AvsCurrentTargetFramework)" />
      
	  <!-- TODO: These two don't work as intended.  -->
      <!-- <DocumentationSource sourceFile="..\..\..\Avalonia\src\Windows\Avalonia.Win32.Interoperability\Avalonia.Win32.Interoperability.csproj" TargetFramework="$(AvsCurrentTargetFramework)" /> -->
      <!-- <DocumentationSource sourceFile="..\..\..\Avalonia\src\Tizen\Avalonia.Tizen\Avalonia.Tizen.csproj" TargetFramework="$(AvsCurrentTizenTargetFramework)" /> -->
																				
    </DocumentationSources>											  
    <PlugInConfigurations>
      <PlugInConfig id="Output Deployment" enabled="False">
        <configuration deleteAfterDeploy="false" verboseLogging="true">
          <deploymentLocation id="help1x" location="">
            <userCredentials useDefault="true" userName="" password="" />
            <proxyCredentials useProxy="false" proxyServer="">
              <userCredentials useDefault="true" userName="" password="" />
            </proxyCredentials>
          </deploymentLocation>
          <deploymentLocation id="helpViewer" location="" renameMSHA="false">
            <userCredentials useDefault="true" userName="" password="" />
            <proxyCredentials useProxy="false" proxyServer="">
              <userCredentials useDefault="true" userName="" password="" />
            </proxyCredentials>
          </deploymentLocation>
          <deploymentLocation id="website" location="">
            <userCredentials useDefault="true" userName="" password="" />
            <proxyCredentials useProxy="false" proxyServer="">
              <userCredentials useDefault="true" userName="" password="" />
            </proxyCredentials>
          </deploymentLocation>
          <deploymentLocation id="openXml" location="">
            <userCredentials useDefault="true" userName="" password="" />
            <proxyCredentials useProxy="false" proxyServer="">
              <userCredentials useDefault="true" userName="" password="" />
            </proxyCredentials>
          </deploymentLocation>
          <deploymentLocation id="markdown" location="..\..\..\..\website\docs\">
            <userCredentials useDefault="true" userName="" password="" />
            <proxyCredentials useProxy="false" proxyServer="">
              <userCredentials useDefault="true" userName="" password="" />
            </proxyCredentials>
          </deploymentLocation>
        </configuration>
      </PlugInConfig>
      <PlugInConfig id="XPath Reflection File Filter" enabled="True">
        <configuration>
          <expressions>
            <!-- <expression>/reflection/apis/api[//@api="T:Avalonia.Metadata.PrivateApiAttribute"]</expression> -->
            <expression>/reflection/apis/api[substring(@id, string-length(@id) - string-length("Impl") +1) = "Impl"]</expression>
            <expression>/reflection/apis/api[contains(@id, "Impl.")]</expression>
            <expression>/reflection/apis/api/elements/element[substring(@api, string-length(@api) - string-length("Impl") +1) = "Impl"]</expression>
            <expression>/reflection/apis/api/elements/element[contains(@id, "Impl.")]</expression>
            <!-- <expression>//*[substring(@id, string-length(@id) - string-length("Impl") +1) = "Impl"]</expression> -->
          </expressions>
        </configuration>
      </PlugInConfig>
      <PlugInConfig id="DocusaurusExport" enabled="True">
        <configuration />
      </PlugInConfig>
      <PlugInConfig id="AvaloniaAttributes" enabled="True">
        <configuration />
      </PlugInConfig>
    </PlugInConfigurations>
    <ComponentPath>tools\</ComponentPath>
    <WarnOnMissingSourceContext>False</WarnOnMissingSourceContext>
    <HelpTitle>Avalonia API Documentation</HelpTitle>
    <HelpFileVersion>11.2.0</HelpFileVersion>
    <NamingMethod>MemberName</NamingMethod>
    <ContentPlacement>AboveNamespaces</ContentPlacement>
    <RootNamespaceContainer>False</RootNamespaceContainer>
    <NamespaceGrouping>True</NamespaceGrouping>
    <MaximumGroupParts>2</MaximumGroupParts>
    <Preliminary>False</Preliminary>
    <SdkLinkTarget>Blank</SdkLinkTarget>
    <MissingTags>AutoDocumentCtors, AutoDocumentDispose</MissingTags>
    <WorkingPath>Help\</WorkingPath>
    <BuildLogFile>Build-Log\Help.log</BuildLogFile>
    <SourceCodeBasePath>..\..\..\Avalonia\src\</SourceCodeBasePath>
    <VisibleItems>Attributes, InheritedMembers, InheritedFrameworkMembers, Protected, ProtectedInternalAsProtected, NonBrowsable</VisibleItems>
  </PropertyGroup>
  <!-- There are no properties for these groups.  AnyCPU needs to appear in order for Visual Studio to perform
			 the build.  The others are optional common platform types that may appear. -->
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|x86' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|x86' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|x64' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|x64' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|Win32' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|Win32' ">
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="EWSoftware.SHFB.NET">
      <Version>9.0.0</Version>
    </PackageReference>
  </ItemGroup>
  <!-- Import the common build targets during NuGet restore because before the packages are being installed, $(SHFBROOT) is not set yet -->
  <Import Project="$(MSBuildToolsPath)\Microsoft.Common.targets" Condition="'$(MSBuildRestoreSessionId)' != ''" />
  <!-- Import the SHFB build targets during build -->
  <Import Project="$(SHFBROOT)\SandcastleHelpFileBuilder.targets" Condition="'$(MSBuildRestoreSessionId)' == ''" />
  <!-- The pre-build and post-build event properties must appear *after* the targets file import in order to be
			 evaluated correctly. -->
  <PropertyGroup>
    <PreBuildEvent>
    </PreBuildEvent>
    <PostBuildEvent>
    </PostBuildEvent>
    <RunPostBuildEvent>OnBuildSuccess</RunPostBuildEvent>
  </PropertyGroup>
</Project>