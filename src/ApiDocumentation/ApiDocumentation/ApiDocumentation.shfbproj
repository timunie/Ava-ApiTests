<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- Import the common properties to support NuGet restore -->
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <!-- A target framework version is required by Visual Studio.  It can be any version with a targeting pack installed. -->
    <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>
    <!-- The configuration and platform will be used to determine which assemblies to include from solution and
				 project documentation sources -->
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>0d38b9f6-2433-453b-963f-a73964bf9f5d</ProjectGuid>
    <SHFBSchemaVersion>2017.9.26.0</SHFBSchemaVersion>
    <!-- AssemblyName, Name, and RootNamespace are not used by SHFB but Visual Studio adds them anyway -->
    <AssemblyName>ApiDocumentation</AssemblyName>
    <RootNamespace>ApiDocumentation</RootNamespace>
    <Name>ApiDocumentation</Name>
    <!-- SHFB properties -->
    <FrameworkVersion>.NET Core/.NET Standard/.NET 5.0+</FrameworkVersion>
    <OutputPath>Help\</OutputPath>
    <HtmlHelpName>ApiDocumentation</HtmlHelpName>
    <Language>en-US</Language>
    <TransformComponentArguments>
      <Argument Key="logoFile" Value="Help.png" xmlns="" />
      <Argument Key="logoHeight" Value="" xmlns="" />
      <Argument Key="logoWidth" Value="" xmlns="" />
      <Argument Key="logoAltText" Value="" xmlns="" />
      <Argument Key="logoPlacement" Value="left" xmlns="" />
      <Argument Key="logoAlignment" Value="left" xmlns="" />
      <Argument Key="maxVersionParts" Value="" xmlns="" />
    </TransformComponentArguments>
    <HelpFileFormat>Markdown</HelpFileFormat>
    <SyntaxFilters>Standard</SyntaxFilters>
    <PresentationStyle>DocusaurusMarkdown</PresentationStyle>
    <CleanIntermediates>True</CleanIntermediates>
    <KeepLogFile>True</KeepLogFile>
    <DisableCodeBlockComponent>False</DisableCodeBlockComponent>
    <IndentHtml>False</IndentHtml>
    <BuildAssemblerVerbosity>OnlyWarningsAndErrors</BuildAssemblerVerbosity>
    <SaveComponentCacheCapacity>100</SaveComponentCacheCapacity>
    <DocumentationSources>
      <DocumentationSource sourceFile="..\TestProject\TestProject.csproj" xmlns="" />
    </DocumentationSources>
    <PlugInConfigurations>
      <PlugInConfig id="DocusaurusExport" enabled="True">
        <configuration />
      </PlugInConfig>
<PlugInConfig id="XPath Reflection File Filter" enabled="True"><configuration><expressions><expression>/reflection/apis/api/attributes/attribute[type/@api="T:Avalonia.Metadata.PrivateApiAttribute"]</expression></expressions></configuration></PlugInConfig>
<PlugInConfig id="Output Deployment" enabled="True"><configuration deleteAfterDeploy="false" verboseLogging="false">
  <deploymentLocation id="help1x" location="">
    <userCredentials useDefault="true" userName="" password="" />
    <proxyCredentials useProxy="false" proxyServer="">
      <userCredentials useDefault="true" userName="" password="" />
    </proxyCredentials>
  </deploymentLocation>
  <deploymentLocation id="helpViewer" location="" renameMSHA="false">
    <userCredentials useDefault="true" userName="" password="" />
    <proxyCredentials useProxy="false" proxyServer="">
      <userCredentials useDefault="true" userName="" password="" />
    </proxyCredentials>
  </deploymentLocation>
  <deploymentLocation id="website" location="">
    <userCredentials useDefault="true" userName="" password="" />
    <proxyCredentials useProxy="false" proxyServer="">
      <userCredentials useDefault="true" userName="" password="" />
    </proxyCredentials>
  </deploymentLocation>
  <deploymentLocation id="openXml" location="">
    <userCredentials useDefault="true" userName="" password="" />
    <proxyCredentials useProxy="false" proxyServer="">
      <userCredentials useDefault="true" userName="" password="" />
    </proxyCredentials>
  </deploymentLocation>
  <deploymentLocation id="markdown" location="..\..\docs\my-website\docs\">
    <userCredentials useDefault="true" userName="" password="" />
    <proxyCredentials useProxy="false" proxyServer="">
      <userCredentials useDefault="true" userName="" password="" />
    </proxyCredentials>
  </deploymentLocation>
</configuration></PlugInConfig></PlugInConfigurations>
    <ComponentPath>tools\</ComponentPath>
    <WarnOnMissingSourceContext>False</WarnOnMissingSourceContext>
    <HelpTitle>Avalonia API Documentation</HelpTitle>
    <HelpFileVersion>11.2.0</HelpFileVersion>
    <NamingMethod>MemberName</NamingMethod>
    <ContentPlacement>AboveNamespaces</ContentPlacement>
    <RootNamespaceContainer>False</RootNamespaceContainer>
    <NamespaceGrouping>True</NamespaceGrouping>
    <MaximumGroupParts>2</MaximumGroupParts>
    <Preliminary>False</Preliminary>
    <SdkLinkTarget>Blank</SdkLinkTarget>
    <MissingTags>Summary, Parameter, Returns, AutoDocumentCtors, TypeParameter, AutoDocumentDispose</MissingTags>
  </PropertyGroup>
  <!-- There are no properties for these groups.  AnyCPU needs to appear in order for Visual Studio to perform
			 the build.  The others are optional common platform types that may appear. -->
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|x86' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|x86' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|x64' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|x64' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|Win32' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|Win32' ">
  </PropertyGroup>
  <ItemGroup>
    <Folder Include="Content" />
    <Folder Include="Content\VersionHistory" />
    <Folder Include="icons" />
    <Folder Include="media" />
  </ItemGroup>
  <ItemGroup>
    <None Include="Content\VersionHistory\v1.0.0.0.aml" />
    <None Include="Content\VersionHistory\VersionHistory.aml" />
    <None Include="Content\Welcome.aml" />
  </ItemGroup>
  <ItemGroup>
    <ContentLayout Include="ContentLayout.content" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="icons\Help.png" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="EWSoftware.SHFB.NET">
      <Version>9.0.0</Version>
    </PackageReference>
  </ItemGroup>
  <!-- Import the common build targets during NuGet restore because before the packages are being installed, $(SHFBROOT) is not set yet -->
  <Import Project="$(MSBuildToolsPath)\Microsoft.Common.targets" Condition="'$(MSBuildRestoreSessionId)' != ''" />
  <!-- Import the SHFB build targets during build -->
  <Import Project="$(SHFBROOT)\SandcastleHelpFileBuilder.targets" Condition="'$(MSBuildRestoreSessionId)' == ''" />
  <!-- The pre-build and post-build event properties must appear *after* the targets file import in order to be
			 evaluated correctly. -->
  <PropertyGroup>
    <PreBuildEvent>
    </PreBuildEvent>
    <PostBuildEvent>
    </PostBuildEvent>
    <RunPostBuildEvent>OnBuildSuccess</RunPostBuildEvent>
  </PropertyGroup>
</Project>