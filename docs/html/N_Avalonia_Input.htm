<!DOCTYPE html []><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>Avalonia.Input Namespace</title><meta name="Title" content="Avalonia.Input" /><meta name="Help.Id" content="N:Avalonia.Input" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="Avalonia.Input" /><meta name="guid" content="N_Avalonia_Input" /><meta name="Description" content="summaryN:Avalonia." /><meta name="tocFile" content="../toc/Root.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><a target="_blank" rel="noopener noreferrer" href="https://avaloniaui.net"><img alt="Avalonia Logo" style="height: 40px; width: 40px;" src="../icons/avalonia_logo_box_white.png" /></a></div><div id="DocumentationTitle" class="level-item">Avalonia API Reference</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile toc-resizable"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="toc-resizer"></div><div id="TopicContent" class="column content is-7 toc-resizable-content"><h1>Avalonia.<wbr />Input Namespace</h1><div class="summary"><p class="missing">[Missing &lt;summary&gt; documentation for "N:Avalonia.Input"]</p></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Classes</h2><div id="IDBCASection"><table id="classList" class="table is-hoverable"><tr><td><a href="T_Avalonia_Input_Cursor.htm">Cursor</a></td><td> </td></tr><tr><td><a href="T_Avalonia_Input_DataFormats.htm">DataFormats</a></td><td> </td></tr><tr><td><a href="T_Avalonia_Input_DataObject.htm">DataObject</a></td><td>
            Specific and mutable implementation of the IDataObject interface.
            </td></tr><tr><td><a href="T_Avalonia_Input_DataObjectExtensions.htm">DataObjectExtensions</a></td><td> </td></tr><tr><td><a href="T_Avalonia_Input_DragDrop.htm">DragDrop</a></td><td> </td></tr><tr><td><a href="T_Avalonia_Input_DragDropDevice.htm">DragDropDevice</a></td><td> </td></tr><tr><td><a href="T_Avalonia_Input_DragEventArgs.htm">DragEventArgs</a></td><td> </td></tr><tr><td><a href="T_Avalonia_Input_FocusManager.htm">FocusManager</a></td><td>
            Manages focus for the application.
            </td></tr><tr><td><a href="T_Avalonia_Input_Gestures.htm">Gestures</a></td><td> </td></tr><tr><td><a href="T_Avalonia_Input_GotFocusEventArgs.htm">GotFocusEventArgs</a></td><td>
            Holds arguments for a <a href="F_Avalonia_Input_InputElement_GotFocusEvent.htm">GotFocusEvent</a>.
            </td></tr><tr><td><a href="T_Avalonia_Input_HoldingRoutedEventArgs.htm">HoldingRoutedEventArgs</a></td><td> </td></tr><tr><td><a href="T_Avalonia_Input_InputElement.htm">InputElement</a></td><td>
            Implements input-related functionality for a control.
            </td></tr><tr><td><a href="T_Avalonia_Input_InputExtensions.htm">InputExtensions</a></td><td>
            Defines extensions for the <a href="T_Avalonia_Input_IInputElement.htm">IInputElement</a> interface.
            </td></tr><tr><td><a href="T_Avalonia_Input_InputMethod.htm">InputMethod</a></td><td> </td></tr><tr><td><a href="T_Avalonia_Input_KeyBinding.htm">KeyBinding</a></td><td> </td></tr><tr><td><a href="T_Avalonia_Input_KeyboardDevice.htm">KeyboardDevice</a></td><td> </td></tr><tr><td><a href="T_Avalonia_Input_KeyboardNavigation.htm">KeyboardNavigation</a></td><td>
            Defines attached properties that control keyboard navigation behaviour for a container.
            </td></tr><tr><td><a href="T_Avalonia_Input_KeyboardNavigationHandler.htm">KeyboardNavigationHandler</a></td><td>
            Handles keyboard navigation for a window.
            </td></tr><tr><td><a href="T_Avalonia_Input_KeyEventArgs.htm">KeyEventArgs</a></td><td>
            Provides information specific to a keyboard event.
            </td></tr><tr><td><a href="T_Avalonia_Input_KeyGesture.htm">KeyGesture</a></td><td>
            Defines a keyboard input combination.
            </td></tr><tr><td><a href="T_Avalonia_Input_MouseDevice.htm">MouseDevice</a></td><td>
            Represents a mouse device.
            </td></tr><tr><td><a href="T_Avalonia_Input_NavigationDirectionExtensions.htm">NavigationDirectionExtensions</a></td><td> </td></tr><tr><td><a href="T_Avalonia_Input_PenDevice.htm">PenDevice</a></td><td>
            Represents a pen/stylus device.
            </td></tr><tr><td><a href="T_Avalonia_Input_PhysicalKeyExtensions.htm">PhysicalKeyExtensions</a></td><td>
            Contains extension methods related to <a href="T_Avalonia_Input_PhysicalKey.htm">PhysicalKey</a>.
            </td></tr><tr><td><a href="T_Avalonia_Input_PinchEndedEventArgs.htm">PinchEndedEventArgs</a></td><td> </td></tr><tr><td><a href="T_Avalonia_Input_PinchEventArgs.htm">PinchEventArgs</a></td><td> </td></tr><tr><td><a href="T_Avalonia_Input_PinchGestureRecognizer.htm">PinchGestureRecognizer</a></td><td> </td></tr><tr><td><a href="T_Avalonia_Input_Pointer.htm">Pointer</a></td><td> </td></tr><tr><td><a href="T_Avalonia_Input_PointerCaptureLostEventArgs.htm">PointerCaptureLostEventArgs</a></td><td> </td></tr><tr><td><a href="T_Avalonia_Input_PointerDeltaEventArgs.htm">PointerDeltaEventArgs</a></td><td> </td></tr><tr><td><a href="T_Avalonia_Input_PointerEventArgs.htm">PointerEventArgs</a></td><td> </td></tr><tr><td><a href="T_Avalonia_Input_PointerPressedEventArgs.htm">PointerPressedEventArgs</a></td><td> </td></tr><tr><td><a href="T_Avalonia_Input_PointerReleasedEventArgs.htm">PointerReleasedEventArgs</a></td><td> </td></tr><tr><td><a href="T_Avalonia_Input_PointerUpdateKindExtensions.htm">PointerUpdateKindExtensions</a></td><td> </td></tr><tr><td><a href="T_Avalonia_Input_PointerWheelEventArgs.htm">PointerWheelEventArgs</a></td><td> </td></tr><tr><td><a href="T_Avalonia_Input_PullGestureEndedEventArgs.htm">PullGestureEndedEventArgs</a></td><td> </td></tr><tr><td><a href="T_Avalonia_Input_PullGestureEventArgs.htm">PullGestureEventArgs</a></td><td> </td></tr><tr><td><a href="T_Avalonia_Input_PullGestureRecognizer.htm">PullGestureRecognizer</a></td><td> </td></tr><tr><td><a href="T_Avalonia_Input_ScrollGestureEndedEventArgs.htm">ScrollGestureEndedEventArgs</a></td><td> </td></tr><tr><td><a href="T_Avalonia_Input_ScrollGestureEventArgs.htm">ScrollGestureEventArgs</a></td><td> </td></tr><tr><td><a href="T_Avalonia_Input_ScrollGestureInertiaStartingEventArgs.htm">ScrollGestureInertiaStartingEventArgs</a></td><td> </td></tr><tr><td><a href="T_Avalonia_Input_TappedEventArgs.htm">TappedEventArgs</a></td><td> </td></tr><tr><td><a href="T_Avalonia_Input_TextInputEventArgs.htm">TextInputEventArgs</a></td><td> </td></tr><tr><td><a href="T_Avalonia_Input_TouchDevice.htm">TouchDevice</a></td><td>
            Handles raw touch events
            </td></tr><tr><td><a href="T_Avalonia_Input_VectorEventArgs.htm">VectorEventArgs</a></td><td> </td></tr><tr><td><a href="T_Avalonia_Input_XYFocus.htm">XYFocus</a></td><td> </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Structures</h2><div id="ID0EC0CASection"><table id="structureList" class="table is-hoverable"><tr><td><a href="T_Avalonia_Input_PointerPoint.htm">PointerPoint</a></td><td>
            Provides basic properties for the input pointer associated with a single mouse, pen/stylus, or touch contact.
            </td></tr><tr><td><a href="T_Avalonia_Input_PointerPointProperties.htm">PointerPointProperties</a></td><td>
            Provides extended properties for a PointerPoint object.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Interfaces</h2><div id="IDQCASection"><table id="interfaceList" class="table is-hoverable"><tr><td><a href="T_Avalonia_Input_ICloseable.htm">ICloseable</a></td><td> </td></tr><tr><td><a href="T_Avalonia_Input_ICommandSource.htm">ICommandSource</a></td><td>
             An interface for classes that know how to invoke a Command.
            </td></tr><tr><td><a href="T_Avalonia_Input_ICustomKeyboardNavigation.htm">ICustomKeyboardNavigation</a></td><td>
            Designates a control as handling its own keyboard navigation.
            </td></tr><tr><td><a href="T_Avalonia_Input_IDataObject.htm">IDataObject</a></td><td>
            Interface to access information about the data of a drag-and-drop operation.
            </td></tr><tr><td><a href="T_Avalonia_Input_IFocusManager.htm">IFocusManager</a></td><td>
            Manages focus for the application.
            </td></tr><tr><td><a href="T_Avalonia_Input_IFocusScope.htm">IFocusScope</a></td><td> </td></tr><tr><td><a href="T_Avalonia_Input_IInputDevice.htm">IInputDevice</a></td><td> </td></tr><tr><td><a href="T_Avalonia_Input_IInputElement.htm">IInputElement</a></td><td>
            Defines input-related functionality for a control.
            </td></tr><tr><td><a href="T_Avalonia_Input_IInputManager.htm">IInputManager</a></td><td>
            Receives input from the windowing subsystem and dispatches it to interested parties
            for processing.
            </td></tr><tr><td><a href="T_Avalonia_Input_IInputRoot.htm">IInputRoot</a></td><td>
            Defines the interface for top-level input elements.
            </td></tr><tr><td><a href="T_Avalonia_Input_IKeyboardDevice.htm">IKeyboardDevice</a></td><td> </td></tr><tr><td><a href="T_Avalonia_Input_IKeyboardNavigationHandler.htm">IKeyboardNavigationHandler</a></td><td>
            Defines the interface for classes that handle keyboard navigation for a window.
            </td></tr><tr><td><a href="T_Avalonia_Input_IMouseDevice.htm">IMouseDevice</a></td><td>
            Represents a mouse device.
            </td></tr><tr><td><a href="T_Avalonia_Input_INavigableContainer.htm">INavigableContainer</a></td><td>
            Defines a container in which the child controls can be navigated by keyboard.
            </td></tr><tr><td><a href="T_Avalonia_Input_IPenDevice.htm">IPenDevice</a></td><td>
            Represents a pen/stylus device.
            </td></tr><tr><td><a href="T_Avalonia_Input_IPointer.htm">IPointer</a></td><td>
            Identifies specific pointer generated by input device.
            </td></tr><tr><td><a href="T_Avalonia_Input_IPointerDevice.htm">IPointerDevice</a></td><td> </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Enumerations</h2><div id="IDACASection"><table id="enumerationList" class="table is-hoverable"><tr><td><a href="T_Avalonia_Input_DragDropEffects.htm">DragDropEffects</a></td><td> </td></tr><tr><td><a href="T_Avalonia_Input_HoldingState.htm">HoldingState</a></td><td> </td></tr><tr><td><a href="T_Avalonia_Input_Key.htm">Key</a></td><td>
            Defines the keys available on a keyboard.
            </td></tr><tr><td><a href="T_Avalonia_Input_KeyboardNavigationMode.htm">KeyboardNavigationMode</a></td><td>
            Defines the mode of keyboard traversal within a container when the tab or arrow keys are
            pressed.
            </td></tr><tr><td><a href="T_Avalonia_Input_KeyDeviceType.htm">KeyDeviceType</a></td><td>
            Enumerates key device types.
            </td></tr><tr><td><a href="T_Avalonia_Input_KeyModifiers.htm">KeyModifiers</a></td><td> </td></tr><tr><td><a href="T_Avalonia_Input_KeyStates.htm">KeyStates</a></td><td> </td></tr><tr><td><a href="T_Avalonia_Input_MouseButton.htm">MouseButton</a></td><td> </td></tr><tr><td><a href="T_Avalonia_Input_NavigationDirection.htm">NavigationDirection</a></td><td>
            Describes how focus should be moved by directional or tab keys.
            </td></tr><tr><td><a href="T_Avalonia_Input_NavigationMethod.htm">NavigationMethod</a></td><td>
            Defines the method by which a focus change occurred.
            </td></tr><tr><td><a href="T_Avalonia_Input_PhysicalKey.htm">PhysicalKey</a></td><td>
            Represents a keyboard physical key.<br /></td></tr><tr><td><a href="T_Avalonia_Input_PointerType.htm">PointerType</a></td><td>
            Enumerates pointer device types.
            </td></tr><tr><td><a href="T_Avalonia_Input_PointerUpdateKind.htm">PointerUpdateKind</a></td><td> </td></tr><tr><td><a href="T_Avalonia_Input_PullDirection.htm">PullDirection</a></td><td> </td></tr><tr><td><a href="T_Avalonia_Input_RawInputModifiers.htm">RawInputModifiers</a></td><td> </td></tr><tr><td><a href="T_Avalonia_Input_StandardCursorType.htm">StandardCursorType</a></td><td> </td></tr><tr><td><a href="T_Avalonia_Input_XYFocusNavigationModes.htm">XYFocusNavigationModes</a></td><td>
            Specifies the 2D directional navigation behavior when using different key devices.
            </td></tr><tr><td><a href="T_Avalonia_Input_XYFocusNavigationStrategy.htm">XYFocusNavigationStrategy</a></td><td>
            Specifies the disambiguation strategy used for navigating between multiple candidate targets using
            <a href="F_Avalonia_Input_XYFocus_DownNavigationStrategyProperty.htm">DownNavigationStrategyProperty</a>, <a href="F_Avalonia_Input_XYFocus_LeftNavigationStrategyProperty.htm">LeftNavigationStrategyProperty</a>,
            <a href="F_Avalonia_Input_XYFocus_RightNavigationStrategyProperty.htm">RightNavigationStrategyProperty</a>, and <a href="F_Avalonia_Input_XYFocus_UpNavigationStrategyProperty.htm">UpNavigationStrategyProperty</a>.
            </td></tr></table></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Classes</a></li><li><a class="quickLink">Structures</a></li><li><a class="quickLink">Interfaces</a></li><li><a class="quickLink">Enumerations</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div id="FooterContent" class="column"><p><a href="https://avaloniaui.net" target="_blank" rel="noopener noreferrer">© AvaloniaUI OÜ</a></p> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
});</script></body></html>