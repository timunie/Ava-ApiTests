<!DOCTYPE html []><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>IInputElement Interface</title><meta name="Title" content="IInputElement" /><meta name="Help.Id" content="T:Avalonia.Input.IInputElement" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="Avalonia.Input" /><meta name="guid" content="T_Avalonia_Input_IInputElement" /><meta name="Description" content="Defines input-related functionality for a control." /><meta name="tocFile" content="../toc/IDAOB.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><a target="_blank" rel="noopener noreferrer" href="https://avaloniaui.net"><img alt="Avalonia Logo" style="height: 40px; width: 40px;" src="../icons/avalonia_logo_box_white.png" /></a></div><div id="DocumentationTitle" class="level-item">Avalonia API Reference</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile toc-resizable"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="toc-resizer"></div><div id="TopicContent" class="column content is-7 toc-resizable-content"><h1>IInput<wbr />Element Interface</h1><div class="summary">
            Defines input-related functionality for a control.
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="N_Avalonia_Input.htm">Avalonia.Input</a><br /><strong>Assembly:</strong> Avalonia.Base (in Avalonia.Base.dll) Version: 11.3.999<div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="https://github.com/AvaloniaUI/Avalonia/tree/master/src/Avalonia.Base/Input/IInputElement.cs" target="_blank" rel="noopener noreferrer" class="button is-small is-light" title="View the source code"><span class="icon is-small"><i class="fa fa-file-code"></i></span><span>View Source</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs">[<span class="identifier">NotClientImplementableAttribute</span>]
<span class="keyword">public</span> <span class="keyword">interface</span> <span class="identifier">IInputElement</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="https://github.com/AvaloniaUI/Avalonia/tree/master/src/Avalonia.Base/Input/IInputElement.cs" target="_blank" rel="noopener noreferrer" class="button is-small is-light" title="View the source code"><span class="icon is-small"><i class="fa fa-file-code"></i></span><span>View Source</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vb">&lt;<span class="identifier">NotClientImplementableAttribute</span>&gt;
<span class="keyword">Public</span> <span class="keyword">Interface</span> <span class="identifier">IInputElement</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="fs"><div class="codeHeader"><span class="codeHeaderTitle">F#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="https://github.com/AvaloniaUI/Avalonia/tree/master/src/Avalonia.Base/Input/IInputElement.cs" target="_blank" rel="noopener noreferrer" class="button is-small is-light" title="View the source code"><span class="icon is-small"><i class="fa fa-file-code"></i></span><span>View Source</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-fs">[&lt;<span class="identifier">NotClientImplementableAttribute</span>&gt;]
<span class="keyword">type</span> <span class="identifier">IInputElement</span> = <span class="keyword">interface</span> <span class="keyword">end</span></code></pre></div></div></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Properties</h2><div id="IDVFASection"><table id="PropertyList" class="table is-hoverable"><tr><td><a href="P_Avalonia_Input_IInputElement_Cursor.htm">Cursor</a></td><td>
            Gets or sets the associated mouse cursor.
            </td></tr><tr><td><a href="P_Avalonia_Input_IInputElement_Focusable.htm">Focusable</a></td><td>
            Gets or sets a value indicating whether the control can receive keyboard focus.
            </td></tr><tr><td><a href="P_Avalonia_Input_IInputElement_IsEffectivelyEnabled.htm">IsEffectivelyEnabled</a></td><td>
            Gets a value indicating whether this control and all its parents are enabled.
            </td></tr><tr><td><a href="P_Avalonia_Input_IInputElement_IsEffectivelyVisible.htm">IsEffectivelyVisible</a></td><td>
            Gets a value indicating whether this control and all its parents are visible.
            </td></tr><tr><td><a href="P_Avalonia_Input_IInputElement_IsEnabled.htm">IsEnabled</a></td><td>
            Gets or sets a value indicating whether the control is enabled for user interaction.
            </td></tr><tr><td><a href="P_Avalonia_Input_IInputElement_IsFocused.htm">IsFocused</a></td><td>
            Gets a value indicating whether the control is focused.
            </td></tr><tr><td><a href="P_Avalonia_Input_IInputElement_IsHitTestVisible.htm">IsHitTestVisible</a></td><td>
            Gets a value indicating whether the control is considered for hit testing.
            </td></tr><tr><td><a href="P_Avalonia_Input_IInputElement_IsKeyboardFocusWithin.htm">IsKeyboardFocusWithin</a></td><td>
            Gets a value indicating whether keyboard focus is anywhere within the element or its visual tree child elements.
            </td></tr><tr><td><a href="P_Avalonia_Input_IInputElement_IsPointerOver.htm">IsPointerOver</a></td><td>
            Gets a value indicating whether the pointer is currently over the control.
            </td></tr><tr><td><a href="P_Avalonia_Input_IInputElement_KeyBindings.htm">KeyBindings</a></td><td>
            Gets the key bindings for the element.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Methods</h2><div id="IDRFASection"><table id="MethodList" class="table is-hoverable"><tr><td><a href="M_Avalonia_Input_IInputElement_AddHandler.htm">AddHandler(RoutedEvent, Delegate, RoutingStrategies, Boolean)</a></td><td>
            Adds a handler for the specified routed event.
            </td></tr><tr><td><a href="M_Avalonia_Input_IInputElement_Focus.htm">Focus(NavigationMethod, KeyModifiers)</a></td><td>
            Focuses the control.
            </td></tr><tr><td><a href="M_Avalonia_Input_IInputElement_RaiseEvent.htm">RaiseEvent(RoutedEventArgs)</a></td><td>
            Raises a routed event.
            </td></tr><tr><td><a href="M_Avalonia_Input_IInputElement_RemoveHandler.htm">RemoveHandler(RoutedEvent, Delegate)</a></td><td>
            Removes a handler for the specified routed event.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Events</h2><div id="IDGFASection"><table id="EventList" class="table is-hoverable"><tr><td><a href="E_Avalonia_Input_IInputElement_GotFocus.htm">GotFocus</a></td><td>
            Occurs when the control receives focus.
            </td></tr><tr><td><a href="E_Avalonia_Input_IInputElement_KeyDown.htm">KeyDown</a></td><td>
            Occurs when a key is pressed while the control has focus.
            </td></tr><tr><td><a href="E_Avalonia_Input_IInputElement_KeyUp.htm">KeyUp</a></td><td>
            Occurs when a key is released while the control has focus.
            </td></tr><tr><td><a href="E_Avalonia_Input_IInputElement_LostFocus.htm">LostFocus</a></td><td>
            Occurs when the control loses focus.
            </td></tr><tr><td><a href="E_Avalonia_Input_IInputElement_PointerEntered.htm">PointerEntered</a></td><td>
            Occurs when the pointer enters the control.
            </td></tr><tr><td><a href="E_Avalonia_Input_IInputElement_PointerExited.htm">PointerExited</a></td><td>
            Occurs when the pointer leaves the control.
            </td></tr><tr><td><a href="E_Avalonia_Input_IInputElement_PointerMoved.htm">PointerMoved</a></td><td>
            Occurs when the pointer moves over the control.
            </td></tr><tr><td><a href="E_Avalonia_Input_IInputElement_PointerPressed.htm">PointerPressed</a></td><td>
            Occurs when the pointer is pressed over the control.
            </td></tr><tr><td><a href="E_Avalonia_Input_IInputElement_PointerReleased.htm">PointerReleased</a></td><td>
            Occurs when the pointer is released over the control.
            </td></tr><tr><td><a href="E_Avalonia_Input_IInputElement_PointerWheelChanged.htm">PointerWheelChanged</a></td><td>
            Occurs when the mouse wheel is scrolled over the control.
            </td></tr><tr><td><a href="E_Avalonia_Input_IInputElement_TextInput.htm">TextInput</a></td><td>
            Occurs when a user typed some text while the control has focus.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Extension Methods</h2><div id="IDAFASection"><table id="ExtensionList" class="table is-hoverable"><tr><td><a href="M_Avalonia_Input_InputExtensions_GetInputElementsAt_1.htm">GetInputElementsAt(Point)</a></td><td>
            Returns the active input elements at a point on an <span class="selflink">IInputElement</span>.
            <br />(Defined by <a href="T_Avalonia_Input_InputExtensions.htm">InputExtensions</a>)</td></tr><tr><td><a href="M_Avalonia_Input_InputExtensions_GetInputElementsAt.htm">GetInputElementsAt(Point, Boolean)</a></td><td>
            Returns the active input elements at a point on an <span class="selflink">IInputElement</span>.
            <br />(Defined by <a href="T_Avalonia_Input_InputExtensions.htm">InputExtensions</a>)</td></tr><tr><td><a href="M_Avalonia_Input_InputExtensions_InputHitTest_3.htm">InputHitTest(Point)</a></td><td>
            Returns the topmost active input element at a point on an <span class="selflink">IInputElement</span>.
            <br />(Defined by <a href="T_Avalonia_Input_InputExtensions.htm">InputExtensions</a>)</td></tr><tr><td><a href="M_Avalonia_Input_InputExtensions_InputHitTest.htm">InputHitTest(Point, Boolean)</a></td><td>
            Returns the topmost active input element at a point on an <span class="selflink">IInputElement</span>.
            <br />(Defined by <a href="T_Avalonia_Input_InputExtensions.htm">InputExtensions</a>)</td></tr><tr><td><a href="M_Avalonia_Input_InputExtensions_InputHitTest_2.htm">InputHitTest(Point, Func<span id="LSTD2F72E24_0" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Visual, Boolean<span id="LSTD2F72E24_1" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns the topmost active input element at a point on an <span class="selflink">IInputElement</span>.
            <br />(Defined by <a href="T_Avalonia_Input_InputExtensions.htm">InputExtensions</a>)</td></tr><tr><td><a href="M_Avalonia_Input_InputExtensions_InputHitTest_1.htm">InputHitTest(Point, Func<span id="LSTD2F72E24_2" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Visual, Boolean<span id="LSTD2F72E24_3" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Boolean)</a></td><td>
            Returns the topmost active input element at a point on an <span class="selflink">IInputElement</span>.
            <br />(Defined by <a href="T_Avalonia_Input_InputExtensions.htm">InputExtensions</a>)</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="N_Avalonia_Input.htm">Avalonia.Input Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a></li><li><a class="quickLink">Properties</a></li><li><a class="quickLink">Methods</a></li><li><a class="quickLink">Events</a></li><li><a class="quickLink">Extension Methods</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div id="FooterContent" class="column"><p><a href="https://avaloniaui.net" target="_blank" rel="noopener noreferrer">© AvaloniaUI OÜ</a></p> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>