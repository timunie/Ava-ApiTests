"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["657208"],{806224:function(e,a,n){n.r(a),n.d(a,{assets:()=>o,contentTitle:()=>l,default:()=>p,frontMatter:()=>t,metadata:()=>r,toc:()=>c});var r=n(884),i=n(696773),s=n(116070);let t={},l="WrapSkiaCanvas Method",o={},c=[{value:"Definition",id:"definition",level:2},{value:"Parameters",id:"parameters",level:4},{value:"Return Value",id:"return-value",level:4},{value:"See Also",id:"see-also",level:2},{value:"Reference",id:"reference",level:4}];function d(e){let a={br:"br",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,s.a)(),...e.components},{TabItem:n,Tabs:r}=a;return n||v("TabItem",!0),r||v("Tabs",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(a.header,{children:(0,i.jsx)(a.h1,{id:"wrapskiacanvas-method",children:"WrapSkiaCanvas Method"})}),"\n",(0,i.jsx)(a.p,{children:"Wrap Skia canvas in drawing context so we can use Avalonia api to render to external skia canvas this is useful in scenarios where canvas is not controlled by application, but received from another non avalonia api like: SKCanvas canvas = SKDocument.BeginPage(...);"}),"\n",(0,i.jsx)(a.h2,{id:"definition",children:"Definition"}),"\n",(0,i.jsxs)(a.p,{children:[(0,i.jsx)(a.strong,{children:"Namespace:"})," ",(0,i.jsx)("a",{href:"N_Avalonia_Skia_Helpers",children:"Avalonia.Skia.Helpers"}),(0,i.jsx)(a.br,{}),"\n",(0,i.jsx)(a.strong,{children:"Assembly:"})," Avalonia.Skia (in Avalonia.Skia.dll) Version: 11.2.0"]}),"\n",(0,i.jsxs)(r,{groupId:"api-code-preview",children:[(0,i.jsx)(n,{value:"csharp",label:"C#",children:(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-csharp",children:'[UnstableAttribute("IDrawingContextImpl usage is not supported in Avalonia 11.0.")]\r\npublic static IDrawingContextImpl WrapSkiaCanvas(\r\n	SKCanvas canvas,\r\n	Vector dpi\r\n)\n'})})}),(0,i.jsx)(n,{value:"vb",label:"VB",children:(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-vb",children:'<UnstableAttribute("IDrawingContextImpl usage is not supported in Avalonia 11.0.")>\r\nPublic Shared Function WrapSkiaCanvas ( \r\n	canvas As SKCanvas,\r\n	dpi As Vector\r\n) As IDrawingContextImpl\n'})})}),(0,i.jsx)(n,{value:"fsharp",label:"F#",children:(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-fsharp",children:'[<UnstableAttribute("IDrawingContextImpl usage is not supported in Avalonia 11.0.")>]\r\nstatic member WrapSkiaCanvas : \r\n        canvas : SKCanvas * \r\n        dpi : Vector -> IDrawingContextImpl \n'})})})]}),"\n",(0,i.jsx)("a",{href:"https://github.com/AvaloniaUI/Avalonia/tree/master/src/Skia/Avalonia.Skia/Helpers/DrawingContextHelper.cs#L47",title:"View the source code",children:"View Source"}),"\n",(0,i.jsx)(a.h4,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)("dl",{children:[(0,i.jsx)("dt",{children:"\xa0\xa0SKCanvas"}),(0,i.jsx)("dd",{children:"Skia canvas to render into."}),(0,i.jsxs)("dt",{children:["\xa0\xa0",(0,i.jsx)("a",{href:"T_Avalonia_Vector",children:"Vector"})]}),(0,i.jsx)("dd",{})]}),"\n",(0,i.jsx)(a.h4,{id:"return-value",children:"Return Value"}),"\n",(0,i.jsxs)(a.p,{children:["IDrawingContextImpl",(0,i.jsx)(a.br,{}),"\n","DrawingContext"]}),"\n",(0,i.jsx)(a.h2,{id:"see-also",children:"See Also"}),"\n",(0,i.jsx)(a.h4,{id:"reference",children:"Reference"}),"\n",(0,i.jsxs)(a.p,{children:[(0,i.jsx)("a",{href:"T_Avalonia_Skia_Helpers_DrawingContextHelper",children:"DrawingContextHelper Class"}),(0,i.jsx)(a.br,{}),"\n",(0,i.jsx)("a",{href:"N_Avalonia_Skia_Helpers",children:"Avalonia.Skia.Helpers Namespace"})]})]})}function p(e={}){let{wrapper:a}={...(0,s.a)(),...e.components};return a?(0,i.jsx)(a,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}function v(e,a){throw Error("Expected "+(a?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},116070:function(e,a,n){n.d(a,{Z:()=>l,a:()=>t});var r=n(841699);let i={},s=r.createContext(i);function t(e){let a=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function l(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),r.createElement(s.Provider,{value:a},e.children)}},884:function(e){e.exports=JSON.parse('{"id":"M_Avalonia_Skia_Helpers_DrawingContextHelper_WrapSkiaCanvas","title":"WrapSkiaCanvas Method","description":"Wrap Skia canvas in drawing context so we can use Avalonia api to render to external skia canvas this is useful in scenarios where canvas is not controlled by application, but received from another non avalonia api like: SKCanvas canvas = SKDocument.BeginPage(...);","source":"@site/docs/M_Avalonia_Skia_Helpers_DrawingContextHelper_WrapSkiaCanvas.md","sourceDirName":".","slug":"/M_Avalonia_Skia_Helpers_DrawingContextHelper_WrapSkiaCanvas","permalink":"/Ava-ApiTests/docs/M_Avalonia_Skia_Helpers_DrawingContextHelper_WrapSkiaCanvas","draft":false,"unlisted":false,"editUrl":"https://github.com/timunie/Ava-ApiTests/docs/M_Avalonia_Skia_Helpers_DrawingContextHelper_WrapSkiaCanvas.md","tags":[],"version":"current","frontMatter":{}}')}}]);