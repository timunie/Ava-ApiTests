"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["27010"],{412724:function(e,n,r){r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>d,frontMatter:()=>a,metadata:()=>t,toc:()=>c});var t=r(969586),s=r(696773),i=r(116070);let a={},l="Key Property",o={},c=[{value:"Definition",id:"definition",level:2},{value:"Property Value",id:"property-value",level:4},{value:"Remarks",id:"remarks",level:2},{value:"See Also",id:"see-also",level:2},{value:"Reference",id:"reference",level:4}];function h(e){let n={br:"br",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components},{TabItem:r,Tabs:t}=n;return r||u("TabItem",!0),t||u("Tabs",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"key-property",children:"Key Property"})}),"\n",(0,s.jsxs)(n.p,{children:["Gets the virtual-key for the associated event.",(0,s.jsx)(n.br,{}),"\n","A given physical key can result in different virtual keys depending on the current keyboard layout.",(0,s.jsx)(n.br,{}),"\n","This is the key that is generally referred to when creating keyboard shortcuts."]}),"\n",(0,s.jsxs)(n.p,{children:["For example, when pressing the key located at the ",(0,s.jsx)(n.code,{children:"Z"})," position on standard US English QWERTY keyboard, this property returns:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)("a",{href:"T_Avalonia_Input_Key",children:"Z"})," for an English (QWERTY) layout"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)("a",{href:"T_Avalonia_Input_Key",children:"W"})," for a French (AZERTY) layout"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)("a",{href:"T_Avalonia_Input_Key",children:"Y"})," for a German (QWERTZ) layout"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)("a",{href:"T_Avalonia_Input_Key",children:"Z"})," for a Russian (JCUKEN) layout"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"definition",children:"Definition"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Namespace:"})," ",(0,s.jsx)("a",{href:"N_Avalonia_Input",children:"Avalonia.Input"}),(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.strong,{children:"Assembly:"})," Avalonia.Base (in Avalonia.Base.dll)"]}),"\n",(0,s.jsxs)(t,{groupId:"api-code-preview",children:[(0,s.jsx)(r,{value:"csharp",label:"C#",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"public Key Key { get; init; }\n"})})}),(0,s.jsx)(r,{value:"vb",label:"VB",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-vb",children:"Public Property Key As Key\r\n	Get\r\n	Set\n"})})}),(0,s.jsx)(r,{value:"fsharp",label:"F#",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-fsharp",children:"member Key : Key with get, set\n"})})})]}),"\n",(0,s.jsx)("a",{href:"https://github.com/AvaloniaUI/Avalonia/tree/master/src/Avalonia.Base/Input/KeyEventArgs.cs#L34",title:"View the source code",children:"View Source"}),"\n",(0,s.jsx)(n.h4,{id:"property-value",children:"Property Value"}),"\n",(0,s.jsx)("a",{href:"T_Avalonia_Input_Key",children:"Key"}),"\n",(0,s.jsx)(n.h2,{id:"remarks",children:"Remarks"}),"\n",(0,s.jsxs)(n.p,{children:["This property should be used for letter-related shortcuts only.",(0,s.jsx)(n.br,{}),"\n","Prefer using ",(0,s.jsx)("a",{href:"P_Avalonia_Input_KeyEventArgs_PhysicalKey",children:"PhysicalKey"})," if you need to refer to a key given its position on the keyboard (a common usage is moving the player with WASD-like keys in games), or ",(0,s.jsx)("a",{href:"P_Avalonia_Input_KeyEventArgs_KeySymbol",children:"KeySymbol"})," if you want to know which character the key will output.",(0,s.jsx)(n.br,{}),"\n","Avoid using this for shortcuts related to punctuation keys, as they differ wildly depending on keyboard layouts."]}),"\n",(0,s.jsx)(n.h2,{id:"see-also",children:"See Also"}),"\n",(0,s.jsx)(n.h4,{id:"reference",children:"Reference"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)("a",{href:"T_Avalonia_Input_KeyEventArgs",children:"KeyEventArgs Class"}),(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)("a",{href:"N_Avalonia_Input",children:"Avalonia.Input Namespace"}),(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)("a",{href:"P_Avalonia_Input_KeyEventArgs_PhysicalKey",children:"PhysicalKey"}),(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)("a",{href:"P_Avalonia_Input_KeyEventArgs_KeySymbol",children:"KeySymbol"})]})]})}function d(e={}){let{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}function u(e,n){throw Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},116070:function(e,n,r){r.d(n,{Z:()=>l,a:()=>a});var t=r(841699);let s={},i=t.createContext(s);function a(e){let n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(i.Provider,{value:n},e.children)}},969586:function(e){e.exports=JSON.parse('{"id":"P_Avalonia_Input_KeyEventArgs_Key","title":"Key Property","description":"Gets the virtual-key for the associated event.","source":"@site/docs/P_Avalonia_Input_KeyEventArgs_Key.md","sourceDirName":".","slug":"/P_Avalonia_Input_KeyEventArgs_Key","permalink":"/Ava-ApiTests/docs/P_Avalonia_Input_KeyEventArgs_Key","draft":false,"unlisted":false,"editUrl":"https://github.com/timunie/Ava-ApiTests/docs/P_Avalonia_Input_KeyEventArgs_Key.md","tags":[],"version":"current","frontMatter":{}}')}}]);