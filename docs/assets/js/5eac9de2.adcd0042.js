"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["797537"],{144767:function(e,n,r){r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>a,toc:()=>m});var a=r(921417),s=r(696773),t=r(116070);let o={},i="ToImmutable Method",l={},m=[{value:"Definition",id:"definition",level:2},{value:"Parameters",id:"parameters",level:4},{value:"Return Value",id:"return-value",level:4},{value:"Usage Note",id:"usage-note",level:4},{value:"See Also",id:"see-also",level:2},{value:"Reference",id:"reference",level:4}];function d(e){let n={br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,t.a)(),...e.components},{TabItem:r,Tabs:a}=n;return r||h("TabItem",!0),a||h("Tabs",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"toimmutable-method",children:"ToImmutable Method"})}),"\n",(0,s.jsx)(n.p,{children:"Converts a transform to an immutable transform."}),"\n",(0,s.jsx)(n.h2,{id:"definition",children:"Definition"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Namespace:"})," ",(0,s.jsx)("a",{href:"N_Avalonia_Media",children:"Avalonia.Media"}),(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.strong,{children:"Assembly:"})," Avalonia.Base (in Avalonia.Base.dll) Version: 11.2.0"]}),"\n",(0,s.jsxs)(a,{groupId:"api-code-preview",children:[(0,s.jsx)(r,{value:"csharp",label:"C#",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"public static ImmutableTransform ToImmutable(\r\n	this ITransform transform\r\n)\n"})})}),(0,s.jsx)(r,{value:"vb",label:"VB",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-vb",children:"<ExtensionAttribute>\r\nPublic Shared Function ToImmutable ( \r\n	transform As ITransform\r\n) As ImmutableTransform\n"})})}),(0,s.jsx)(r,{value:"fsharp",label:"F#",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-fsharp",children:"[<ExtensionAttribute>]\r\nstatic member ToImmutable : \r\n        transform : ITransform -> ImmutableTransform \n"})})})]}),"\n",(0,s.jsx)("a",{href:"https://github.com/AvaloniaUI/Avalonia/tree/master/src/Avalonia.Base/Media/TransformExtensions.cs#L21",title:"View the source code",children:"View Source"}),"\n",(0,s.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsxs)("dt",{children:["\xa0\xa0",(0,s.jsx)("a",{href:"T_Avalonia_Media_ITransform",children:"ITransform"})]}),(0,s.jsx)("dd",{children:"The transform."})]}),"\n",(0,s.jsx)(n.h4,{id:"return-value",children:"Return Value"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)("a",{href:"T_Avalonia_Media_Immutable_ImmutableTransform",children:"ImmutableTransform"}),(0,s.jsx)(n.br,{}),"\n","The result of calling ",(0,s.jsx)("a",{href:"M_Avalonia_Media_Transform_ToImmutable",children:"ToImmutable()"})," if the transform is mutable, otherwise ",(0,s.jsx)(n.em,{children:"transform"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"usage-note",children:"Usage Note"}),"\n",(0,s.jsxs)(n.p,{children:["In Visual Basic and C#, you can call this method as an instance method on any object of type ",(0,s.jsx)("a",{href:"T_Avalonia_Media_ITransform",children:"ITransform"}),". When you use instance method syntax to call this method, omit the first parameter. For more information, see ",(0,s.jsx)("a",{href:"https://docs.microsoft.com/dotnet/visual-basic/programming-guide/language-features/procedures/extension-methods",target:"_blank",rel:"noopener noreferrer",children:"Extension Methods (Visual Basic)"})," or ",(0,s.jsx)("a",{href:"https://docs.microsoft.com/dotnet/csharp/programming-guide/classes-and-structs/extension-methods",target:"_blank",rel:"noopener noreferrer",children:"Extension Methods (C# Programming Guide)"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"see-also",children:"See Also"}),"\n",(0,s.jsx)(n.h4,{id:"reference",children:"Reference"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)("a",{href:"T_Avalonia_Media_TransformExtensions",children:"TransformExtensions Class"}),(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)("a",{href:"N_Avalonia_Media",children:"Avalonia.Media Namespace"})]})]})}function c(e={}){let{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}function h(e,n){throw Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},116070:function(e,n,r){r.d(n,{Z:()=>i,a:()=>o});var a=r(841699);let s={},t=a.createContext(s);function o(e){let n=a.useContext(t);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),a.createElement(t.Provider,{value:n},e.children)}},921417:function(e){e.exports=JSON.parse('{"id":"M_Avalonia_Media_TransformExtensions_ToImmutable","title":"ToImmutable Method","description":"Converts a transform to an immutable transform.","source":"@site/docs/M_Avalonia_Media_TransformExtensions_ToImmutable.md","sourceDirName":".","slug":"/M_Avalonia_Media_TransformExtensions_ToImmutable","permalink":"/Ava-ApiTests/docs/M_Avalonia_Media_TransformExtensions_ToImmutable","draft":false,"unlisted":false,"editUrl":"https://github.com/timunie/Ava-ApiTests/docs/M_Avalonia_Media_TransformExtensions_ToImmutable.md","tags":[],"version":"current","frontMatter":{}}')}}]);