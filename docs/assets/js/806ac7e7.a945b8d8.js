"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["693369"],{306148:function(e,t,a){a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>d});var r=a(556799),n=a(696773),l=a(116070);let s={},i="Optional<T> Structure",o={},d=[{value:"Definition",id:"definition",level:2},{value:"Type Parameters",id:"type-parameters",level:4},{value:"Remarks",id:"remarks",level:2},{value:"Constructors",id:"constructors",level:2},{value:"Properties",id:"properties",level:2},{value:"Methods",id:"methods",level:2},{value:"Operators",id:"operators",level:2},{value:"See Also",id:"see-also",level:2},{value:"Reference",id:"reference",level:4}];function c(e){let t={br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,l.a)(),...e.components},{TabItem:a,Tabs:r}=t;return a||p("TabItem",!0),r||p("Tabs",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"optionalt-structure",children:"Optional<T> Structure"})}),"\n",(0,n.jsx)(t.p,{children:"An optional typed value."}),"\n",(0,n.jsx)(t.h2,{id:"definition",children:"Definition"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Namespace:"})," ",(0,n.jsx)("a",{href:"N_Avalonia_Data",children:"Avalonia.Data"}),(0,n.jsx)(t.br,{}),"\n",(0,n.jsx)(t.strong,{children:"Assembly:"})," Avalonia.Base (in Avalonia.Base.dll)"]}),"\n",(0,n.jsxs)(r,{groupId:"api-code-preview",children:[(0,n.jsx)(a,{value:"csharp",label:"C#",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-csharp",children:"public readonly struct Optional<T> : IEquatable<Optional<T>>\r\n\n"})})}),(0,n.jsx)(a,{value:"vb",label:"VB",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-vb",children:"Public Structure Optional(Of T)\r\n	Implements IEquatable(Of Optional(Of T))\n"})})}),(0,n.jsx)(a,{value:"fsharp",label:"F#",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-fsharp",children:"[<SealedAttribute>]\r\ntype Optional<'T> = \r\n    struct\r\n        inherit ValueType\r\n        interface IEquatable<Optional<'T>>\r\n    end\n"})})})]}),"\n",(0,n.jsx)("a",{href:"https://github.com/AvaloniaUI/Avalonia/tree/master/src/Avalonia.Base/Data/Optional.cs",title:"View the source code",children:"View Source"}),"\n",(0,n.jsxs)("table",{children:[(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("strong",{children:"Inheritance"})}),(0,n.jsxs)("td",{children:[(0,n.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.object",target:"_blank",rel:"noopener noreferrer",children:"Object"}),"  →  ",(0,n.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.valuetype",target:"_blank",rel:"noopener noreferrer",children:"ValueType"}),"  →  Optional(T)"]})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("strong",{children:"Implements"})}),(0,n.jsxs)("td",{children:[(0,n.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.iequatable-1",target:"_blank",rel:"noopener noreferrer",children:"IEquatable"}),"(Optional(T))"]})]})]}),"\n",(0,n.jsx)(t.h4,{id:"type-parameters",children:"Type Parameters"}),"\n",(0,n.jsxs)("dl",{children:[(0,n.jsx)("dt",{}),(0,n.jsx)("dd",{children:"The value type."})]}),"\n",(0,n.jsx)(t.h2,{id:"remarks",children:"Remarks"}),"\n",(0,n.jsxs)(t.p,{children:["This struct is similar to ",(0,n.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.nullable-1",target:"_blank",rel:"noopener noreferrer",children:"Nullable(T)"})," except it also accepts reference types: note that null is a valid value for reference types. It is also similar to ",(0,n.jsx)("a",{href:"T_Avalonia_Data_BindingValue_1",children:"BindingValue(T)"}),' but has only two states: "value present" and "value missing". To create a new optional value you can: - For a simple value, call the Optional(T) constructor or use an implicit conversion from ',(0,n.jsx)(t.em,{children:"T"})," - For an missing value, use ",(0,n.jsx)("a",{href:"P_Avalonia_Data_Optional_1_Empty",children:"Empty"})," or simply ",(0,n.jsx)(t.code,{children:"default"})]}),"\n",(0,n.jsx)(t.h2,{id:"constructors",children:"Constructors"}),"\n",(0,n.jsx)("table",{children:(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_Data_Optional_1__ctor",children:"Optional(T)(T)"})}),(0,n.jsx)("td",{children:"Initializes a new instance of the Optional(T) struct with value."})]})}),"\n",(0,n.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,n.jsxs)("table",{children:[(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"P_Avalonia_Data_Optional_1_Empty",children:"Empty"})}),(0,n.jsx)("td",{children:"Returns an Optional(T) without a value."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"P_Avalonia_Data_Optional_1_HasValue",children:"HasValue"})}),(0,n.jsx)("td",{children:"Gets a value indicating whether a value is present."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"P_Avalonia_Data_Optional_1_Value",children:"Value"})}),(0,n.jsx)("td",{children:"Gets the value."})]})]}),"\n",(0,n.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,n.jsxs)("table",{children:[(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_Data_Optional_1_Equals_1",children:"Equals(Object)"})}),(0,n.jsxs)("td",{children:["Indicates whether this instance and a specified object are equal.",(0,n.jsx)("br",{}),"(Overrides ",(0,n.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.valuetype.equals",target:"_blank",rel:"noopener noreferrer",children:"ValueType.Equals(Object)"}),")"]})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_Data_Optional_1_Equals",children:"Equals(Optional(T))"})}),(0,n.jsx)("td",{children:"Indicates whether the current object is equal to another object of the same type."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_Data_Optional_1_GetHashCode",children:"GetHashCode()"})}),(0,n.jsxs)("td",{children:["Returns the hash code for this instance.",(0,n.jsx)("br",{}),"(Overrides ",(0,n.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode",target:"_blank",rel:"noopener noreferrer",children:"ValueType.GetHashCode()"}),")"]})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.object.gettype",target:"_blank",rel:"noopener noreferrer",children:"GetType()"})}),(0,n.jsxs)("td",{children:["Gets the ",(0,n.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.type",target:"_blank",rel:"noopener noreferrer",children:"Type"})," of the current instance.",(0,n.jsx)("br",{}),"(Inherited from ",(0,n.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.object",target:"_blank",rel:"noopener noreferrer",children:"Object"}),")"]})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_Data_Optional_1_GetValueOrDefault",children:"GetValueOrDefault()"})}),(0,n.jsx)("td",{children:"Gets the value if present, otherwise the default value."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_Data_Optional_1_GetValueOrDefault_1",children:"GetValueOrDefault(T)"})}),(0,n.jsx)("td",{children:"Gets the value if present, otherwise a default value."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_Data_Optional_1_GetValueOrDefault__1",children:"GetValueOrDefault(TResult)()"})}),(0,n.jsx)("td",{children:"Gets the value if present, otherwise the default value."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_Data_Optional_1_GetValueOrDefault__1_1",children:"GetValueOrDefault(TResult)(TResult)"})}),(0,n.jsx)("td",{children:"Gets the value if present, otherwise a default value."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_Data_Optional_1_ToObject",children:"ToObject()"})}),(0,n.jsxs)("td",{children:["Casts the value (if any) to an ",(0,n.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.object",target:"_blank",rel:"noopener noreferrer",children:"Object"}),"."]})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_Data_Optional_1_ToString",children:"ToString()"})}),(0,n.jsxs)("td",{children:["Returns the fully qualified type name of this instance.",(0,n.jsx)("br",{}),"(Overrides ",(0,n.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.valuetype.tostring",target:"_blank",rel:"noopener noreferrer",children:"ValueType.ToString()"}),")"]})]})]}),"\n",(0,n.jsx)(t.h2,{id:"operators",children:"Operators"}),"\n",(0,n.jsxs)("table",{children:[(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_Data_Optional_1_op_Equality",children:"Equality(Optional(T), Optional(T))"})}),(0,n.jsx)("td",{children:"Compares two Optional(T)s for equality."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_Data_Optional_1_op_Implicit",children:"Implicit(T to Optional(T))"})}),(0,n.jsx)("td",{children:"Creates an Optional(T) from an instance of the underlying value type."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_Data_Optional_1_op_Inequality",children:"Inequality(Optional(T), Optional(T))"})}),(0,n.jsx)("td",{children:"Compares two Optional(T)s for inequality."})]})]}),"\n",(0,n.jsx)(t.h2,{id:"see-also",children:"See Also"}),"\n",(0,n.jsx)(t.h4,{id:"reference",children:"Reference"}),"\n",(0,n.jsx)("a",{href:"N_Avalonia_Data",children:"Avalonia.Data Namespace"})]})}function h(e={}){let{wrapper:t}={...(0,l.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}function p(e,t){throw Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},116070:function(e,t,a){a.d(t,{Z:()=>i,a:()=>s});var r=a(841699);let n={},l=r.createContext(n);function s(e){let t=r.useContext(l);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),r.createElement(l.Provider,{value:t},e.children)}},556799:function(e){e.exports=JSON.parse('{"id":"T_Avalonia_Data_Optional_1","title":"Optional&lt;T&gt; Structure","description":"An optional typed value.","source":"@site/docs/T_Avalonia_Data_Optional_1.md","sourceDirName":".","slug":"/T_Avalonia_Data_Optional_1","permalink":"/Ava-ApiTests/docs/T_Avalonia_Data_Optional_1","draft":false,"unlisted":false,"editUrl":"https://github.com/timunie/Ava-ApiTests/docs/T_Avalonia_Data_Optional_1.md","tags":[],"version":"current","frontMatter":{},"sidebar":"documentationSidebar","previous":{"title":"InstancedBinding Class","permalink":"/Ava-ApiTests/docs/T_Avalonia_Data_InstancedBinding"},"next":{"title":"OptionalExtensions Class","permalink":"/Ava-ApiTests/docs/T_Avalonia_Data_OptionalExtensions"}}')}}]);