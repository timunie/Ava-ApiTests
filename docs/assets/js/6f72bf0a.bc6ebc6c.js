"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["855392"],{451970:function(e,n,a){a.r(n),a.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>c});var i=a(348383),s=a(696773),r=a(116070);let t={},l="FindLogicalDescendantOfType<T> Method",o={},c=[{value:"Definition",id:"definition",level:2},{value:"Parameters",id:"parameters",level:4},{value:"Type Parameters",id:"type-parameters",level:4},{value:"Return Value",id:"return-value",level:4},{value:"Usage Note",id:"usage-note",level:4},{value:"See Also",id:"see-also",level:2},{value:"Reference",id:"reference",level:4}];function d(e){let n={br:"br",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,r.a)(),...e.components},{TabItem:a,Tabs:i}=n;return a||p("TabItem",!0),i||p("Tabs",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"findlogicaldescendantoftypet-method",children:"FindLogicalDescendantOfType<T> Method"})}),"\n",(0,s.jsx)(n.p,{children:"Finds first descendant of given type."}),"\n",(0,s.jsx)(n.h2,{id:"definition",children:"Definition"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Namespace:"})," ",(0,s.jsx)("a",{href:"N_Avalonia_LogicalTree",children:"Avalonia.LogicalTree"}),(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.strong,{children:"Assembly:"})," Avalonia.Base (in Avalonia.Base.dll) Version: 11.2.0"]}),"\n",(0,s.jsxs)(i,{groupId:"api-code-preview",children:[(0,s.jsx)(a,{value:"csharp",label:"C#",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"public static T FindLogicalDescendantOfType<T>(\r\n	this ILogical? logical,\r\n	bool includeSelf = false\r\n)\r\nwhere T : class\r\n\n"})})}),(0,s.jsx)(a,{value:"vb",label:"VB",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-vb",children:"<ExtensionAttribute>\r\nPublic Shared Function FindLogicalDescendantOfType(Of T As Class) ( \r\n	logical As ILogical,\r\n	Optional includeSelf As Boolean = false\r\n) As T\n"})})}),(0,s.jsx)(a,{value:"fsharp",label:"F#",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-fsharp",children:"[<ExtensionAttribute>]\r\nstatic member FindLogicalDescendantOfType : \r\n        logical : ILogical * \r\n        ?includeSelf : bool \r\n(* Defaults:\r\n        let _includeSelf = defaultArg includeSelf false\r\n*)\r\n-> 'T  when 'T : not struct\n"})})})]}),"\n",(0,s.jsx)("a",{href:"https://github.com/AvaloniaUI/Avalonia/tree/master/src/Avalonia.Base/LogicalTree/LogicalExtensions.cs#L125",title:"View the source code",children:"View Source"}),"\n",(0,s.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsxs)("dt",{children:["\xa0\xa0",(0,s.jsx)("a",{href:"T_Avalonia_LogicalTree_ILogical",children:"ILogical"})]}),(0,s.jsx)("dd",{children:"The logical."}),(0,s.jsxs)("dt",{children:["\xa0\xa0",(0,s.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.boolean",target:"_blank",rel:"noopener noreferrer",children:"Boolean"}),"\xa0\xa0(Optional)"]}),(0,s.jsx)("dd",{children:"If given logical should be included in search."})]}),"\n",(0,s.jsx)(n.h4,{id:"type-parameters",children:"Type Parameters"}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{}),(0,s.jsx)("dd",{children:"Descendant type."})]}),"\n",(0,s.jsx)(n.h4,{id:"return-value",children:"Return Value"}),"\n",(0,s.jsxs)(n.p,{children:["T",(0,s.jsx)(n.br,{}),"\n","First descendant of given type."]}),"\n",(0,s.jsx)(n.h4,{id:"usage-note",children:"Usage Note"}),"\n",(0,s.jsxs)(n.p,{children:["In Visual Basic and C#, you can call this method as an instance method on any object of type ",(0,s.jsx)("a",{href:"T_Avalonia_LogicalTree_ILogical",children:"ILogical"}),". When you use instance method syntax to call this method, omit the first parameter. For more information, see ",(0,s.jsx)("a",{href:"https://docs.microsoft.com/dotnet/visual-basic/programming-guide/language-features/procedures/extension-methods",target:"_blank",rel:"noopener noreferrer",children:"Extension Methods (Visual Basic)"})," or ",(0,s.jsx)("a",{href:"https://docs.microsoft.com/dotnet/csharp/programming-guide/classes-and-structs/extension-methods",target:"_blank",rel:"noopener noreferrer",children:"Extension Methods (C# Programming Guide)"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"see-also",children:"See Also"}),"\n",(0,s.jsx)(n.h4,{id:"reference",children:"Reference"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)("a",{href:"T_Avalonia_LogicalTree_LogicalExtensions",children:"LogicalExtensions Class"}),(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)("a",{href:"N_Avalonia_LogicalTree",children:"Avalonia.LogicalTree Namespace"})]})]})}function h(e={}){let{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}function p(e,n){throw Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},116070:function(e,n,a){a.d(n,{Z:()=>l,a:()=>t});var i=a(841699);let s={},r=i.createContext(s);function t(e){let n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),i.createElement(r.Provider,{value:n},e.children)}},348383:function(e){e.exports=JSON.parse('{"id":"M_Avalonia_LogicalTree_LogicalExtensions_FindLogicalDescendantOfType__1","title":"FindLogicalDescendantOfType&lt;T&gt; Method","description":"Finds first descendant of given type.","source":"@site/docs/M_Avalonia_LogicalTree_LogicalExtensions_FindLogicalDescendantOfType__1.md","sourceDirName":".","slug":"/M_Avalonia_LogicalTree_LogicalExtensions_FindLogicalDescendantOfType__1","permalink":"/Ava-ApiTests/docs/M_Avalonia_LogicalTree_LogicalExtensions_FindLogicalDescendantOfType__1","draft":false,"unlisted":false,"editUrl":"https://github.com/timunie/Ava-ApiTests/docs/M_Avalonia_LogicalTree_LogicalExtensions_FindLogicalDescendantOfType__1.md","tags":[],"version":"current","frontMatter":{}}')}}]);