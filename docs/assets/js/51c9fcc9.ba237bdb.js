"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["877127"],{953111:function(e,o,n){n.r(o),n.d(o,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>a,metadata:()=>r,toc:()=>p});var r=n(271326),i=n(696773),t=n(116070);let a={},s="ImportSemaphore(IPlatformHandle) Method",l={},p=[{value:"Definition",id:"definition",level:2},{value:"Parameters",id:"parameters",level:4},{value:"Return Value",id:"return-value",level:4},{value:"See Also",id:"see-also",level:2},{value:"Reference",id:"reference",level:4}];function d(e){let o={br:"br",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,t.a)(),...e.components},{TabItem:n,Tabs:r}=o;return n||h("TabItem",!0),r||h("Tabs",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(o.header,{children:(0,i.jsx)(o.h1,{id:"importsemaphoreiplatformhandle-method",children:"ImportSemaphore(IPlatformHandle) Method"})}),"\n",(0,i.jsx)(o.p,{children:"Asynchronously imports a semaphore object. The returned object is immediately usable. If import operation fails, the caller is responsible for destroying the handle"}),"\n",(0,i.jsx)(o.h2,{id:"definition",children:"Definition"}),"\n",(0,i.jsxs)(o.p,{children:[(0,i.jsx)(o.strong,{children:"Namespace:"})," ",(0,i.jsx)("a",{href:"N_Avalonia_Rendering_Composition",children:"Avalonia.Rendering.Composition"}),(0,i.jsx)(o.br,{}),"\n",(0,i.jsx)(o.strong,{children:"Assembly:"})," Avalonia.Base (in Avalonia.Base.dll) Version: 11.2.0"]}),"\n",(0,i.jsxs)(r,{groupId:"api-code-preview",children:[(0,i.jsx)(n,{value:"csharp",label:"C#",children:(0,i.jsx)(o.pre,{children:(0,i.jsx)(o.code,{className:"language-csharp",children:"ICompositionImportedGpuSemaphore ImportSemaphore(\r\n	IPlatformHandle handle\r\n)\n"})})}),(0,i.jsx)(n,{value:"vb",label:"VB",children:(0,i.jsx)(o.pre,{children:(0,i.jsx)(o.code,{className:"language-vb",children:"Function ImportSemaphore ( \r\n	handle As IPlatformHandle\r\n) As ICompositionImportedGpuSemaphore\n"})})}),(0,i.jsx)(n,{value:"fsharp",label:"F#",children:(0,i.jsx)(o.pre,{children:(0,i.jsx)(o.code,{className:"language-fsharp",children:"abstract ImportSemaphore : \r\n        handle : IPlatformHandle -> ICompositionImportedGpuSemaphore \n"})})})]}),"\n",(0,i.jsx)(o.h4,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)("dl",{children:[(0,i.jsxs)("dt",{children:["\xa0\xa0",(0,i.jsx)("a",{href:"T_Avalonia_Platform_IPlatformHandle",children:"IPlatformHandle"})]}),(0,i.jsx)("dd",{children:"\xa0"})]}),"\n",(0,i.jsx)(o.h4,{id:"return-value",children:"Return Value"}),"\n",(0,i.jsx)("a",{href:"T_Avalonia_Rendering_Composition_ICompositionImportedGpuSemaphore",children:"ICompositionImportedGpuSemaphore"}),"\n",(0,i.jsx)(o.h2,{id:"see-also",children:"See Also"}),"\n",(0,i.jsx)(o.h4,{id:"reference",children:"Reference"}),"\n",(0,i.jsxs)(o.p,{children:[(0,i.jsx)("a",{href:"T_Avalonia_Rendering_Composition_ICompositionGpuInterop",children:"ICompositionGpuInterop Interface"}),(0,i.jsx)(o.br,{}),"\n",(0,i.jsx)("a",{href:"Overload_Avalonia_Rendering_Composition_ICompositionGpuInterop_ImportSemaphore",children:"ImportSemaphore Overload"}),(0,i.jsx)(o.br,{}),"\n",(0,i.jsx)("a",{href:"N_Avalonia_Rendering_Composition",children:"Avalonia.Rendering.Composition Namespace"})]})]})}function m(e={}){let{wrapper:o}={...(0,t.a)(),...e.components};return o?(0,i.jsx)(o,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}function h(e,o){throw Error("Expected "+(o?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},116070:function(e,o,n){n.d(o,{Z:()=>s,a:()=>a});var r=n(841699);let i={},t=r.createContext(i);function a(e){let o=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(o):{...o,...e}},[o,e])}function s(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(t.Provider,{value:o},e.children)}},271326:function(e){e.exports=JSON.parse('{"id":"M_Avalonia_Rendering_Composition_ICompositionGpuInterop_ImportSemaphore","title":"ImportSemaphore(IPlatformHandle) Method","description":"Asynchronously imports a semaphore object. The returned object is immediately usable. If import operation fails, the caller is responsible for destroying the handle","source":"@site/docs/M_Avalonia_Rendering_Composition_ICompositionGpuInterop_ImportSemaphore.md","sourceDirName":".","slug":"/M_Avalonia_Rendering_Composition_ICompositionGpuInterop_ImportSemaphore","permalink":"/Ava-ApiTests/docs/M_Avalonia_Rendering_Composition_ICompositionGpuInterop_ImportSemaphore","draft":false,"unlisted":false,"editUrl":"https://github.com/timunie/Ava-ApiTests/docs/M_Avalonia_Rendering_Composition_ICompositionGpuInterop_ImportSemaphore.md","tags":[],"version":"current","frontMatter":{}}')}}]);