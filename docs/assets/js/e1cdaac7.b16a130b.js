"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["78274"],{197399:function(e,r,n){n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>d});var i=n(934462),s=n(696773),a=n(116070);let t={},o="MeasureOverride Method",l={},d=[{value:"Definition",id:"definition",level:2},{value:"Parameters",id:"parameters",level:4},{value:"Return Value",id:"return-value",level:4},{value:"Remarks",id:"remarks",level:2},{value:"See Also",id:"see-also",level:2},{value:"Reference",id:"reference",level:4}];function c(e){let r={br:"br",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,a.a)(),...e.components},{TabItem:n,Tabs:i}=r;return n||u("TabItem",!0),i||u("Tabs",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"measureoverride-method",children:"MeasureOverride Method"})}),"\n",(0,s.jsx)(r.p,{children:"Updates DesiredSize of the DockPanel. Called by parent Control. This is the first pass of layout."}),"\n",(0,s.jsx)(r.h2,{id:"definition",children:"Definition"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Namespace:"})," ",(0,s.jsx)("a",{href:"N_Avalonia_Controls",children:"Avalonia.Controls"}),(0,s.jsx)(r.br,{}),"\n",(0,s.jsx)(r.strong,{children:"Assembly:"})," Avalonia.Controls (in Avalonia.Controls.dll)"]}),"\n",(0,s.jsxs)(i,{groupId:"api-code-preview",children:[(0,s.jsx)(n,{value:"csharp",label:"C#",children:(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-csharp",children:"protected override Size MeasureOverride(\r\n	Size constraint\r\n)\n"})})}),(0,s.jsx)(n,{value:"vb",label:"VB",children:(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-vb",children:"Protected Overrides Function MeasureOverride ( \r\n	constraint As Size\r\n) As Size\n"})})}),(0,s.jsx)(n,{value:"fsharp",label:"F#",children:(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-fsharp",children:"abstract MeasureOverride : \r\n        constraint : Size -> Size \r\noverride MeasureOverride : \r\n        constraint : Size -> Size \n"})})})]}),"\n",(0,s.jsx)("a",{href:"https://github.com/AvaloniaUI/Avalonia/tree/master/src/Avalonia.Controls/DockPanel.cs#L91",title:"View the source code",children:"View Source"}),"\n",(0,s.jsx)(r.h4,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsxs)("dt",{children:["\xa0\xa0",(0,s.jsx)("a",{href:"T_Avalonia_Size",children:"Size"})]}),(0,s.jsx)("dd",{children:'Constraint size is an "upper limit" that the return value should not exceed.'})]}),"\n",(0,s.jsx)(r.h4,{id:"return-value",children:"Return Value"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)("a",{href:"T_Avalonia_Size",children:"Size"}),(0,s.jsx)(r.br,{}),"\n","The Panel's desired size."]}),"\n",(0,s.jsx)(r.h2,{id:"remarks",children:"Remarks"}),"\n",(0,s.jsxs)(r.p,{children:["Children are measured based on their sizing properties and ",(0,s.jsx)("a",{href:"T_Avalonia_Controls_Dock",children:"Dock"}),". Each child is allowed to consume all of the space on the side on which it is docked; Left/Right docked children are granted all vertical space for their entire width, and Top/Bottom docked children are granted all horizontal space for their entire height."]}),"\n",(0,s.jsx)(r.h2,{id:"see-also",children:"See Also"}),"\n",(0,s.jsx)(r.h4,{id:"reference",children:"Reference"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)("a",{href:"T_Avalonia_Controls_DockPanel",children:"DockPanel Class"}),(0,s.jsx)(r.br,{}),"\n",(0,s.jsx)("a",{href:"N_Avalonia_Controls",children:"Avalonia.Controls Namespace"})]})]})}function h(e={}){let{wrapper:r}={...(0,a.a)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}function u(e,r){throw Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},116070:function(e,r,n){n.d(r,{Z:()=>o,a:()=>t});var i=n(841699);let s={},a=i.createContext(s);function t(e){let r=i.useContext(a);return i.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),i.createElement(a.Provider,{value:r},e.children)}},934462:function(e){e.exports=JSON.parse('{"id":"M_Avalonia_Controls_DockPanel_MeasureOverride","title":"MeasureOverride Method","description":"Updates DesiredSize of the DockPanel. Called by parent Control. This is the first pass of layout.","source":"@site/docs/M_Avalonia_Controls_DockPanel_MeasureOverride.md","sourceDirName":".","slug":"/M_Avalonia_Controls_DockPanel_MeasureOverride","permalink":"/Ava-ApiTests/docs/M_Avalonia_Controls_DockPanel_MeasureOverride","draft":false,"unlisted":false,"editUrl":"https://github.com/timunie/Ava-ApiTests/docs/M_Avalonia_Controls_DockPanel_MeasureOverride.md","tags":[],"version":"current","frontMatter":{}}')}}]);