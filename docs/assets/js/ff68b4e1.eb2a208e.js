"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["39346"],{889311:function(e,n,a){a.r(n),a.d(n,{assets:()=>t,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var o=a(608893),r=a(696773),s=a(116070);let i={},l="IsLogicalAncestorOf Method",t={},c=[{value:"Definition",id:"definition",level:2},{value:"Parameters",id:"parameters",level:4},{value:"Return Value",id:"return-value",level:4},{value:"Usage Note",id:"usage-note",level:4},{value:"See Also",id:"see-also",level:2},{value:"Reference",id:"reference",level:4}];function d(e){let n={br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,s.a)(),...e.components},{TabItem:a,Tabs:o}=n;return a||g("TabItem",!0),o||g("Tabs",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"islogicalancestorof-method",children:"IsLogicalAncestorOf Method"})}),"\n",(0,r.jsxs)(n.p,{children:["Tests whether an ",(0,r.jsx)("a",{href:"T_Avalonia_LogicalTree_ILogical",children:"ILogical"})," is an ancestor of another logical."]}),"\n",(0,r.jsx)(n.h2,{id:"definition",children:"Definition"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Namespace:"})," ",(0,r.jsx)("a",{href:"N_Avalonia_LogicalTree",children:"Avalonia.LogicalTree"}),(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.strong,{children:"Assembly:"})," Avalonia.Base (in Avalonia.Base.dll)"]}),"\n",(0,r.jsxs)(o,{groupId:"api-code-preview",children:[(0,r.jsx)(a,{value:"csharp",label:"C#",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"public static bool IsLogicalAncestorOf(\r\n	this ILogical? logical,\r\n	ILogical target\r\n)\n"})})}),(0,r.jsx)(a,{value:"vb",label:"VB",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-vb",children:"<ExtensionAttribute>\r\nPublic Shared Function IsLogicalAncestorOf ( \r\n	logical As ILogical,\r\n	target As ILogical\r\n) As Boolean\n"})})}),(0,r.jsx)(a,{value:"fsharp",label:"F#",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-fsharp",children:"[<ExtensionAttribute>]\r\nstatic member IsLogicalAncestorOf : \r\n        logical : ILogical * \r\n        target : ILogical -> bool \n"})})})]}),"\n",(0,r.jsx)("a",{href:"https://github.com/AvaloniaUI/Avalonia/tree/master/src/Avalonia.Base/LogicalTree/LogicalExtensions.cs#L190",title:"View the source code",children:"View Source"}),"\n",(0,r.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)("dl",{children:[(0,r.jsxs)("dt",{children:["\xa0\xa0",(0,r.jsx)("a",{href:"T_Avalonia_LogicalTree_ILogical",children:"ILogical"})]}),(0,r.jsx)("dd",{children:"The logical."}),(0,r.jsxs)("dt",{children:["\xa0\xa0",(0,r.jsx)("a",{href:"T_Avalonia_LogicalTree_ILogical",children:"ILogical"})]}),(0,r.jsx)("dd",{children:"The potential descendant."})]}),"\n",(0,r.jsx)(n.h4,{id:"return-value",children:"Return Value"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.boolean",target:"_blank",rel:"noopener noreferrer",children:"Boolean"}),(0,r.jsx)(n.br,{}),"\n","True if ",(0,r.jsx)(n.em,{children:"logical"})," is an ancestor of ",(0,r.jsx)(n.em,{children:"target"}),"; otherwise false."]}),"\n",(0,r.jsx)(n.h4,{id:"usage-note",children:"Usage Note"}),"\n",(0,r.jsxs)(n.p,{children:["In Visual Basic and C#, you can call this method as an instance method on any object of type ",(0,r.jsx)("a",{href:"T_Avalonia_LogicalTree_ILogical",children:"ILogical"}),". When you use instance method syntax to call this method, omit the first parameter. For more information, see ",(0,r.jsx)("a",{href:"https://docs.microsoft.com/dotnet/visual-basic/programming-guide/language-features/procedures/extension-methods",target:"_blank",rel:"noopener noreferrer",children:"Extension Methods (Visual Basic)"})," or ",(0,r.jsx)("a",{href:"https://docs.microsoft.com/dotnet/csharp/programming-guide/classes-and-structs/extension-methods",target:"_blank",rel:"noopener noreferrer",children:"Extension Methods (C# Programming Guide)"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"see-also",children:"See Also"}),"\n",(0,r.jsx)(n.h4,{id:"reference",children:"Reference"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)("a",{href:"T_Avalonia_LogicalTree_LogicalExtensions",children:"LogicalExtensions Class"}),(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)("a",{href:"N_Avalonia_LogicalTree",children:"Avalonia.LogicalTree Namespace"})]})]})}function h(e={}){let{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}function g(e,n){throw Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},116070:function(e,n,a){a.d(n,{Z:()=>l,a:()=>i});var o=a(841699);let r={},s=o.createContext(r);function i(e){let n=o.useContext(s);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),o.createElement(s.Provider,{value:n},e.children)}},608893:function(e){e.exports=JSON.parse('{"id":"M_Avalonia_LogicalTree_LogicalExtensions_IsLogicalAncestorOf","title":"IsLogicalAncestorOf Method","description":"Tests whether an ILogical is an ancestor of another logical.","source":"@site/docs/M_Avalonia_LogicalTree_LogicalExtensions_IsLogicalAncestorOf.md","sourceDirName":".","slug":"/M_Avalonia_LogicalTree_LogicalExtensions_IsLogicalAncestorOf","permalink":"/Ava-ApiTests/docs/M_Avalonia_LogicalTree_LogicalExtensions_IsLogicalAncestorOf","draft":false,"unlisted":false,"editUrl":"https://github.com/timunie/Ava-ApiTests/docs/M_Avalonia_LogicalTree_LogicalExtensions_IsLogicalAncestorOf.md","tags":[],"version":"current","frontMatter":{}}')}}]);