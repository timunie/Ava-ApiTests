"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["74429"],{187523:function(e,n,t){t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var o=t(794165),l=t(696773),r=t(116070);let i={},a="GetBetweenShowDelay Method",s={},c=[{value:"Definition",id:"definition",level:2},{value:"Parameters",id:"parameters",level:4},{value:"Return Value",id:"return-value",level:4},{value:"See Also",id:"see-also",level:2},{value:"Reference",id:"reference",level:4}];function h(e){let n={br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,r.a)(),...e.components},{TabItem:t,Tabs:o}=n;return t||p("TabItem",!0),o||p("Tabs",!0),(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"getbetweenshowdelay-method",children:"GetBetweenShowDelay Method"})}),"\n",(0,l.jsxs)(n.p,{children:["Gets the number of milliseconds since the last tooltip closed during which the tooltip of ",(0,l.jsx)(n.em,{children:"element"})," will open immediately, or a negative value indicating that the tooltip will always wait for ",(0,l.jsx)("a",{href:"F_Avalonia_Controls_ToolTip_ShowDelayProperty",children:"ShowDelayProperty"})," before opening."]}),"\n",(0,l.jsx)(n.h2,{id:"definition",children:"Definition"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Namespace:"})," ",(0,l.jsx)("a",{href:"N_Avalonia_Controls",children:"Avalonia.Controls"}),(0,l.jsx)(n.br,{}),"\n",(0,l.jsx)(n.strong,{children:"Assembly:"})," Avalonia.Controls (in Avalonia.Controls.dll)"]}),"\n",(0,l.jsxs)(o,{groupId:"api-code-preview",children:[(0,l.jsx)(t,{value:"csharp",label:"C#",children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-csharp",children:"public static int GetBetweenShowDelay(\r\n	Control element\r\n)\n"})})}),(0,l.jsx)(t,{value:"vb",label:"VB",children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-vb",children:"Public Shared Function GetBetweenShowDelay ( \r\n	element As Control\r\n) As Integer\n"})})}),(0,l.jsx)(t,{value:"fsharp",label:"F#",children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-fsharp",children:"static member GetBetweenShowDelay : \r\n        element : Control -> int \n"})})})]}),"\n",(0,l.jsx)("a",{href:"https://github.com/AvaloniaUI/Avalonia/tree/master/src/Avalonia.Controls/ToolTip.cs#L260",title:"View the source code",children:"View Source"}),"\n",(0,l.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n",(0,l.jsxs)("dl",{children:[(0,l.jsxs)("dt",{children:["\xa0\xa0",(0,l.jsx)("a",{href:"T_Avalonia_Controls_Control",children:"Control"})]}),(0,l.jsx)("dd",{children:"The control to get the property from."})]}),"\n",(0,l.jsx)(n.h4,{id:"return-value",children:"Return Value"}),"\n",(0,l.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.int32",target:"_blank",rel:"noopener noreferrer",children:"Int32"}),"\n",(0,l.jsx)(n.h2,{id:"see-also",children:"See Also"}),"\n",(0,l.jsx)(n.h4,{id:"reference",children:"Reference"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)("a",{href:"T_Avalonia_Controls_ToolTip",children:"ToolTip Class"}),(0,l.jsx)(n.br,{}),"\n",(0,l.jsx)("a",{href:"N_Avalonia_Controls",children:"Avalonia.Controls Namespace"})]})]})}function d(e={}){let{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(h,{...e})}):h(e)}function p(e,n){throw Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},116070:function(e,n,t){t.d(n,{Z:()=>a,a:()=>i});var o=t(841699);let l={},r=o.createContext(l);function i(e){let n=o.useContext(r);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:i(e.components),o.createElement(r.Provider,{value:n},e.children)}},794165:function(e){e.exports=JSON.parse('{"id":"M_Avalonia_Controls_ToolTip_GetBetweenShowDelay","title":"GetBetweenShowDelay Method","description":"Gets the number of milliseconds since the last tooltip closed during which the tooltip of element will open immediately, or a negative value indicating that the tooltip will always wait for ShowDelayProperty before opening.","source":"@site/docs/M_Avalonia_Controls_ToolTip_GetBetweenShowDelay.md","sourceDirName":".","slug":"/M_Avalonia_Controls_ToolTip_GetBetweenShowDelay","permalink":"/Ava-ApiTests/docs/M_Avalonia_Controls_ToolTip_GetBetweenShowDelay","draft":false,"unlisted":false,"editUrl":"https://github.com/timunie/Ava-ApiTests/docs/M_Avalonia_Controls_ToolTip_GetBetweenShowDelay.md","tags":[],"version":"current","frontMatter":{}}')}}]);