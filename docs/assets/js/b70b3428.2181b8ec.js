"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["336835"],{717936:function(e,r,a){a.r(r),a.d(r,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>t,toc:()=>c});var t=a(179129),n=a(696773),i=a(116070);let s={},l="TryMeasureCharacters Method",o={},c=[{value:"Definition",id:"definition",level:2},{value:"Parameters",id:"parameters",level:4},{value:"Return Value",id:"return-value",level:4},{value:"See Also",id:"see-also",level:2},{value:"Reference",id:"reference",level:4}];function d(e){let r={br:"br",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,i.a)(),...e.components},{TabItem:a,Tabs:t}=r;return a||u("TabItem",!0),t||u("Tabs",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.header,{children:(0,n.jsx)(r.h1,{id:"trymeasurecharacters-method",children:"TryMeasureCharacters Method"})}),"\n",(0,n.jsx)(r.p,{children:"Measures the number of characters that fit into available width."}),"\n",(0,n.jsx)(r.h2,{id:"definition",children:"Definition"}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"Namespace:"})," ",(0,n.jsx)("a",{href:"N_Avalonia_Media_TextFormatting",children:"Avalonia.Media.TextFormatting"}),(0,n.jsx)(r.br,{}),"\n",(0,n.jsx)(r.strong,{children:"Assembly:"})," Avalonia.Base (in Avalonia.Base.dll)"]}),"\n",(0,n.jsxs)(t,{groupId:"api-code-preview",children:[(0,n.jsx)(a,{value:"csharp",label:"C#",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-csharp",children:"public bool TryMeasureCharacters(\r\n	double availableWidth,\r\n	out int length\r\n)\n"})})}),(0,n.jsx)(a,{value:"vb",label:"VB",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-vb",children:"Public Function TryMeasureCharacters ( \r\n	availableWidth As Double,\r\n	<OutAttribute> ByRef length As Integer\r\n) As Boolean\n"})})}),(0,n.jsx)(a,{value:"fsharp",label:"F#",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-fsharp",children:"member TryMeasureCharacters : \r\n        availableWidth : float * \r\n        length : int byref -> bool \n"})})})]}),"\n",(0,n.jsx)("a",{href:"https://github.com/AvaloniaUI/Avalonia/tree/master/src/Avalonia.Base/Media/TextFormatting/ShapedTextRun.cs#L103",title:"View the source code",children:"View Source"}),"\n",(0,n.jsx)(r.h4,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsxs)("dl",{children:[(0,n.jsxs)("dt",{children:["\xa0\xa0",(0,n.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.double",target:"_blank",rel:"noopener noreferrer",children:"Double"})]}),(0,n.jsx)("dd",{children:"The available width."}),(0,n.jsxs)("dt",{children:["\xa0\xa0",(0,n.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.int32",target:"_blank",rel:"noopener noreferrer",children:"Int32"})]}),(0,n.jsx)("dd",{children:"The count of fitting characters."})]}),"\n",(0,n.jsx)(r.h4,{id:"return-value",children:"Return Value"}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.boolean",target:"_blank",rel:"noopener noreferrer",children:"Boolean"}),(0,n.jsx)(r.br,{}),"\n",(0,n.jsx)(r.code,{children:"true"})," if characters fit into the available width; otherwise, ",(0,n.jsx)(r.code,{children:"false"}),"."]}),"\n",(0,n.jsx)(r.h2,{id:"see-also",children:"See Also"}),"\n",(0,n.jsx)(r.h4,{id:"reference",children:"Reference"}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)("a",{href:"T_Avalonia_Media_TextFormatting_ShapedTextRun",children:"ShapedTextRun Class"}),(0,n.jsx)(r.br,{}),"\n",(0,n.jsx)("a",{href:"N_Avalonia_Media_TextFormatting",children:"Avalonia.Media.TextFormatting Namespace"})]})]})}function h(e={}){let{wrapper:r}={...(0,i.a)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}function u(e,r){throw Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},116070:function(e,r,a){a.d(r,{Z:()=>l,a:()=>s});var t=a(841699);let n={},i=t.createContext(n);function s(e){let r=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),t.createElement(i.Provider,{value:r},e.children)}},179129:function(e){e.exports=JSON.parse('{"id":"M_Avalonia_Media_TextFormatting_ShapedTextRun_TryMeasureCharacters","title":"TryMeasureCharacters Method","description":"Measures the number of characters that fit into available width.","source":"@site/docs/M_Avalonia_Media_TextFormatting_ShapedTextRun_TryMeasureCharacters.md","sourceDirName":".","slug":"/M_Avalonia_Media_TextFormatting_ShapedTextRun_TryMeasureCharacters","permalink":"/Ava-ApiTests/docs/M_Avalonia_Media_TextFormatting_ShapedTextRun_TryMeasureCharacters","draft":false,"unlisted":false,"editUrl":"https://github.com/timunie/Ava-ApiTests/docs/M_Avalonia_Media_TextFormatting_ShapedTextRun_TryMeasureCharacters.md","tags":[],"version":"current","frontMatter":{}}')}}]);