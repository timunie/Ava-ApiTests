"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["128023"],{777453:function(e,r,t){t.r(r),t.d(r,{assets:()=>d,contentTitle:()=>l,default:()=>c,frontMatter:()=>s,metadata:()=>i,toc:()=>o});var i=t(816651),n=t(696773),a=t(116070);let s={},l="Matrix Structure",d={},o=[{value:"Definition",id:"definition",level:2},{value:"Constructors",id:"constructors",level:2},{value:"Properties",id:"properties",level:2},{value:"Methods",id:"methods",level:2},{value:"Operators",id:"operators",level:2},{value:"Extension Methods",id:"extension-methods",level:2},{value:"See Also",id:"see-also",level:2},{value:"Reference",id:"reference",level:4}];function h(e){let r={br:"br",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,a.a)(),...e.components},{TabItem:t,Tabs:i}=r;return t||x("TabItem",!0),i||x("Tabs",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.header,{children:(0,n.jsx)(r.h1,{id:"matrix-structure",children:"Matrix Structure"})}),"\n",(0,n.jsx)(r.p,{children:"A 3x3 matrix."}),"\n",(0,n.jsx)(r.h2,{id:"definition",children:"Definition"}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"Namespace:"})," ",(0,n.jsx)("a",{href:"N_Avalonia",children:"Avalonia"}),(0,n.jsx)(r.br,{}),"\n",(0,n.jsx)(r.strong,{children:"Assembly:"})," Avalonia.Base (in Avalonia.Base.dll) Version: 11.2.0"]}),"\n",(0,n.jsxs)(i,{groupId:"api-code-preview",children:[(0,n.jsx)(t,{value:"csharp",label:"C#",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-csharp",children:"public readonly struct Matrix : IEquatable<Matrix>\n"})})}),(0,n.jsx)(t,{value:"vb",label:"VB",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-vb",children:"Public Structure Matrix\r\n	Implements IEquatable(Of Matrix)\n"})})}),(0,n.jsx)(t,{value:"fsharp",label:"F#",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-fsharp",children:"[<SealedAttribute>]\r\ntype Matrix = \r\n    struct\r\n        inherit ValueType\r\n        interface IEquatable<Matrix>\r\n    end\n"})})})]}),"\n",(0,n.jsx)("a",{href:"https://github.com/AvaloniaUI/Avalonia/tree/master/src/Avalonia.Base/Matrix.cs",title:"View the source code",children:"View Source"}),"\n",(0,n.jsxs)("table",{children:[(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("strong",{children:"Inheritance"})}),(0,n.jsxs)("td",{children:[(0,n.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.object",target:"_blank",rel:"noopener noreferrer",children:"Object"}),"  →  ",(0,n.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.valuetype",target:"_blank",rel:"noopener noreferrer",children:"ValueType"}),"  →  Matrix"]})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("strong",{children:"Implements"})}),(0,n.jsxs)("td",{children:[(0,n.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.iequatable-1",target:"_blank",rel:"noopener noreferrer",children:"IEquatable"}),"(Matrix)"]})]})]}),"\n",(0,n.jsx)(r.p,{children:"Matrix layout: | 1st col | 2nd col | 3r col | 1st row | scaleX | skewY | perspX | 2nd row | skewX | scaleY | perspY | 3rd row | transX | transY | perspZ | Note: Skia.SkMatrix uses a transposed layout (where for example skewX/skewY and persp0/transX are swapped)."}),"\n",(0,n.jsx)(r.h2,{id:"constructors",children:"Constructors"}),"\n",(0,n.jsxs)("table",{children:[(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_Matrix__ctor_1",children:"Matrix(Double, Double, Double, Double, Double, Double)"})}),(0,n.jsx)("td",{children:"Initializes a new instance of the Matrix struct (equivalent to a 2x3 Matrix without perspective)."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_Matrix__ctor",children:"Matrix(Double, Double, Double, Double, Double, Double, Double, Double, Double)"})}),(0,n.jsx)("td",{children:"Initializes a new instance of the Matrix struct."})]})]}),"\n",(0,n.jsx)(r.h2,{id:"properties",children:"Properties"}),"\n",(0,n.jsxs)("table",{children:[(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"P_Avalonia_Matrix_HasInverse",children:"HasInverse"})}),(0,n.jsx)("td",{children:"HasInverse Property - returns true if this matrix is invertible, false otherwise."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"P_Avalonia_Matrix_Identity",children:"Identity"})}),(0,n.jsx)("td",{children:"Returns the multiplicative identity matrix."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"P_Avalonia_Matrix_IsIdentity",children:"IsIdentity"})}),(0,n.jsx)("td",{children:"Returns whether the matrix is the identity matrix."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"P_Avalonia_Matrix_M11",children:"M11"})}),(0,n.jsx)("td",{children:"The first element of the first row (scaleX)."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"P_Avalonia_Matrix_M12",children:"M12"})}),(0,n.jsx)("td",{children:"The second element of the first row (skewY)."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"P_Avalonia_Matrix_M13",children:"M13"})}),(0,n.jsx)("td",{children:"The third element of the first row (perspX: input x-axis perspective factor)."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"P_Avalonia_Matrix_M21",children:"M21"})}),(0,n.jsx)("td",{children:"The first element of the second row (skewX)."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"P_Avalonia_Matrix_M22",children:"M22"})}),(0,n.jsx)("td",{children:"The second element of the second row (scaleY)."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"P_Avalonia_Matrix_M23",children:"M23"})}),(0,n.jsx)("td",{children:"The third element of the second row (perspY: input y-axis perspective factor)."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"P_Avalonia_Matrix_M31",children:"M31"})}),(0,n.jsx)("td",{children:"The first element of the third row (offsetX/translateX)."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"P_Avalonia_Matrix_M32",children:"M32"})}),(0,n.jsx)("td",{children:"The second element of the third row (offsetY/translateY)."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"P_Avalonia_Matrix_M33",children:"M33"})}),(0,n.jsx)("td",{children:"The third element of the third row (perspZ: perspective scale factor)."})]})]}),"\n",(0,n.jsx)(r.h2,{id:"methods",children:"Methods"}),"\n",(0,n.jsxs)("table",{children:[(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_Matrix_Append",children:"Append(Matrix)"})}),(0,n.jsx)("td",{children:"Appends another matrix as post-multiplication operation. Equivalent to this * value;"})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_Matrix_ContainsPerspective",children:"ContainsPerspective()"})}),(0,n.jsx)("td",{children:"Determines if the current matrix contains perspective (non-affine) transforms (true) or only (affine) transforms that could be mapped into an 2x3 matrix (false)."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_Matrix_CreateRotation",children:"CreateRotation(Double)"})}),(0,n.jsx)("td",{children:"Creates a rotation matrix using the given rotation in radians."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_Matrix_CreateScale",children:"CreateScale(Vector)"})}),(0,n.jsx)("td",{children:"Creates a scale matrix from the given vector scale."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_Matrix_CreateScale_1",children:"CreateScale(Double, Double)"})}),(0,n.jsx)("td",{children:"Creates a scale matrix from the given X and Y components."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_Matrix_CreateSkew",children:"CreateSkew(Double, Double)"})}),(0,n.jsx)("td",{children:"Creates a skew matrix from the given axis skew angles in radians."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_Matrix_CreateTranslation",children:"CreateTranslation(Vector)"})}),(0,n.jsx)("td",{children:"Creates a translation matrix from the given vector."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_Matrix_CreateTranslation_1",children:"CreateTranslation(Double, Double)"})}),(0,n.jsx)("td",{children:"Creates a translation matrix from the given X and Y components."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_Matrix_Equals",children:"Equals(Matrix)"})}),(0,n.jsx)("td",{children:"Returns a boolean indicating whether the matrix is equal to the other given matrix."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_Matrix_Equals_1",children:"Equals(Object)"})}),(0,n.jsxs)("td",{children:["Returns a boolean indicating whether the given Object is equal to this matrix instance.",(0,n.jsx)("br",{}),"(Overrides ",(0,n.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.valuetype.equals",target:"_blank",rel:"noopener noreferrer",children:"ValueType.Equals(Object)"}),")"]})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_Matrix_GetDeterminant",children:"GetDeterminant()"})}),(0,n.jsx)("td",{children:"Calculates the determinant for this matrix."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_Matrix_GetHashCode",children:"GetHashCode()"})}),(0,n.jsxs)("td",{children:["Returns the hash code for this instance.",(0,n.jsx)("br",{}),"(Overrides ",(0,n.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode",target:"_blank",rel:"noopener noreferrer",children:"ValueType.GetHashCode()"}),")"]})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.object.gettype",target:"_blank",rel:"noopener noreferrer",children:"GetType()"})}),(0,n.jsxs)("td",{children:["Gets the ",(0,n.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.type",target:"_blank",rel:"noopener noreferrer",children:"Type"})," of the current instance.",(0,n.jsx)("br",{}),"(Inherited from ",(0,n.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.object",target:"_blank",rel:"noopener noreferrer",children:"Object"}),")"]})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_Matrix_Invert",children:"Invert()"})}),(0,n.jsx)("td",{children:"Inverts the Matrix."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_Matrix_Parse",children:"Parse(String)"})}),(0,n.jsx)("td",{children:"Parses a Matrix string."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_Matrix_Prepend",children:"Prepend(Matrix)"})}),(0,n.jsx)("td",{children:"Prepends another matrix as pre-multiplication operation. Equivalent to value * this;"})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_Matrix_ToRadians",children:"ToRadians(Double)"})}),(0,n.jsx)("td",{children:"Converts an angle in degrees to radians."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_Matrix_ToString",children:"ToString()"})}),(0,n.jsxs)("td",{children:["Returns a String representing this matrix instance.",(0,n.jsx)("br",{}),"(Overrides ",(0,n.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.valuetype.tostring",target:"_blank",rel:"noopener noreferrer",children:"ValueType.ToString()"}),")"]})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_Matrix_Transform",children:"Transform(Point)"})}),(0,n.jsx)("td",{children:"Transforms the point with the matrix"})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_Matrix_TryDecomposeTransform",children:"TryDecomposeTransform(Matrix, Matrix.Decomposed)"})}),(0,n.jsx)("td",{children:"Decomposes given matrix into transform operations."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_Matrix_TryInvert",children:"TryInvert(Matrix)"})}),(0,n.jsx)("td",{children:"Attempts to invert the Matrix."})]})]}),"\n",(0,n.jsx)(r.h2,{id:"operators",children:"Operators"}),"\n",(0,n.jsxs)("table",{children:[(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_Matrix_op_Equality",children:"Equality(Matrix, Matrix)"})}),(0,n.jsx)("td",{children:"Returns a boolean indicating whether the given matrices are equal."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_Matrix_op_Inequality",children:"Inequality(Matrix, Matrix)"})}),(0,n.jsx)("td",{children:"Returns a boolean indicating whether the given matrices are not equal."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_Matrix_op_Multiply",children:"Multiply(Matrix, Matrix)"})}),(0,n.jsx)("td",{children:"Multiplies two matrices together and returns the resulting matrix."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_Matrix_op_UnaryNegation",children:"UnaryNegation(Matrix)"})}),(0,n.jsx)("td",{children:"Negates the given matrix by multiplying all values by -1."})]})]}),"\n",(0,n.jsx)(r.h2,{id:"extension-methods",children:"Extension Methods"}),"\n",(0,n.jsx)("table",{children:(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_Skia_SkiaSharpExtensions_ToSKMatrix",children:"ToSKMatrix()"})}),(0,n.jsxs)("td",{children:[(0,n.jsx)("br",{}),"(Defined by ",(0,n.jsx)("a",{href:"T_Avalonia_Skia_SkiaSharpExtensions",children:"SkiaSharpExtensions"}),")"]})]})}),"\n",(0,n.jsx)(r.h2,{id:"see-also",children:"See Also"}),"\n",(0,n.jsx)(r.h4,{id:"reference",children:"Reference"}),"\n",(0,n.jsx)("a",{href:"N_Avalonia",children:"Avalonia Namespace"})]})}function c(e={}){let{wrapper:r}={...(0,a.a)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}function x(e,r){throw Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},116070:function(e,r,t){t.d(r,{Z:()=>l,a:()=>s});var i=t(841699);let n={},a=i.createContext(n);function s(e){let r=i.useContext(a);return i.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),i.createElement(a.Provider,{value:r},e.children)}},816651:function(e){e.exports=JSON.parse('{"id":"T_Avalonia_Matrix","title":"Matrix Structure","description":"A 3x3 matrix.","source":"@site/docs/T_Avalonia_Matrix.md","sourceDirName":".","slug":"/T_Avalonia_Matrix","permalink":"/Ava-ApiTests/docs/T_Avalonia_Matrix","draft":false,"unlisted":false,"editUrl":"https://github.com/timunie/Ava-ApiTests/docs/T_Avalonia_Matrix.md","tags":[],"version":"current","frontMatter":{},"sidebar":"documentationSidebar","previous":{"title":"IStyledPropertyMetadata Interface","permalink":"/Ava-ApiTests/docs/T_Avalonia_IStyledPropertyMetadata"},"next":{"title":"Matrix.Decomposed Structure","permalink":"/Ava-ApiTests/docs/T_Avalonia_Matrix_Decomposed"}}')}}]);