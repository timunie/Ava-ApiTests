"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["109635"],{355714:function(e,n,i){i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var s=i(162396),t=i(696773),r=i(116070);let o={},a="PointToScreen Method",l={},c=[{value:"Definition",id:"definition",level:2},{value:"Parameters",id:"parameters",level:4},{value:"Return Value",id:"return-value",level:4},{value:"Usage Note",id:"usage-note",level:4},{value:"See Also",id:"see-also",level:2},{value:"Reference",id:"reference",level:4}];function d(e){let n={br:"br",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,r.a)(),...e.components},{TabItem:i,Tabs:s}=n;return i||u("TabItem",!0),s||u("Tabs",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"pointtoscreen-method",children:"PointToScreen Method"})}),"\n",(0,t.jsx)(n.p,{children:"Converts a point from client to screen coordinates."}),"\n",(0,t.jsx)(n.h2,{id:"definition",children:"Definition"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Namespace:"})," ",(0,t.jsx)("a",{href:"N_Avalonia",children:"Avalonia"}),(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)(n.strong,{children:"Assembly:"})," Avalonia.Base (in Avalonia.Base.dll)"]}),"\n",(0,t.jsxs)(s,{groupId:"api-code-preview",children:[(0,t.jsx)(i,{value:"csharp",label:"C#",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:"public static PixelPoint PointToScreen(\r\n	this Visual visual,\r\n	Point point\r\n)\n"})})}),(0,t.jsx)(i,{value:"vb",label:"VB",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-vb",children:"<ExtensionAttribute>\r\nPublic Shared Function PointToScreen ( \r\n	visual As Visual,\r\n	point As Point\r\n) As PixelPoint\n"})})}),(0,t.jsx)(i,{value:"fsharp",label:"F#",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fsharp",children:"[<ExtensionAttribute>]\r\nstatic member PointToScreen : \r\n        visual : Visual * \r\n        point : Point -> PixelPoint \n"})})})]}),"\n",(0,t.jsx)("a",{href:"https://github.com/AvaloniaUI/Avalonia/tree/master/src/Avalonia.Base/VisualExtensions.cs#L33",title:"View the source code",children:"View Source"}),"\n",(0,t.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsxs)("dl",{children:[(0,t.jsxs)("dt",{children:["\xa0\xa0",(0,t.jsx)("a",{href:"T_Avalonia_Visual",children:"Visual"})]}),(0,t.jsx)("dd",{children:"The visual."}),(0,t.jsxs)("dt",{children:["\xa0\xa0",(0,t.jsx)("a",{href:"T_Avalonia_Point",children:"Point"})]}),(0,t.jsx)("dd",{children:"The point in client coordinates."})]}),"\n",(0,t.jsx)(n.h4,{id:"return-value",children:"Return Value"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)("a",{href:"T_Avalonia_PixelPoint",children:"PixelPoint"}),(0,t.jsx)(n.br,{}),"\n","The point in screen coordinates."]}),"\n",(0,t.jsx)(n.h4,{id:"usage-note",children:"Usage Note"}),"\n",(0,t.jsxs)(n.p,{children:["In Visual Basic and C#, you can call this method as an instance method on any object of type ",(0,t.jsx)("a",{href:"T_Avalonia_Visual",children:"Visual"}),". When you use instance method syntax to call this method, omit the first parameter. For more information, see ",(0,t.jsx)("a",{href:"https://docs.microsoft.com/dotnet/visual-basic/programming-guide/language-features/procedures/extension-methods",target:"_blank",rel:"noopener noreferrer",children:"Extension Methods (Visual Basic)"})," or ",(0,t.jsx)("a",{href:"https://docs.microsoft.com/dotnet/csharp/programming-guide/classes-and-structs/extension-methods",target:"_blank",rel:"noopener noreferrer",children:"Extension Methods (C# Programming Guide)"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"see-also",children:"See Also"}),"\n",(0,t.jsx)(n.h4,{id:"reference",children:"Reference"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)("a",{href:"T_Avalonia_VisualExtensions",children:"VisualExtensions Class"}),(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)("a",{href:"N_Avalonia",children:"Avalonia Namespace"})]})]})}function h(e={}){let{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}function u(e,n){throw Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},116070:function(e,n,i){i.d(n,{Z:()=>a,a:()=>o});var s=i(841699);let t={},r=s.createContext(t);function o(e){let n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(r.Provider,{value:n},e.children)}},162396:function(e){e.exports=JSON.parse('{"id":"M_Avalonia_VisualExtensions_PointToScreen","title":"PointToScreen Method","description":"Converts a point from client to screen coordinates.","source":"@site/docs/M_Avalonia_VisualExtensions_PointToScreen.md","sourceDirName":".","slug":"/M_Avalonia_VisualExtensions_PointToScreen","permalink":"/Ava-ApiTests/docs/M_Avalonia_VisualExtensions_PointToScreen","draft":false,"unlisted":false,"editUrl":"https://github.com/timunie/Ava-ApiTests/docs/M_Avalonia_VisualExtensions_PointToScreen.md","tags":[],"version":"current","frontMatter":{}}')}}]);