"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["782802"],{113767:function(e,n,o){o.r(n),o.d(n,{assets:()=>i,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>r,toc:()=>d});var r=o(957709),t=o(696773),l=o(116070);let s={},a="Listen Method",i={},d=[{value:"Definition",id:"definition",level:2},{value:"Parameters",id:"parameters",level:4},{value:"Return Value",id:"return-value",level:4},{value:"See Also",id:"see-also",level:2},{value:"Reference",id:"reference",level:4}];function c(e){let n={br:"br",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,l.a)(),...e.components},{TabItem:o,Tabs:r}=n;return o||h("TabItem",!0),r||h("Tabs",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"listen-method",children:"Listen Method"})}),"\n",(0,t.jsxs)(n.p,{children:["Listens to any changes in volume mounts and forwards updates to the referenced ",(0,t.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.observablecollection-1",target:"_blank",rel:"noopener noreferrer",children:"ObservableCollection(T)"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"definition",children:"Definition"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Namespace:"})," ",(0,t.jsx)("a",{href:"N_Avalonia_Controls_Platform",children:"Avalonia.Controls.Platform"}),(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)(n.strong,{children:"Assembly:"})," Avalonia.Controls (in Avalonia.Controls.dll)"]}),"\n",(0,t.jsxs)(r,{groupId:"api-code-preview",children:[(0,t.jsx)(o,{value:"csharp",label:"C#",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:"IDisposable Listen(\r\n	ObservableCollection<MountedVolumeInfo> mountedDrives\r\n)\n"})})}),(0,t.jsx)(o,{value:"vb",label:"VB",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-vb",children:"Function Listen ( \r\n	mountedDrives As ObservableCollection(Of MountedVolumeInfo)\r\n) As IDisposable\n"})})}),(0,t.jsx)(o,{value:"fsharp",label:"F#",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fsharp",children:"abstract Listen : \r\n        mountedDrives : ObservableCollection<MountedVolumeInfo> -> IDisposable \n"})})})]}),"\n",(0,t.jsx)("a",{href:"https://github.com/AvaloniaUI/Avalonia/tree/master/src/Avalonia.Controls/Platform/Dialogs/IMountedVolumeInfoProvider.cs",title:"View the source code",children:"View Source"}),"\n",(0,t.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsxs)("dl",{children:[(0,t.jsxs)("dt",{children:["\xa0\xa0",(0,t.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.observablecollection-1",target:"_blank",rel:"noopener noreferrer",children:"ObservableCollection"}),"(",(0,t.jsx)("a",{href:"T_Avalonia_Controls_Platform_MountedVolumeInfo",children:"MountedVolumeInfo"}),")"]}),(0,t.jsx)("dd",{children:"\xa0"})]}),"\n",(0,t.jsx)(n.h4,{id:"return-value",children:"Return Value"}),"\n",(0,t.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.idisposable",target:"_blank",rel:"noopener noreferrer",children:"IDisposable"}),"\n",(0,t.jsx)(n.h2,{id:"see-also",children:"See Also"}),"\n",(0,t.jsx)(n.h4,{id:"reference",children:"Reference"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)("a",{href:"T_Avalonia_Controls_Platform_IMountedVolumeInfoProvider",children:"IMountedVolumeInfoProvider Interface"}),(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)("a",{href:"N_Avalonia_Controls_Platform",children:"Avalonia.Controls.Platform Namespace"})]})]})}function u(e={}){let{wrapper:n}={...(0,l.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}function h(e,n){throw Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},116070:function(e,n,o){o.d(n,{Z:()=>a,a:()=>s});var r=o(841699);let t={},l=r.createContext(t);function s(e){let n=r.useContext(l);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),r.createElement(l.Provider,{value:n},e.children)}},957709:function(e){e.exports=JSON.parse('{"id":"M_Avalonia_Controls_Platform_IMountedVolumeInfoProvider_Listen","title":"Listen Method","description":"Listens to any changes in volume mounts and forwards updates to the referenced ObservableCollection(T).","source":"@site/docs/M_Avalonia_Controls_Platform_IMountedVolumeInfoProvider_Listen.md","sourceDirName":".","slug":"/M_Avalonia_Controls_Platform_IMountedVolumeInfoProvider_Listen","permalink":"/Ava-ApiTests/docs/M_Avalonia_Controls_Platform_IMountedVolumeInfoProvider_Listen","draft":false,"unlisted":false,"editUrl":"https://github.com/timunie/Ava-ApiTests/docs/M_Avalonia_Controls_Platform_IMountedVolumeInfoProvider_Listen.md","tags":[],"version":"current","frontMatter":{}}')}}]);