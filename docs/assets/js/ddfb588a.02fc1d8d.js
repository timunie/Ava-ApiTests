"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["628536"],{173984:function(e,t,i){i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>n,toc:()=>c});var n=i(832394),s=i(696773),r=i(116070);let a={},o="Start Method",l={},c=[{value:"Definition",id:"definition",level:2},{value:"Return Value",id:"return-value",level:4},{value:"See Also",id:"see-also",level:2},{value:"Reference",id:"reference",level:4}];function p(e){let t={br:"br",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,r.a)(),...e.components},{TabItem:i,Tabs:n}=t;return i||h("TabItem",!0),n||h("Tabs",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"start-method",children:"Start Method"})}),"\n",(0,s.jsx)(t.p,{children:"Since the lifetime must be set up/prepared with 'args' before executing Start(), an overload with no parameters seems more suitable for integrating with some lifetime manager providers, such as MS HostApplicationBuilder."}),"\n",(0,s.jsx)(t.h2,{id:"definition",children:"Definition"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Namespace:"})," ",(0,s.jsx)("a",{href:"N_Avalonia_Controls_ApplicationLifetimes",children:"Avalonia.Controls.ApplicationLifetimes"}),(0,s.jsx)(t.br,{}),"\n",(0,s.jsx)(t.strong,{children:"Assembly:"})," Avalonia.Controls (in Avalonia.Controls.dll)"]}),"\n",(0,s.jsxs)(n,{groupId:"api-code-preview",children:[(0,s.jsx)(i,{value:"csharp",label:"C#",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-csharp",children:"public int Start()\n"})})}),(0,s.jsx)(i,{value:"vb",label:"VB",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-vb",children:"Public Function Start As Integer\n"})})}),(0,s.jsx)(i,{value:"fsharp",label:"F#",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-fsharp",children:"member Start : unit -> int \n"})})})]}),"\n",(0,s.jsx)("a",{href:"https://github.com/AvaloniaUI/Avalonia/tree/master/src/Avalonia.Controls/ApplicationLifetimes/ClassicDesktopStyleApplicationLifetime.cs#L129",title:"View the source code",children:"View Source"}),"\n",(0,s.jsx)(t.h4,{id:"return-value",children:"Return Value"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.int32",target:"_blank",rel:"noopener noreferrer",children:"Int32"}),(0,s.jsx)(t.br,{}),"\n","exit code"]}),"\n",(0,s.jsx)(t.h2,{id:"see-also",children:"See Also"}),"\n",(0,s.jsx)(t.h4,{id:"reference",children:"Reference"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)("a",{href:"T_Avalonia_Controls_ApplicationLifetimes_ClassicDesktopStyleApplicationLifetime",children:"ClassicDesktopStyleApplicationLifetime Class"}),(0,s.jsx)(t.br,{}),"\n",(0,s.jsx)("a",{href:"Overload_Avalonia_Controls_ApplicationLifetimes_ClassicDesktopStyleApplicationLifetime_Start",children:"Start Overload"}),(0,s.jsx)(t.br,{}),"\n",(0,s.jsx)("a",{href:"N_Avalonia_Controls_ApplicationLifetimes",children:"Avalonia.Controls.ApplicationLifetimes Namespace"})]})]})}function d(e={}){let{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}function h(e,t){throw Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},116070:function(e,t,i){i.d(t,{Z:()=>o,a:()=>a});var n=i(841699);let s={},r=n.createContext(s);function a(e){let t=n.useContext(r);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),n.createElement(r.Provider,{value:t},e.children)}},832394:function(e){e.exports=JSON.parse('{"id":"M_Avalonia_Controls_ApplicationLifetimes_ClassicDesktopStyleApplicationLifetime_Start","title":"Start Method","description":"Since the lifetime must be set up/prepared with \'args\' before executing Start(), an overload with no parameters seems more suitable for integrating with some lifetime manager providers, such as MS HostApplicationBuilder.","source":"@site/docs/M_Avalonia_Controls_ApplicationLifetimes_ClassicDesktopStyleApplicationLifetime_Start.md","sourceDirName":".","slug":"/M_Avalonia_Controls_ApplicationLifetimes_ClassicDesktopStyleApplicationLifetime_Start","permalink":"/Ava-ApiTests/docs/M_Avalonia_Controls_ApplicationLifetimes_ClassicDesktopStyleApplicationLifetime_Start","draft":false,"unlisted":false,"editUrl":"https://github.com/timunie/Ava-ApiTests/docs/M_Avalonia_Controls_ApplicationLifetimes_ClassicDesktopStyleApplicationLifetime_Start.md","tags":[],"version":"current","frontMatter":{}}')}}]);