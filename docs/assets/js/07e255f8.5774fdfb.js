"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["182061"],{723360:function(e,t,n){n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>h,default:()=>o,frontMatter:()=>a,metadata:()=>r,toc:()=>c});var r=n(744223),s=n(696773),i=n(116070);let a={},h="Rect Methods",l={},c=[{value:"Methods",id:"methods",level:2},{value:"Extension Methods",id:"extension-methods",level:2},{value:"See Also",id:"see-also",level:2},{value:"Reference",id:"reference",level:4}];function d(e){let t={br:"br",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"rect-methods",children:"Rect Methods"})}),"\n",(0,s.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsxs)("table",{children:[(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Rect_CenterRect",children:"CenterRect(Rect)"})}),(0,s.jsx)("td",{children:"Centers another rectangle in this rectangle."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Rect_Contains",children:"Contains(Point)"})}),(0,s.jsx)("td",{children:"Determines whether a point is in the bounds of the rectangle."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Rect_Contains_1",children:"Contains(Rect)"})}),(0,s.jsx)("td",{children:"Determines whether the rectangle fully contains another rectangle."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Rect_ContainsExclusive",children:"ContainsExclusive(Point)"})}),(0,s.jsx)("td",{children:"Determines whether a point is in the bounds of the rectangle, exclusive of the rectangle's bottom/right edge."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Rect_Deflate_1",children:"Deflate(Double)"})}),(0,s.jsx)("td",{children:"Deflates the rectangle."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Rect_Deflate",children:"Deflate(Thickness)"})}),(0,s.jsxs)("td",{children:["Deflates the rectangle by a ",(0,s.jsx)("a",{href:"T_Avalonia_Thickness",children:"Thickness"}),"."]})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Rect_Equals_1",children:"Equals(Object)"})}),(0,s.jsxs)("td",{children:["Returns a boolean indicating whether the given object is equal to this rectangle.",(0,s.jsx)("br",{}),"(Overrides ",(0,s.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.valuetype.equals",target:"_blank",rel:"noopener noreferrer",children:"ValueType.Equals(Object)"}),")"]})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Rect_Equals",children:"Equals(Rect)"})}),(0,s.jsx)("td",{children:"Returns a boolean indicating whether the rect is equal to the other given rect."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Rect_GetHashCode",children:"GetHashCode()"})}),(0,s.jsxs)("td",{children:["Returns the hash code for this instance.",(0,s.jsx)("br",{}),"(Overrides ",(0,s.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode",target:"_blank",rel:"noopener noreferrer",children:"ValueType.GetHashCode()"}),")"]})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.object.gettype",target:"_blank",rel:"noopener noreferrer",children:"GetType()"})}),(0,s.jsxs)("td",{children:["Gets the ",(0,s.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.type",target:"_blank",rel:"noopener noreferrer",children:"Type"})," of the current instance.",(0,s.jsx)("br",{}),"(Inherited from ",(0,s.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.object",target:"_blank",rel:"noopener noreferrer",children:"Object"}),")"]})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Rect_Inflate_1",children:"Inflate(Double)"})}),(0,s.jsx)("td",{children:"Inflates the rectangle."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Rect_Inflate",children:"Inflate(Thickness)"})}),(0,s.jsx)("td",{children:"Inflates the rectangle."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Rect_Intersect",children:"Intersect(Rect)"})}),(0,s.jsx)("td",{children:"Gets the intersection of two rectangles."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Rect_Intersects",children:"Intersects(Rect)"})}),(0,s.jsx)("td",{children:"Determines whether a rectangle intersects with this rectangle."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Rect_Normalize",children:"Normalize()"})}),(0,s.jsxs)("td",{children:["Normalizes the rectangle so both the ",(0,s.jsx)("a",{href:"P_Avalonia_Rect_Width",children:"Width"})," and ",(0,s.jsx)("a",{href:"P_Avalonia_Rect_Height",children:"Height"})," are positive, without changing the location of the rectangle"]})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Rect_Parse",children:"Parse(String)"})}),(0,s.jsxs)("td",{children:["Parses a ",(0,s.jsx)("a",{href:"T_Avalonia_Rect",children:"Rect"})," string."]})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Rect_ToString",children:"ToString()"})}),(0,s.jsxs)("td",{children:["Returns the string representation of the rectangle.",(0,s.jsx)("br",{}),"(Overrides ",(0,s.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.valuetype.tostring",target:"_blank",rel:"noopener noreferrer",children:"ValueType.ToString()"}),")"]})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Rect_TransformToAABB",children:"TransformToAABB(Matrix)"})}),(0,s.jsx)("td",{children:"Returns the axis-aligned bounding box of a transformed rectangle."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Rect_Translate",children:"Translate(Vector)"})}),(0,s.jsx)("td",{children:"Translates the rectangle by an offset."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Rect_Union",children:"Union(Rect)"})}),(0,s.jsx)("td",{children:"Gets the union of two rectangles."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Rect_WithHeight",children:"WithHeight(Double)"})}),(0,s.jsxs)("td",{children:["Returns a new ",(0,s.jsx)("a",{href:"T_Avalonia_Rect",children:"Rect"})," with the specified height."]})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Rect_WithWidth",children:"WithWidth(Double)"})}),(0,s.jsxs)("td",{children:["Returns a new ",(0,s.jsx)("a",{href:"T_Avalonia_Rect",children:"Rect"})," with the specified width."]})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Rect_WithX",children:"WithX(Double)"})}),(0,s.jsxs)("td",{children:["Returns a new ",(0,s.jsx)("a",{href:"T_Avalonia_Rect",children:"Rect"})," with the specified X position."]})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Rect_WithY",children:"WithY(Double)"})}),(0,s.jsxs)("td",{children:["Returns a new ",(0,s.jsx)("a",{href:"T_Avalonia_Rect",children:"Rect"})," with the specified Y position."]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"extension-methods",children:"Extension Methods"}),"\n",(0,s.jsxs)("table",{children:[(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Layout_LayoutExtensions_Align",children:"Align(Rect, HorizontalAlignment, VerticalAlignment)"})}),(0,s.jsxs)("td",{children:["Aligns a rect in a constraining rect according to horizontal and vertical alignment settings.",(0,s.jsx)("br",{}),"(Defined by ",(0,s.jsx)("a",{href:"T_Avalonia_Layout_LayoutExtensions",children:"LayoutExtensions"}),")"]})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Skia_SkiaSharpExtensions_ToSKRect",children:"ToSKRect()"})}),(0,s.jsxs)("td",{children:[(0,s.jsx)("br",{}),"(Defined by ",(0,s.jsx)("a",{href:"T_Avalonia_Skia_SkiaSharpExtensions",children:"SkiaSharpExtensions"}),")"]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"see-also",children:"See Also"}),"\n",(0,s.jsx)(t.h4,{id:"reference",children:"Reference"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)("a",{href:"T_Avalonia_Rect",children:"Rect Structure"}),(0,s.jsx)(t.br,{}),"\n",(0,s.jsx)("a",{href:"N_Avalonia",children:"Avalonia Namespace"})]})]})}function o(e={}){let{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},116070:function(e,t,n){n.d(t,{Z:()=>h,a:()=>a});var r=n(841699);let s={},i=r.createContext(s);function a(e){let t=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function h(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(i.Provider,{value:t},e.children)}},744223:function(e){e.exports=JSON.parse('{"id":"Methods_T_Avalonia_Rect","title":"Rect Methods","description":"Methods","source":"@site/docs/Methods_T_Avalonia_Rect.md","sourceDirName":".","slug":"/Methods_T_Avalonia_Rect","permalink":"/Ava-ApiTests/docs/Methods_T_Avalonia_Rect","draft":false,"unlisted":false,"editUrl":"https://github.com/timunie/Ava-ApiTests/docs/Methods_T_Avalonia_Rect.md","tags":[],"version":"current","frontMatter":{}}')}}]);