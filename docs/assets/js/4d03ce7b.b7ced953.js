"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["623700"],{600707:function(e,t,i){i.r(t),i.d(t,{assets:()=>o,contentTitle:()=>a,default:()=>d,frontMatter:()=>s,metadata:()=>r,toc:()=>c});var r=i(441086),n=i(696773),l=i(116070);let s={},a="AreClose(Single, Single) Method",o={},c=[{value:"Definition",id:"definition",level:2},{value:"Parameters",id:"parameters",level:4},{value:"Return Value",id:"return-value",level:4},{value:"See Also",id:"see-also",level:2},{value:"Reference",id:"reference",level:4}];function h(e){let t={br:"br",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,l.a)(),...e.components},{TabItem:i,Tabs:r}=t;return i||u("TabItem",!0),r||u("Tabs",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"areclosesingle-single-method",children:"AreClose(Single, Single) Method"})}),"\n",(0,n.jsx)(t.p,{children:'AreClose - Returns whether or not two floats are "close". That is, whether or not they are within epsilon of each other.'}),"\n",(0,n.jsx)(t.h2,{id:"definition",children:"Definition"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Namespace:"})," ",(0,n.jsx)("a",{href:"N_Avalonia_Utilities",children:"Avalonia.Utilities"}),(0,n.jsx)(t.br,{}),"\n",(0,n.jsx)(t.strong,{children:"Assembly:"})," Avalonia.Base (in Avalonia.Base.dll)"]}),"\n",(0,n.jsxs)(r,{groupId:"api-code-preview",children:[(0,n.jsx)(i,{value:"csharp",label:"C#",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-csharp",children:"public static bool AreClose(\r\n	float value1,\r\n	float value2\r\n)\n"})})}),(0,n.jsx)(i,{value:"vb",label:"VB",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-vb",children:"Public Shared Function AreClose ( \r\n	value1 As Single,\r\n	value2 As Single\r\n) As Boolean\n"})})}),(0,n.jsx)(i,{value:"fsharp",label:"F#",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-fsharp",children:"static member AreClose : \r\n        value1 : float32 * \r\n        value2 : float32 -> bool \n"})})})]}),"\n",(0,n.jsx)("a",{href:"https://github.com/AvaloniaUI/Avalonia/tree/master/src/Avalonia.Base/Utilities/MathUtilities.cs#L62",title:"View the source code",children:"View Source"}),"\n",(0,n.jsx)(t.h4,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsxs)("dl",{children:[(0,n.jsxs)("dt",{children:["\xa0\xa0",(0,n.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.single",target:"_blank",rel:"noopener noreferrer",children:"Single"})]}),(0,n.jsx)("dd",{children:"The first float to compare."}),(0,n.jsxs)("dt",{children:["\xa0\xa0",(0,n.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.single",target:"_blank",rel:"noopener noreferrer",children:"Single"})]}),(0,n.jsx)("dd",{children:"The second float to compare."})]}),"\n",(0,n.jsx)(t.h4,{id:"return-value",children:"Return Value"}),"\n",(0,n.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.boolean",target:"_blank",rel:"noopener noreferrer",children:"Boolean"}),"\n",(0,n.jsx)(t.h2,{id:"see-also",children:"See Also"}),"\n",(0,n.jsx)(t.h4,{id:"reference",children:"Reference"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)("a",{href:"T_Avalonia_Utilities_MathUtilities",children:"MathUtilities Class"}),(0,n.jsx)(t.br,{}),"\n",(0,n.jsx)("a",{href:"Overload_Avalonia_Utilities_MathUtilities_AreClose",children:"AreClose Overload"}),(0,n.jsx)(t.br,{}),"\n",(0,n.jsx)("a",{href:"N_Avalonia_Utilities",children:"Avalonia.Utilities Namespace"})]})]})}function d(e={}){let{wrapper:t}={...(0,l.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}function u(e,t){throw Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},116070:function(e,t,i){i.d(t,{Z:()=>a,a:()=>s});var r=i(841699);let n={},l=r.createContext(n);function s(e){let t=r.useContext(l);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),r.createElement(l.Provider,{value:t},e.children)}},441086:function(e){e.exports=JSON.parse('{"id":"M_Avalonia_Utilities_MathUtilities_AreClose_2","title":"AreClose(Single, Single) Method","description":"AreClose - Returns whether or not two floats are \\"close\\". That is, whether or not they are within epsilon of each other.","source":"@site/docs/M_Avalonia_Utilities_MathUtilities_AreClose_2.md","sourceDirName":".","slug":"/M_Avalonia_Utilities_MathUtilities_AreClose_2","permalink":"/Ava-ApiTests/docs/M_Avalonia_Utilities_MathUtilities_AreClose_2","draft":false,"unlisted":false,"editUrl":"https://github.com/timunie/Ava-ApiTests/docs/M_Avalonia_Utilities_MathUtilities_AreClose_2.md","tags":[],"version":"current","frontMatter":{}}')}}]);