"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["301344"],{584478:function(e,s,t){t.r(s),t.d(s,{assets:()=>o,contentTitle:()=>a,default:()=>d,frontMatter:()=>l,metadata:()=>n,toc:()=>h});var n=t(242146),i=t(696773),r=t(116070);let l={},a="LessThanOrClose(Single, Single) Method",o={},h=[{value:"Definition",id:"definition",level:2},{value:"Parameters",id:"parameters",level:4},{value:"Return Value",id:"return-value",level:4},{value:"See Also",id:"see-also",level:2},{value:"Reference",id:"reference",level:4}];function c(e){let s={br:"br",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,r.a)(),...e.components},{TabItem:t,Tabs:n}=s;return t||u("TabItem",!0),n||u("Tabs",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"lessthanorclosesingle-single-method",children:"LessThanOrClose(Single, Single) Method"})}),"\n",(0,i.jsx)(s.p,{children:"LessThanOrClose - Returns whether or not the first float is less than or close to the second float. That is, whether or not the first is strictly less than or within epsilon of the other number."}),"\n",(0,i.jsx)(s.h2,{id:"definition",children:"Definition"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Namespace:"})," ",(0,i.jsx)("a",{href:"N_Avalonia_Utilities",children:"Avalonia.Utilities"}),(0,i.jsx)(s.br,{}),"\n",(0,i.jsx)(s.strong,{children:"Assembly:"})," Avalonia.Base (in Avalonia.Base.dll)"]}),"\n",(0,i.jsxs)(n,{groupId:"api-code-preview",children:[(0,i.jsx)(t,{value:"csharp",label:"C#",children:(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-csharp",children:"public static bool LessThanOrClose(\r\n	float value1,\r\n	float value2\r\n)\n"})})}),(0,i.jsx)(t,{value:"vb",label:"VB",children:(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-vb",children:"Public Shared Function LessThanOrClose ( \r\n	value1 As Single,\r\n	value2 As Single\r\n) As Boolean\n"})})}),(0,i.jsx)(t,{value:"fsharp",label:"F#",children:(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-fsharp",children:"static member LessThanOrClose : \r\n        value1 : float32 * \r\n        value2 : float32 -> bool \n"})})})]}),"\n",(0,i.jsx)("a",{href:"https://github.com/AvaloniaUI/Avalonia/tree/master/src/Avalonia.Base/Utilities/MathUtilities.cs#L137",title:"View the source code",children:"View Source"}),"\n",(0,i.jsx)(s.h4,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)("dl",{children:[(0,i.jsxs)("dt",{children:["\xa0\xa0",(0,i.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.single",target:"_blank",rel:"noopener noreferrer",children:"Single"})]}),(0,i.jsx)("dd",{children:"The first float to compare."}),(0,i.jsxs)("dt",{children:["\xa0\xa0",(0,i.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.single",target:"_blank",rel:"noopener noreferrer",children:"Single"})]}),(0,i.jsx)("dd",{children:"The second float to compare."})]}),"\n",(0,i.jsx)(s.h4,{id:"return-value",children:"Return Value"}),"\n",(0,i.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.boolean",target:"_blank",rel:"noopener noreferrer",children:"Boolean"}),"\n",(0,i.jsx)(s.h2,{id:"see-also",children:"See Also"}),"\n",(0,i.jsx)(s.h4,{id:"reference",children:"Reference"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)("a",{href:"T_Avalonia_Utilities_MathUtilities",children:"MathUtilities Class"}),(0,i.jsx)(s.br,{}),"\n",(0,i.jsx)("a",{href:"Overload_Avalonia_Utilities_MathUtilities_LessThanOrClose",children:"LessThanOrClose Overload"}),(0,i.jsx)(s.br,{}),"\n",(0,i.jsx)("a",{href:"N_Avalonia_Utilities",children:"Avalonia.Utilities Namespace"})]})]})}function d(e={}){let{wrapper:s}={...(0,r.a)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}function u(e,s){throw Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},116070:function(e,s,t){t.d(s,{Z:()=>a,a:()=>l});var n=t(841699);let i={},r=n.createContext(i);function l(e){let s=n.useContext(r);return n.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),n.createElement(r.Provider,{value:s},e.children)}},242146:function(e){e.exports=JSON.parse('{"id":"M_Avalonia_Utilities_MathUtilities_LessThanOrClose_1","title":"LessThanOrClose(Single, Single) Method","description":"LessThanOrClose - Returns whether or not the first float is less than or close to the second float. That is, whether or not the first is strictly less than or within epsilon of the other number.","source":"@site/docs/M_Avalonia_Utilities_MathUtilities_LessThanOrClose_1.md","sourceDirName":".","slug":"/M_Avalonia_Utilities_MathUtilities_LessThanOrClose_1","permalink":"/Ava-ApiTests/docs/M_Avalonia_Utilities_MathUtilities_LessThanOrClose_1","draft":false,"unlisted":false,"editUrl":"https://github.com/timunie/Ava-ApiTests/docs/M_Avalonia_Utilities_MathUtilities_LessThanOrClose_1.md","tags":[],"version":"current","frontMatter":{}}')}}]);