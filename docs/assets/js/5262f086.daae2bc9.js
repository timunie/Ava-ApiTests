"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["903788"],{841624:function(n,e,i){i.r(e),i.d(e,{assets:()=>c,contentTitle:()=>s,default:()=>f,frontMatter:()=>r,metadata:()=>a,toc:()=>l});var a=i(50980),t=i(696773),o=i(116070);let r={},s="IManagedNotificationManager Interface",c={},l=[{value:"Definition",id:"definition",level:2},{value:"Remarks",id:"remarks",level:2},{value:"Methods",id:"methods",level:2},{value:"See Also",id:"see-also",level:2},{value:"Reference",id:"reference",level:4}];function d(n){let e={br:"br",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,o.a)(),...n.components},{TabItem:i,Tabs:a}=e;return i||h("TabItem",!0),a||h("Tabs",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"imanagednotificationmanager-interface",children:"IManagedNotificationManager Interface"})}),"\n",(0,t.jsx)(e.p,{children:"Represents a notification manager that can show arbitrary content. Managed notification managers can show any content."}),"\n",(0,t.jsx)(e.h2,{id:"definition",children:"Definition"}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"Namespace:"})," ",(0,t.jsx)("a",{href:"N_Avalonia_Controls_Notifications",children:"Avalonia.Controls.Notifications"}),(0,t.jsx)(e.br,{}),"\n",(0,t.jsx)(e.strong,{children:"Assembly:"})," Avalonia.Controls (in Avalonia.Controls.dll)"]}),"\n",(0,t.jsxs)(a,{groupId:"api-code-preview",children:[(0,t.jsx)(i,{value:"csharp",label:"C#",children:(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-csharp",children:"[NotClientImplementableAttribute]\r\npublic interface IManagedNotificationManager : INotificationManager\n"})})}),(0,t.jsx)(i,{value:"vb",label:"VB",children:(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-vb",children:"<NotClientImplementableAttribute>\r\nPublic Interface IManagedNotificationManager\r\n	Inherits INotificationManager\n"})})}),(0,t.jsx)(i,{value:"fsharp",label:"F#",children:(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-fsharp",children:"[<NotClientImplementableAttribute>]\r\ntype IManagedNotificationManager = \r\n    interface\r\n        interface INotificationManager\r\n    end\n"})})})]}),"\n",(0,t.jsx)("a",{href:"https://github.com/AvaloniaUI/Avalonia/tree/master/src/Avalonia.Controls/Notifications/IManagedNotificationManager.cs",title:"View the source code",children:"View Source"}),"\n",(0,t.jsx)("table",{children:(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:(0,t.jsx)("strong",{children:"Implements"})}),(0,t.jsx)("td",{children:(0,t.jsx)("a",{href:"T_Avalonia_Controls_Notifications_INotificationManager",children:"INotificationManager"})})]})}),"\n",(0,t.jsx)(e.h2,{id:"remarks",children:"Remarks"}),"\n",(0,t.jsx)(e.p,{children:"Because notification managers of this type are implemented purely in managed code, they can display arbitrary content, as opposed to notification managers which display notifications using the host operating system's notification mechanism."}),"\n",(0,t.jsx)(e.h2,{id:"methods",children:"Methods"}),"\n",(0,t.jsxs)("table",{children:[(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:(0,t.jsx)("a",{href:"M_Avalonia_Controls_Notifications_INotificationManager_Close",children:"Close(INotification)"})}),(0,t.jsxs)("td",{children:["Closes a notification.",(0,t.jsx)("br",{}),"(Inherited from ",(0,t.jsx)("a",{href:"T_Avalonia_Controls_Notifications_INotificationManager",children:"INotificationManager"}),")"]})]}),(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:(0,t.jsx)("a",{href:"M_Avalonia_Controls_Notifications_IManagedNotificationManager_Close",children:"Close(Object)"})}),(0,t.jsx)("td",{children:"Closes a notification."})]}),(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:(0,t.jsx)("a",{href:"M_Avalonia_Controls_Notifications_INotificationManager_CloseAll",children:"CloseAll()"})}),(0,t.jsxs)("td",{children:["Closes all notifications.",(0,t.jsx)("br",{}),"(Inherited from ",(0,t.jsx)("a",{href:"T_Avalonia_Controls_Notifications_INotificationManager",children:"INotificationManager"}),")"]})]}),(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:(0,t.jsx)("a",{href:"M_Avalonia_Controls_Notifications_INotificationManager_Show",children:"Show(INotification)"})}),(0,t.jsxs)("td",{children:["Show a notification.",(0,t.jsx)("br",{}),"(Inherited from ",(0,t.jsx)("a",{href:"T_Avalonia_Controls_Notifications_INotificationManager",children:"INotificationManager"}),")"]})]}),(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:(0,t.jsx)("a",{href:"M_Avalonia_Controls_Notifications_IManagedNotificationManager_Show",children:"Show(Object)"})}),(0,t.jsx)("td",{children:"Shows a notification."})]})]}),"\n",(0,t.jsx)(e.h2,{id:"see-also",children:"See Also"}),"\n",(0,t.jsx)(e.h4,{id:"reference",children:"Reference"}),"\n",(0,t.jsx)("a",{href:"N_Avalonia_Controls_Notifications",children:"Avalonia.Controls.Notifications Namespace"})]})}function f(n={}){let{wrapper:e}={...(0,o.a)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(d,{...n})}):d(n)}function h(n,e){throw Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}},116070:function(n,e,i){i.d(e,{Z:()=>s,a:()=>r});var a=i(841699);let t={},o=a.createContext(t);function r(n){let e=a.useContext(o);return a.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function s(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:r(n.components),a.createElement(o.Provider,{value:e},n.children)}},50980:function(n){n.exports=JSON.parse('{"id":"T_Avalonia_Controls_Notifications_IManagedNotificationManager","title":"IManagedNotificationManager Interface","description":"Represents a notification manager that can show arbitrary content. Managed notification managers can show any content.","source":"@site/docs/T_Avalonia_Controls_Notifications_IManagedNotificationManager.md","sourceDirName":".","slug":"/T_Avalonia_Controls_Notifications_IManagedNotificationManager","permalink":"/Ava-ApiTests/docs/T_Avalonia_Controls_Notifications_IManagedNotificationManager","draft":false,"unlisted":false,"editUrl":"https://github.com/timunie/Ava-ApiTests/docs/T_Avalonia_Controls_Notifications_IManagedNotificationManager.md","tags":[],"version":"current","frontMatter":{},"sidebar":"documentationSidebar","previous":{"title":"Avalonia.Controls.Notifications","permalink":"/Ava-ApiTests/docs/category/avaloniacontrolsnotifications"},"next":{"title":"INotification Interface","permalink":"/Ava-ApiTests/docs/T_Avalonia_Controls_Notifications_INotification"}}')}}]);