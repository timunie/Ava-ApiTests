"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["192384"],{748160:function(e,r,t){t.r(r),t.d(r,{assets:()=>a,contentTitle:()=>o,default:()=>c,frontMatter:()=>l,metadata:()=>n,toc:()=>d});var n=t(426693),s=t(696773),i=t(116070);let l={},o="GridLength Structure",a={},d=[{value:"Definition",id:"definition",level:2},{value:"Constructors",id:"constructors",level:2},{value:"Properties",id:"properties",level:2},{value:"Methods",id:"methods",level:2},{value:"Operators",id:"operators",level:2},{value:"See Also",id:"see-also",level:2},{value:"Reference",id:"reference",level:4}];function h(e){let r={br:"br",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,i.a)(),...e.components},{TabItem:t,Tabs:n}=r;return t||j("TabItem",!0),n||j("Tabs",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"gridlength-structure",children:"GridLength Structure"})}),"\n",(0,s.jsxs)(r.p,{children:["Holds the width or height of a ",(0,s.jsx)("a",{href:"T_Avalonia_Controls_Grid",children:"Grid"}),"'s column and row definitions."]}),"\n",(0,s.jsx)(r.h2,{id:"definition",children:"Definition"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Namespace:"})," ",(0,s.jsx)("a",{href:"N_Avalonia_Controls",children:"Avalonia.Controls"}),(0,s.jsx)(r.br,{}),"\n",(0,s.jsx)(r.strong,{children:"Assembly:"})," Avalonia.Controls (in Avalonia.Controls.dll) Version: 11.2.0"]}),"\n",(0,s.jsxs)(n,{groupId:"api-code-preview",children:[(0,s.jsx)(t,{value:"csharp",label:"C#",children:(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-csharp",children:"public struct GridLength : IEquatable<GridLength>\n"})})}),(0,s.jsx)(t,{value:"vb",label:"VB",children:(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-vb",children:"Public Structure GridLength\r\n	Implements IEquatable(Of GridLength)\n"})})}),(0,s.jsx)(t,{value:"fsharp",label:"F#",children:(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-fsharp",children:"[<SealedAttribute>]\r\ntype GridLength = \r\n    struct\r\n        inherit ValueType\r\n        interface IEquatable<GridLength>\r\n    end\n"})})})]}),"\n",(0,s.jsx)("a",{href:"https://github.com/AvaloniaUI/Avalonia/tree/master/src/Avalonia.Controls/GridLength.cs",title:"View the source code",children:"View Source"}),"\n",(0,s.jsxs)("table",{children:[(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("strong",{children:"Inheritance"})}),(0,s.jsxs)("td",{children:[(0,s.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.object",target:"_blank",rel:"noopener noreferrer",children:"Object"}),"  →  ",(0,s.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.valuetype",target:"_blank",rel:"noopener noreferrer",children:"ValueType"}),"  →  GridLength"]})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("strong",{children:"Implements"})}),(0,s.jsxs)("td",{children:[(0,s.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.iequatable-1",target:"_blank",rel:"noopener noreferrer",children:"IEquatable"}),"(GridLength)"]})]})]}),"\n",(0,s.jsx)(r.h2,{id:"constructors",children:"Constructors"}),"\n",(0,s.jsxs)("table",{children:[(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Controls_GridLength__ctor_1",children:"GridLength(Double)"})}),(0,s.jsx)("td",{children:"Initializes a new instance of the GridLength struct."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Controls_GridLength__ctor",children:"GridLength(Double, GridUnitType)"})}),(0,s.jsx)("td",{children:"Initializes a new instance of the GridLength struct."})]})]}),"\n",(0,s.jsx)(r.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsxs)("table",{children:[(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"P_Avalonia_Controls_GridLength_Auto",children:"Auto"})}),(0,s.jsx)("td",{children:"Gets an instance of GridLength that indicates that a row or column should auto-size to fit its content."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"P_Avalonia_Controls_GridLength_GridUnitType",children:"GridUnitType"})}),(0,s.jsx)("td",{children:"Gets the unit of the GridLength."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"P_Avalonia_Controls_GridLength_IsAbsolute",children:"IsAbsolute"})}),(0,s.jsxs)("td",{children:["Gets a value that indicates whether the GridLength has a ",(0,s.jsx)("a",{href:"P_Avalonia_Controls_GridLength_GridUnitType",children:"GridUnitType"})," of Pixel."]})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"P_Avalonia_Controls_GridLength_IsAuto",children:"IsAuto"})}),(0,s.jsxs)("td",{children:["Gets a value that indicates whether the GridLength has a ",(0,s.jsx)("a",{href:"P_Avalonia_Controls_GridLength_GridUnitType",children:"GridUnitType"})," of Auto."]})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"P_Avalonia_Controls_GridLength_IsStar",children:"IsStar"})}),(0,s.jsxs)("td",{children:["Gets a value that indicates whether the GridLength has a ",(0,s.jsx)("a",{href:"P_Avalonia_Controls_GridLength_GridUnitType",children:"GridUnitType"})," of Star."]})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"P_Avalonia_Controls_GridLength_Star",children:"Star"})}),(0,s.jsx)("td",{children:"Gets an instance of GridLength that indicates that a row or column should fill its content."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"P_Avalonia_Controls_GridLength_Value",children:"Value"})}),(0,s.jsx)("td",{children:"Gets the length."})]})]}),"\n",(0,s.jsx)(r.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsxs)("table",{children:[(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Controls_GridLength_Equals",children:"Equals(GridLength)"})}),(0,s.jsx)("td",{children:"Compares two GridLength structures for equality."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Controls_GridLength_Equals_1",children:"Equals(Object)"})}),(0,s.jsxs)("td",{children:["Determines whether the GridLength is equal to the specified object.",(0,s.jsx)("br",{}),"(Overrides ",(0,s.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.valuetype.equals",target:"_blank",rel:"noopener noreferrer",children:"ValueType.Equals(Object)"}),")"]})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Controls_GridLength_GetHashCode",children:"GetHashCode()"})}),(0,s.jsxs)("td",{children:["Gets a hash code for the GridLength.",(0,s.jsx)("br",{}),"(Overrides ",(0,s.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode",target:"_blank",rel:"noopener noreferrer",children:"ValueType.GetHashCode()"}),")"]})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.object.gettype",target:"_blank",rel:"noopener noreferrer",children:"GetType()"})}),(0,s.jsxs)("td",{children:["Gets the ",(0,s.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.type",target:"_blank",rel:"noopener noreferrer",children:"Type"})," of the current instance.",(0,s.jsx)("br",{}),"(Inherited from ",(0,s.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.object",target:"_blank",rel:"noopener noreferrer",children:"Object"}),")"]})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Controls_GridLength_Parse",children:"Parse(String)"})}),(0,s.jsx)("td",{children:"Parses a string to return a GridLength."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Controls_GridLength_ParseLengths",children:"ParseLengths(String)"})}),(0,s.jsx)("td",{children:"Parses a string to return a collection of GridLengths."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Controls_GridLength_ToString",children:"ToString()"})}),(0,s.jsxs)("td",{children:["Gets a string representation of the GridLength.",(0,s.jsx)("br",{}),"(Overrides ",(0,s.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.valuetype.tostring",target:"_blank",rel:"noopener noreferrer",children:"ValueType.ToString()"}),")"]})]})]}),"\n",(0,s.jsx)(r.h2,{id:"operators",children:"Operators"}),"\n",(0,s.jsxs)("table",{children:[(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Controls_GridLength_op_Equality",children:"Equality(GridLength, GridLength)"})}),(0,s.jsx)("td",{children:"Compares two GridLength structures for equality."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Controls_GridLength_op_Inequality",children:"Inequality(GridLength, GridLength)"})}),(0,s.jsx)("td",{children:"Compares two GridLength structures for inequality."})]})]}),"\n",(0,s.jsx)(r.h2,{id:"see-also",children:"See Also"}),"\n",(0,s.jsx)(r.h4,{id:"reference",children:"Reference"}),"\n",(0,s.jsx)("a",{href:"N_Avalonia_Controls",children:"Avalonia.Controls Namespace"})]})}function c(e={}){let{wrapper:r}={...(0,i.a)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}function j(e,r){throw Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},116070:function(e,r,t){t.d(r,{Z:()=>o,a:()=>l});var n=t(841699);let s={},i=n.createContext(s);function l(e){let r=n.useContext(i);return n.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),n.createElement(i.Provider,{value:r},e.children)}},426693:function(e){e.exports=JSON.parse('{"id":"T_Avalonia_Controls_GridLength","title":"GridLength Structure","description":"Holds the width or height of a Grid\'s column and row definitions.","source":"@site/docs/T_Avalonia_Controls_GridLength.md","sourceDirName":".","slug":"/T_Avalonia_Controls_GridLength","permalink":"/Ava-ApiTests/docs/T_Avalonia_Controls_GridLength","draft":false,"unlisted":false,"editUrl":"https://github.com/timunie/Ava-ApiTests/docs/T_Avalonia_Controls_GridLength.md","tags":[],"version":"current","frontMatter":{},"sidebar":"documentationSidebar","previous":{"title":"Grid Class","permalink":"/Ava-ApiTests/docs/T_Avalonia_Controls_Grid"},"next":{"title":"GridResizeBehavior Enumeration","permalink":"/Ava-ApiTests/docs/T_Avalonia_Controls_GridResizeBehavior"}}')}}]);