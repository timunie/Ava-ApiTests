"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["807451"],{428614:function(e,t,i){i.r(t),i.d(t,{assets:()=>r,contentTitle:()=>o,default:()=>d,frontMatter:()=>l,metadata:()=>s,toc:()=>c});var s=i(784989),n=i(696773),a=i(116070);let l={},o="Start Method",r={},c=[{value:"Overload List",id:"overload-list",level:2},{value:"See Also",id:"see-also",level:2},{value:"Reference",id:"reference",level:4}];function p(e){let t={br:"br",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",...(0,a.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"start-method",children:"Start Method"})}),"\n",(0,n.jsx)(t.h2,{id:"overload-list",children:"Overload List"}),"\n",(0,n.jsxs)("table",{children:[(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_Controls_ApplicationLifetimes_ClassicDesktopStyleApplicationLifetime_Start",children:"Start()"})}),(0,n.jsx)("td",{children:"Since the lifetime must be set up/prepared with 'args' before executing Start(), an overload with no parameters seems more suitable for integrating with some lifetime manager providers, such as MS HostApplicationBuilder."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_Controls_ApplicationLifetimes_ClassicDesktopStyleApplicationLifetime_Start_1",children:"Start(String[])"})}),(0,n.jsx)("td",{children:"\xa0"})]})]}),"\n",(0,n.jsx)(t.h2,{id:"see-also",children:"See Also"}),"\n",(0,n.jsx)(t.h4,{id:"reference",children:"Reference"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)("a",{href:"T_Avalonia_Controls_ApplicationLifetimes_ClassicDesktopStyleApplicationLifetime",children:"ClassicDesktopStyleApplicationLifetime Class"}),(0,n.jsx)(t.br,{}),"\n",(0,n.jsx)("a",{href:"N_Avalonia_Controls_ApplicationLifetimes",children:"Avalonia.Controls.ApplicationLifetimes Namespace"})]})]})}function d(e={}){let{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},116070:function(e,t,i){i.d(t,{Z:()=>o,a:()=>l});var s=i(841699);let n={},a=s.createContext(n);function l(e){let t=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:l(e.components),s.createElement(a.Provider,{value:t},e.children)}},784989:function(e){e.exports=JSON.parse('{"id":"Overload_Avalonia_Controls_ApplicationLifetimes_ClassicDesktopStyleApplicationLifetime_Start","title":"Start Method","description":"Overload List","source":"@site/docs/Overload_Avalonia_Controls_ApplicationLifetimes_ClassicDesktopStyleApplicationLifetime_Start.md","sourceDirName":".","slug":"/Overload_Avalonia_Controls_ApplicationLifetimes_ClassicDesktopStyleApplicationLifetime_Start","permalink":"/Ava-ApiTests/docs/Overload_Avalonia_Controls_ApplicationLifetimes_ClassicDesktopStyleApplicationLifetime_Start","draft":false,"unlisted":false,"editUrl":"https://github.com/timunie/Ava-ApiTests/docs/Overload_Avalonia_Controls_ApplicationLifetimes_ClassicDesktopStyleApplicationLifetime_Start.md","tags":[],"version":"current","frontMatter":{}}')}}]);