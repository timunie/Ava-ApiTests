"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["734331"],{450334:function(e,n,t){t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>s,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>c});var i=t(541883),r=t(696773),a=t(116070);let l={},s="Clamp(Int32, Int32, Int32) Method",o={},c=[{value:"Definition",id:"definition",level:2},{value:"Parameters",id:"parameters",level:4},{value:"Return Value",id:"return-value",level:4},{value:"See Also",id:"see-also",level:2},{value:"Reference",id:"reference",level:4}];function d(e){let n={br:"br",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,a.a)(),...e.components},{TabItem:t,Tabs:i}=n;return t||m("TabItem",!0),i||m("Tabs",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"clampint32-int32-int32-method",children:"Clamp(Int32, Int32, Int32) Method"})}),"\n",(0,r.jsx)(n.p,{children:"Clamps a value between a minimum and maximum value."}),"\n",(0,r.jsx)(n.h2,{id:"definition",children:"Definition"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Namespace:"})," ",(0,r.jsx)("a",{href:"N_Avalonia_Utilities",children:"Avalonia.Utilities"}),(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.strong,{children:"Assembly:"})," Avalonia.Base (in Avalonia.Base.dll) Version: 11.2.0"]}),"\n",(0,r.jsxs)(i,{groupId:"api-code-preview",children:[(0,r.jsx)(t,{value:"csharp",label:"C#",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"public static int Clamp(\r\n	int val,\r\n	int min,\r\n	int max\r\n)\n"})})}),(0,r.jsx)(t,{value:"vb",label:"VB",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-vb",children:"Public Shared Function Clamp ( \r\n	val As Integer,\r\n	min As Integer,\r\n	max As Integer\r\n) As Integer\n"})})}),(0,r.jsx)(t,{value:"fsharp",label:"F#",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-fsharp",children:"static member Clamp : \r\n        val : int * \r\n        min : int * \r\n        max : int -> int \n"})})})]}),"\n",(0,r.jsx)("a",{href:"https://github.com/AvaloniaUI/Avalonia/tree/master/src/Avalonia.Base/Utilities/MathUtilities.cs#L283",title:"View the source code",children:"View Source"}),"\n",(0,r.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)("dl",{children:[(0,r.jsxs)("dt",{children:["\xa0\xa0",(0,r.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.int32",target:"_blank",rel:"noopener noreferrer",children:"Int32"})]}),(0,r.jsx)("dd",{children:"The value."}),(0,r.jsxs)("dt",{children:["\xa0\xa0",(0,r.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.int32",target:"_blank",rel:"noopener noreferrer",children:"Int32"})]}),(0,r.jsx)("dd",{children:"The minimum value."}),(0,r.jsxs)("dt",{children:["\xa0\xa0",(0,r.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.int32",target:"_blank",rel:"noopener noreferrer",children:"Int32"})]}),(0,r.jsx)("dd",{children:"The maximum value."})]}),"\n",(0,r.jsx)(n.h4,{id:"return-value",children:"Return Value"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.int32",target:"_blank",rel:"noopener noreferrer",children:"Int32"}),(0,r.jsx)(n.br,{}),"\n","The clamped value."]}),"\n",(0,r.jsx)(n.h2,{id:"see-also",children:"See Also"}),"\n",(0,r.jsx)(n.h4,{id:"reference",children:"Reference"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)("a",{href:"T_Avalonia_Utilities_MathUtilities",children:"MathUtilities Class"}),(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)("a",{href:"Overload_Avalonia_Utilities_MathUtilities_Clamp",children:"Clamp Overload"}),(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)("a",{href:"N_Avalonia_Utilities",children:"Avalonia.Utilities Namespace"})]})]})}function h(e={}){let{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}function m(e,n){throw Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},116070:function(e,n,t){t.d(n,{Z:()=>s,a:()=>l});var i=t(841699);let r={},a=i.createContext(r);function l(e){let n=i.useContext(a);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(a.Provider,{value:n},e.children)}},541883:function(e){e.exports=JSON.parse('{"id":"M_Avalonia_Utilities_MathUtilities_Clamp_2","title":"Clamp(Int32, Int32, Int32) Method","description":"Clamps a value between a minimum and maximum value.","source":"@site/docs/M_Avalonia_Utilities_MathUtilities_Clamp_2.md","sourceDirName":".","slug":"/M_Avalonia_Utilities_MathUtilities_Clamp_2","permalink":"/Ava-ApiTests/docs/M_Avalonia_Utilities_MathUtilities_Clamp_2","draft":false,"unlisted":false,"editUrl":"https://github.com/timunie/Ava-ApiTests/docs/M_Avalonia_Utilities_MathUtilities_Clamp_2.md","tags":[],"version":"current","frontMatter":{}}')}}]);