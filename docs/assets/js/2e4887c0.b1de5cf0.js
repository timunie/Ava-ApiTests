"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["744626"],{158169:function(e,t,n){n.r(t),n.d(t,{default:()=>h,frontMatter:()=>l,metadata:()=>r,assets:()=>a,toc:()=>d,contentTitle:()=>s});var r=JSON.parse('{"id":"T_Avalonia_Platform_IGeometryImpl","title":"IGeometryImpl Interface","description":"Defines the platform-specific interface for a Geometry.","source":"@site/docs/T_Avalonia_Platform_IGeometryImpl.md","sourceDirName":".","slug":"/T_Avalonia_Platform_IGeometryImpl","permalink":"/Ava-ApiTests/docs/T_Avalonia_Platform_IGeometryImpl","draft":false,"unlisted":false,"editUrl":"https://github.com/timunie/Ava-ApiTests/docs/T_Avalonia_Platform_IGeometryImpl.md","tags":[],"version":"current","frontMatter":{},"sidebar":"documentationSidebar","previous":{"title":"IGeometryContext2 Interface","permalink":"/Ava-ApiTests/docs/T_Avalonia_Platform_IGeometryContext2"},"next":{"title":"IGlyphRunImpl Interface","permalink":"/Ava-ApiTests/docs/T_Avalonia_Platform_IGlyphRunImpl"}}'),i=n("785893"),o=n("250065");let l={},s="IGeometryImpl Interface",a={},d=[{value:"Definition",id:"definition",level:2},{value:"Properties",id:"properties",level:2},{value:"Methods",id:"methods",level:2},{value:"See Also",id:"see-also",level:2},{value:"Reference",id:"reference",level:4}];function c(e){let t={br:"br",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,o.a)(),...e.components},{TabItem:n,Tabs:r}=t;return n||m("TabItem",!0),r||m("Tabs",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"igeometryimpl-interface",children:"IGeometryImpl Interface"})}),"\n",(0,i.jsxs)(t.p,{children:["Defines the platform-specific interface for a ",(0,i.jsx)("a",{href:"T_Avalonia_Media_Geometry",children:"Geometry"}),"."]}),"\n",(0,i.jsx)(t.h2,{id:"definition",children:"Definition"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Namespace:"})," ",(0,i.jsx)("a",{href:"N_Avalonia_Platform",children:"Avalonia.Platform"}),(0,i.jsx)(t.br,{}),"\n",(0,i.jsx)(t.strong,{children:"Assembly:"})," Avalonia.Base (in Avalonia.Base.dll) Version: 11.2.0"]}),"\n",(0,i.jsxs)(r,{groupId:"api-code-preview",children:[(0,i.jsx)(n,{value:"csharp",label:"C#",children:(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-csharp",children:"public interface IGeometryImpl\n"})})}),(0,i.jsx)(n,{value:"vb",label:"VB",children:(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-vb",children:"Public Interface IGeometryImpl\n"})})}),(0,i.jsx)(n,{value:"fsharp",label:"F#",children:(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-fsharp",children:"type IGeometryImpl = interface end\n"})})})]}),"\n",(0,i.jsx)("a",{href:"https://github.com/AvaloniaUI/Avalonia/tree/master/src/Avalonia.Base/Platform/IGeometryImpl.cs",title:"View the source code",children:"View Source"}),"\n",(0,i.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,i.jsxs)("table",{children:[(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("a",{href:"P_Avalonia_Platform_IGeometryImpl_Bounds",children:"Bounds"})}),(0,i.jsx)("td",{children:"Gets the geometry's bounding rectangle."})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("a",{href:"P_Avalonia_Platform_IGeometryImpl_ContourLength",children:"ContourLength"})}),(0,i.jsx)("td",{children:"Gets the geometry's total length as if all its contours are placed in a straight line."})]})]}),"\n",(0,i.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,i.jsxs)("table",{children:[(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("a",{href:"M_Avalonia_Platform_IGeometryImpl_FillContains",children:"FillContains(Point)"})}),(0,i.jsx)("td",{children:"Indicates whether the geometry's fill contains the specified point."})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("a",{href:"M_Avalonia_Platform_IGeometryImpl_GetRenderBounds",children:"GetRenderBounds(IPen)"})}),(0,i.jsx)("td",{children:"Gets the geometry's bounding rectangle with the specified pen."})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("a",{href:"M_Avalonia_Platform_IGeometryImpl_GetWidenedGeometry",children:"GetWidenedGeometry(IPen)"})}),(0,i.jsx)("td",{children:"Gets a geometry that is the shape defined by the stroke on the geometry produced by the specified Pen."})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("a",{href:"M_Avalonia_Platform_IGeometryImpl_Intersect",children:"Intersect(IGeometryImpl)"})}),(0,i.jsx)("td",{children:"Intersects the geometry with another geometry."})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("a",{href:"M_Avalonia_Platform_IGeometryImpl_StrokeContains",children:"StrokeContains(IPen, Point)"})}),(0,i.jsx)("td",{children:"Indicates whether the geometry's stroke contains the specified point."})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("a",{href:"M_Avalonia_Platform_IGeometryImpl_TryGetPointAndTangentAtDistance",children:"TryGetPointAndTangentAtDistance(Double, Point, Point)"})}),(0,i.jsx)("td",{children:"Attempts to get the corresponding point and tangent from the specified distance along the contour of the geometry."})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("a",{href:"M_Avalonia_Platform_IGeometryImpl_TryGetPointAtDistance",children:"TryGetPointAtDistance(Double, Point)"})}),(0,i.jsx)("td",{children:"Attempts to get the corresponding point at the specified distance"})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("a",{href:"M_Avalonia_Platform_IGeometryImpl_TryGetSegment",children:"TryGetSegment(Double, Double, Boolean, IGeometryImpl)"})}),(0,i.jsx)("td",{children:"Attempts to get the corresponding path segment given by the two distances specified. Imagine it like snipping a part of the current geometry."})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("a",{href:"M_Avalonia_Platform_IGeometryImpl_WithTransform",children:"WithTransform(Matrix)"})}),(0,i.jsx)("td",{children:"Makes a clone of the geometry with the specified transform."})]})]}),"\n",(0,i.jsx)(t.h2,{id:"see-also",children:"See Also"}),"\n",(0,i.jsx)(t.h4,{id:"reference",children:"Reference"}),"\n",(0,i.jsx)("a",{href:"N_Avalonia_Platform",children:"Avalonia.Platform Namespace"})]})}function h(e={}){let{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}function m(e,t){throw Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},250065:function(e,t,n){n.d(t,{Z:function(){return s},a:function(){return l}});var r=n(667294);let i={},o=r.createContext(i);function l(e){let t=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),r.createElement(o.Provider,{value:t},e.children)}}}]);