"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["99556"],{82082:function(e,i,t){t.r(i),t.d(i,{assets:()=>d,contentTitle:()=>s,default:()=>h,frontMatter:()=>a,metadata:()=>n,toc:()=>l});var n=t(371296),r=t(696773),o=t(116070);let a={},s="CommitEdit(DataGridEditingUnit, Boolean) Method",d={},l=[{value:"Definition",id:"definition",level:2},{value:"Parameters",id:"parameters",level:4},{value:"Return Value",id:"return-value",level:4},{value:"See Also",id:"see-also",level:2},{value:"Reference",id:"reference",level:4}];function c(e){let i={br:"br",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,o.a)(),...e.components},{TabItem:t,Tabs:n}=i;return t||m("TabItem",!0),n||m("Tabs",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.header,{children:(0,r.jsx)(i.h1,{id:"commiteditdatagrideditingunit-boolean-method",children:"CommitEdit(DataGridEditingUnit, Boolean) Method"})}),"\n",(0,r.jsx)(i.p,{children:"Commits editing mode for the specified DataGridEditingUnit and pushes changes to the backend."}),"\n",(0,r.jsx)(i.h2,{id:"definition",children:"Definition"}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"Namespace:"})," ",(0,r.jsx)("a",{href:"N_Avalonia_Controls",children:"Avalonia.Controls"}),(0,r.jsx)(i.br,{}),"\n",(0,r.jsx)(i.strong,{children:"Assembly:"})," Avalonia.Controls.DataGrid (in Avalonia.Controls.DataGrid.dll)"]}),"\n",(0,r.jsxs)(n,{groupId:"api-code-preview",children:[(0,r.jsx)(t,{value:"csharp",label:"C#",children:(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-csharp",children:"public bool CommitEdit(\r\n	DataGridEditingUnit editingUnit,\r\n	bool exitEditingMode\r\n)\n"})})}),(0,r.jsx)(t,{value:"vb",label:"VB",children:(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-vb",children:"Public Function CommitEdit ( \r\n	editingUnit As DataGridEditingUnit,\r\n	exitEditingMode As Boolean\r\n) As Boolean\n"})})}),(0,r.jsx)(t,{value:"fsharp",label:"F#",children:(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-fsharp",children:"member CommitEdit : \r\n        editingUnit : DataGridEditingUnit * \r\n        exitEditingMode : bool -> bool \n"})})})]}),"\n",(0,r.jsx)("a",{href:"https://github.com/AvaloniaUI/Avalonia/tree/master/src/Avalonia.Controls.DataGrid/DataGrid.cs#L2030",title:"View the source code",children:"View Source"}),"\n",(0,r.jsx)(i.h4,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)("dl",{children:[(0,r.jsxs)("dt",{children:["\xa0\xa0",(0,r.jsx)("a",{href:"T_Avalonia_Controls_DataGridEditingUnit",children:"DataGridEditingUnit"})]}),(0,r.jsx)("dd",{children:"Specifies whether to commit edit for a Cell or Row."}),(0,r.jsxs)("dt",{children:["\xa0\xa0",(0,r.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.boolean",target:"_blank",rel:"noopener noreferrer",children:"Boolean"})]}),(0,r.jsx)("dd",{children:"Editing mode is left if True."})]}),"\n",(0,r.jsx)(i.h4,{id:"return-value",children:"Return Value"}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.boolean",target:"_blank",rel:"noopener noreferrer",children:"Boolean"}),(0,r.jsx)(i.br,{}),"\n","True if operation was successful. False otherwise."]}),"\n",(0,r.jsx)(i.h2,{id:"see-also",children:"See Also"}),"\n",(0,r.jsx)(i.h4,{id:"reference",children:"Reference"}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)("a",{href:"T_Avalonia_Controls_DataGrid",children:"DataGrid Class"}),(0,r.jsx)(i.br,{}),"\n",(0,r.jsx)("a",{href:"Overload_Avalonia_Controls_DataGrid_CommitEdit",children:"CommitEdit Overload"}),(0,r.jsx)(i.br,{}),"\n",(0,r.jsx)("a",{href:"N_Avalonia_Controls",children:"Avalonia.Controls Namespace"})]})]})}function h(e={}){let{wrapper:i}={...(0,o.a)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}function m(e,i){throw Error("Expected "+(i?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},116070:function(e,i,t){t.d(i,{Z:()=>s,a:()=>a});var n=t(841699);let r={},o=n.createContext(r);function a(e){let i=n.useContext(o);return n.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function s(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),n.createElement(o.Provider,{value:i},e.children)}},371296:function(e){e.exports=JSON.parse('{"id":"M_Avalonia_Controls_DataGrid_CommitEdit_1","title":"CommitEdit(DataGridEditingUnit, Boolean) Method","description":"Commits editing mode for the specified DataGridEditingUnit and pushes changes to the backend.","source":"@site/docs/M_Avalonia_Controls_DataGrid_CommitEdit_1.md","sourceDirName":".","slug":"/M_Avalonia_Controls_DataGrid_CommitEdit_1","permalink":"/Ava-ApiTests/docs/M_Avalonia_Controls_DataGrid_CommitEdit_1","draft":false,"unlisted":false,"editUrl":"https://github.com/timunie/Ava-ApiTests/docs/M_Avalonia_Controls_DataGrid_CommitEdit_1.md","tags":[],"version":"current","frontMatter":{}}')}}]);