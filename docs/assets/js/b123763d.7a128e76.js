"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["182817"],{196660:function(e,t,n){n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>d});var r=n(797263),s=n(696773),o=n(116070);let l={},a="UpdateChild Method",i={},d=[{value:"Definition",id:"definition",level:2},{value:"See Also",id:"see-also",level:2},{value:"Reference",id:"reference",level:4}];function c(e){let t={br:"br",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,o.a)(),...e.components},{TabItem:n,Tabs:r}=t;return n||p("TabItem",!0),r||p("Tabs",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"updatechild-method",children:"UpdateChild Method"})}),"\n",(0,s.jsxs)(t.p,{children:["Updates the ",(0,s.jsx)("a",{href:"P_Avalonia_Controls_Presenters_ContentPresenter_Child",children:"Child"})," control based on the control's ",(0,s.jsx)("a",{href:"P_Avalonia_Controls_Presenters_ContentPresenter_Content",children:"Content"}),"."]}),"\n",(0,s.jsx)(t.h2,{id:"definition",children:"Definition"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Namespace:"})," ",(0,s.jsx)("a",{href:"N_Avalonia_Controls_Presenters",children:"Avalonia.Controls.Presenters"}),(0,s.jsx)(t.br,{}),"\n",(0,s.jsx)(t.strong,{children:"Assembly:"})," Avalonia.Controls (in Avalonia.Controls.dll) Version: 11.2.0"]}),"\n",(0,s.jsxs)(r,{groupId:"api-code-preview",children:[(0,s.jsx)(n,{value:"csharp",label:"C#",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-csharp",children:"public void UpdateChild()\n"})})}),(0,s.jsx)(n,{value:"vb",label:"VB",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-vb",children:"Public Sub UpdateChild\n"})})}),(0,s.jsx)(n,{value:"fsharp",label:"F#",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-fsharp",children:"member UpdateChild : unit -> unit \n"})})})]}),"\n",(0,s.jsx)("a",{href:"https://github.com/AvaloniaUI/Avalonia/tree/master/src/Avalonia.Controls/Presenters/ContentPresenter.cs#L447",title:"View the source code",children:"View Source"}),"\n",(0,s.jsxs)(t.p,{children:["Usually the ",(0,s.jsx)("a",{href:"P_Avalonia_Controls_Presenters_ContentPresenter_Child",children:"Child"})," control is created automatically when ",(0,s.jsx)("a",{href:"M_Avalonia_Controls_Presenters_ContentPresenter_ApplyTemplate",children:"ApplyTemplate()"})," is called; however for this to happen, the control needs to be attached to a logical tree (if the control is not attached to the logical tree, it is reasonable to expect that the DataTemplates needed for the child are not yet available). This method forces the ",(0,s.jsx)("a",{href:"P_Avalonia_Controls_Presenters_ContentPresenter_Child",children:"Child"})," control's creation at any point, and is particularly useful in unit tests."]}),"\n",(0,s.jsx)(t.h2,{id:"see-also",children:"See Also"}),"\n",(0,s.jsx)(t.h4,{id:"reference",children:"Reference"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)("a",{href:"T_Avalonia_Controls_Presenters_ContentPresenter",children:"ContentPresenter Class"}),(0,s.jsx)(t.br,{}),"\n",(0,s.jsx)("a",{href:"N_Avalonia_Controls_Presenters",children:"Avalonia.Controls.Presenters Namespace"})]})]})}function h(e={}){let{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}function p(e,t){throw Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},116070:function(e,t,n){n.d(t,{Z:()=>a,a:()=>l});var r=n(841699);let s={},o=r.createContext(s);function l(e){let t=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),r.createElement(o.Provider,{value:t},e.children)}},797263:function(e){e.exports=JSON.parse('{"id":"M_Avalonia_Controls_Presenters_ContentPresenter_UpdateChild","title":"UpdateChild Method","description":"Updates the Child control based on the control\'s Content.","source":"@site/docs/M_Avalonia_Controls_Presenters_ContentPresenter_UpdateChild.md","sourceDirName":".","slug":"/M_Avalonia_Controls_Presenters_ContentPresenter_UpdateChild","permalink":"/Ava-ApiTests/docs/M_Avalonia_Controls_Presenters_ContentPresenter_UpdateChild","draft":false,"unlisted":false,"editUrl":"https://github.com/timunie/Ava-ApiTests/docs/M_Avalonia_Controls_Presenters_ContentPresenter_UpdateChild.md","tags":[],"version":"current","frontMatter":{}}')}}]);