"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["500411"],{236734:function(e,n,s){s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>c});var t=s(810953),i=s(696773),a=s(116070);let l={},r="PhysicalKeyExtensions Class",o={},c=[{value:"Definition",id:"definition",level:2},{value:"Methods",id:"methods",level:2},{value:"See Also",id:"see-also",level:2},{value:"Reference",id:"reference",level:4}];function d(e){let n={br:"br",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,a.a)(),...e.components},{TabItem:s,Tabs:t}=n;return s||p("TabItem",!0),t||p("Tabs",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"physicalkeyextensions-class",children:"PhysicalKeyExtensions Class"})}),"\n",(0,i.jsxs)(n.p,{children:["Contains extension methods related to ",(0,i.jsx)("a",{href:"T_Avalonia_Input_PhysicalKey",children:"PhysicalKey"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"definition",children:"Definition"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Namespace:"})," ",(0,i.jsx)("a",{href:"N_Avalonia_Input",children:"Avalonia.Input"}),(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Assembly:"})," Avalonia.Base (in Avalonia.Base.dll)"]}),"\n",(0,i.jsxs)(t,{groupId:"api-code-preview",children:[(0,i.jsx)(s,{value:"csharp",label:"C#",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:"public static class PhysicalKeyExtensions\n"})})}),(0,i.jsx)(s,{value:"vb",label:"VB",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-vb",children:"<ExtensionAttribute>\r\nPublic NotInheritable Class PhysicalKeyExtensions\n"})})}),(0,i.jsx)(s,{value:"fsharp",label:"F#",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-fsharp",children:"[<AbstractClassAttribute>]\r\n[<SealedAttribute>]\r\n[<ExtensionAttribute>]\r\ntype PhysicalKeyExtensions = class end\n"})})})]}),"\n",(0,i.jsx)("a",{href:"https://github.com/AvaloniaUI/Avalonia/tree/master/src/Avalonia.Base/Input/PhysicalKeyExtensions.cs",title:"View the source code",children:"View Source"}),"\n",(0,i.jsx)("table",{children:(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("strong",{children:"Inheritance"})}),(0,i.jsxs)("td",{children:[(0,i.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.object",target:"_blank",rel:"noopener noreferrer",children:"Object"}),"  â†’  PhysicalKeyExtensions"]})]})}),"\n",(0,i.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,i.jsxs)("table",{children:[(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("a",{href:"M_Avalonia_Input_PhysicalKeyExtensions_ToQwertyKey",children:"ToQwertyKey(PhysicalKey)"})}),(0,i.jsx)("td",{children:"Maps a physical key to a corresponding key, if possible, on a QWERTY keyboard."})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("a",{href:"M_Avalonia_Input_PhysicalKeyExtensions_ToQwertyKeySymbol",children:"ToQwertyKeySymbol(PhysicalKey, Boolean)"})}),(0,i.jsx)("td",{children:"Maps a physical key to a corresponding key symbol, if possible, on a QWERTY keyboard."})]})]}),"\n",(0,i.jsx)(n.h2,{id:"see-also",children:"See Also"}),"\n",(0,i.jsx)(n.h4,{id:"reference",children:"Reference"}),"\n",(0,i.jsx)("a",{href:"N_Avalonia_Input",children:"Avalonia.Input Namespace"})]})}function h(e={}){let{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}function p(e,n){throw Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},116070:function(e,n,s){s.d(n,{Z:()=>r,a:()=>l});var t=s(841699);let i={},a=t.createContext(i);function l(e){let n=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),t.createElement(a.Provider,{value:n},e.children)}},810953:function(e){e.exports=JSON.parse('{"id":"T_Avalonia_Input_PhysicalKeyExtensions","title":"PhysicalKeyExtensions Class","description":"Contains extension methods related to PhysicalKey.","source":"@site/docs/T_Avalonia_Input_PhysicalKeyExtensions.md","sourceDirName":".","slug":"/T_Avalonia_Input_PhysicalKeyExtensions","permalink":"/Ava-ApiTests/docs/T_Avalonia_Input_PhysicalKeyExtensions","draft":false,"unlisted":false,"editUrl":"https://github.com/timunie/Ava-ApiTests/docs/T_Avalonia_Input_PhysicalKeyExtensions.md","tags":[],"version":"current","frontMatter":{},"sidebar":"documentationSidebar","previous":{"title":"PhysicalKey Enumeration","permalink":"/Ava-ApiTests/docs/T_Avalonia_Input_PhysicalKey"},"next":{"title":"PinchEndedEventArgs Class","permalink":"/Ava-ApiTests/docs/T_Avalonia_Input_PinchEndedEventArgs"}}')}}]);