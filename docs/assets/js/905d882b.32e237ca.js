"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["506472"],{913707:function(e,a,n){n.r(a),n.d(a,{assets:()=>s,contentTitle:()=>c,default:()=>p,frontMatter:()=>i,metadata:()=>r,toc:()=>o});var r=n(553954),t=n(696773),l=n(116070);let i={},c="TryGetGlyphTypeface Method",s={},o=[{value:"Definition",id:"definition",level:2},{value:"Parameters",id:"parameters",level:4},{value:"Return Value",id:"return-value",level:4},{value:"See Also",id:"see-also",level:2},{value:"Reference",id:"reference",level:4}];function d(e){let a={br:"br",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,l.a)(),...e.components},{TabItem:n,Tabs:r}=a;return n||h("TabItem",!0),r||h("Tabs",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(a.header,{children:(0,t.jsx)(a.h1,{id:"trygetglyphtypeface-method",children:"TryGetGlyphTypeface Method"})}),"\n",(0,t.jsx)(a.p,{children:"Tries to get a glyph typeface for specified typeface."}),"\n",(0,t.jsx)(a.h2,{id:"definition",children:"Definition"}),"\n",(0,t.jsxs)(a.p,{children:[(0,t.jsx)(a.strong,{children:"Namespace:"})," ",(0,t.jsx)("a",{href:"N_Avalonia_Media",children:"Avalonia.Media"}),(0,t.jsx)(a.br,{}),"\n",(0,t.jsx)(a.strong,{children:"Assembly:"})," Avalonia.Base (in Avalonia.Base.dll) Version: 11.2.0"]}),"\n",(0,t.jsxs)(r,{groupId:"api-code-preview",children:[(0,t.jsx)(n,{value:"csharp",label:"C#",children:(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-csharp",children:"public bool TryGetGlyphTypeface(\r\n	Typeface typeface,\r\n	out IGlyphTypeface?? glyphTypeface\r\n)\n"})})}),(0,t.jsx)(n,{value:"vb",label:"VB",children:(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-vb",children:"Public Function TryGetGlyphTypeface ( \r\n	typeface As Typeface,\r\n	<OutAttribute> ByRef glyphTypeface As IGlyphTypeface\r\n) As Boolean\n"})})}),(0,t.jsx)(n,{value:"fsharp",label:"F#",children:(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-fsharp",children:"member TryGetGlyphTypeface : \r\n        typeface : Typeface * \r\n        glyphTypeface : IGlyphTypeface byref -> bool \n"})})})]}),"\n",(0,t.jsx)("a",{href:"https://github.com/AvaloniaUI/Avalonia/tree/master/src/Avalonia.Base/Media/FontManager.cs#L92",title:"View the source code",children:"View Source"}),"\n",(0,t.jsx)(a.h4,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsxs)("dl",{children:[(0,t.jsxs)("dt",{children:["\xa0\xa0",(0,t.jsx)("a",{href:"T_Avalonia_Media_Typeface",children:"Typeface"})]}),(0,t.jsx)("dd",{children:"The typeface."}),(0,t.jsxs)("dt",{children:["\xa0\xa0",(0,t.jsx)("a",{href:"T_Avalonia_Media_IGlyphTypeface",children:"IGlyphTypeface"})]}),(0,t.jsx)("dd",{children:"The created glyphTypeface"})]}),"\n",(0,t.jsx)(a.h4,{id:"return-value",children:"Return Value"}),"\n",(0,t.jsxs)(a.p,{children:[(0,t.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.boolean",target:"_blank",rel:"noopener noreferrer",children:"Boolean"}),(0,t.jsx)(a.br,{}),"\n",(0,t.jsx)(a.code,{children:"True"}),", if the ",(0,t.jsx)("a",{href:"T_Avalonia_Media_FontManager",children:"FontManager"})," could create the glyph typeface, ",(0,t.jsx)(a.code,{children:"False"})," otherwise."]}),"\n",(0,t.jsx)(a.h2,{id:"see-also",children:"See Also"}),"\n",(0,t.jsx)(a.h4,{id:"reference",children:"Reference"}),"\n",(0,t.jsxs)(a.p,{children:[(0,t.jsx)("a",{href:"T_Avalonia_Media_FontManager",children:"FontManager Class"}),(0,t.jsx)(a.br,{}),"\n",(0,t.jsx)("a",{href:"N_Avalonia_Media",children:"Avalonia.Media Namespace"})]})]})}function p(e={}){let{wrapper:a}={...(0,l.a)(),...e.components};return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}function h(e,a){throw Error("Expected "+(a?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},116070:function(e,a,n){n.d(a,{Z:()=>c,a:()=>i});var r=n(841699);let t={},l=r.createContext(t);function i(e){let a=r.useContext(l);return r.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function c(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(l.Provider,{value:a},e.children)}},553954:function(e){e.exports=JSON.parse('{"id":"M_Avalonia_Media_FontManager_TryGetGlyphTypeface","title":"TryGetGlyphTypeface Method","description":"Tries to get a glyph typeface for specified typeface.","source":"@site/docs/M_Avalonia_Media_FontManager_TryGetGlyphTypeface.md","sourceDirName":".","slug":"/M_Avalonia_Media_FontManager_TryGetGlyphTypeface","permalink":"/Ava-ApiTests/docs/M_Avalonia_Media_FontManager_TryGetGlyphTypeface","draft":false,"unlisted":false,"editUrl":"https://github.com/timunie/Ava-ApiTests/docs/M_Avalonia_Media_FontManager_TryGetGlyphTypeface.md","tags":[],"version":"current","frontMatter":{}}')}}]);