"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["105186"],{970449:function(e,r,n){n.r(r),n.d(r,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>d});var i=n(768674),a=n(696773),s=n(116070);let t={},l="MeasureOverride Method",o={},d=[{value:"Definition",id:"definition",level:2},{value:"Parameters",id:"parameters",level:4},{value:"Return Value",id:"return-value",level:4},{value:"See Also",id:"see-also",level:2},{value:"Reference",id:"reference",level:4}];function c(e){let r={br:"br",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,s.a)(),...e.components},{TabItem:n,Tabs:i}=r;return n||u("TabItem",!0),i||u("Tabs",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(r.header,{children:(0,a.jsx)(r.h1,{id:"measureoverride-method",children:"MeasureOverride Method"})}),"\n",(0,a.jsx)(r.p,{children:'General StackPanel layout behavior is to grow unbounded in the "stacking" direction (Size To Content). Children in this dimension are encouraged to be as large as they like. In the other dimension, StackPanel will assume the maximum size of its children.'}),"\n",(0,a.jsx)(r.h2,{id:"definition",children:"Definition"}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.strong,{children:"Namespace:"})," ",(0,a.jsx)("a",{href:"N_Avalonia_Controls",children:"Avalonia.Controls"}),(0,a.jsx)(r.br,{}),"\n",(0,a.jsx)(r.strong,{children:"Assembly:"})," Avalonia.Controls (in Avalonia.Controls.dll)"]}),"\n",(0,a.jsxs)(i,{groupId:"api-code-preview",children:[(0,a.jsx)(n,{value:"csharp",label:"C#",children:(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-csharp",children:"protected override Size MeasureOverride(\r\n	Size availableSize\r\n)\n"})})}),(0,a.jsx)(n,{value:"vb",label:"VB",children:(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-vb",children:"Protected Overrides Function MeasureOverride ( \r\n	availableSize As Size\r\n) As Size\n"})})}),(0,a.jsx)(n,{value:"fsharp",label:"F#",children:(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-fsharp",children:"abstract MeasureOverride : \r\n        availableSize : Size -> Size \r\noverride MeasureOverride : \r\n        availableSize : Size -> Size \n"})})})]}),"\n",(0,a.jsx)("a",{href:"https://github.com/AvaloniaUI/Avalonia/tree/master/src/Avalonia.Controls/StackPanel.cs#L235",title:"View the source code",children:"View Source"}),"\n",(0,a.jsx)(r.h4,{id:"parameters",children:"Parameters"}),"\n",(0,a.jsxs)("dl",{children:[(0,a.jsxs)("dt",{children:["\xa0\xa0",(0,a.jsx)("a",{href:"T_Avalonia_Size",children:"Size"})]}),(0,a.jsx)("dd",{children:"Constraint"})]}),"\n",(0,a.jsx)(r.h4,{id:"return-value",children:"Return Value"}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)("a",{href:"T_Avalonia_Size",children:"Size"}),(0,a.jsx)(r.br,{}),"\n","Desired size"]}),"\n",(0,a.jsx)(r.h2,{id:"see-also",children:"See Also"}),"\n",(0,a.jsx)(r.h4,{id:"reference",children:"Reference"}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)("a",{href:"T_Avalonia_Controls_StackPanel",children:"StackPanel Class"}),(0,a.jsx)(r.br,{}),"\n",(0,a.jsx)("a",{href:"N_Avalonia_Controls",children:"Avalonia.Controls Namespace"})]})]})}function h(e={}){let{wrapper:r}={...(0,s.a)(),...e.components};return r?(0,a.jsx)(r,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}function u(e,r){throw Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},116070:function(e,r,n){n.d(r,{Z:()=>l,a:()=>t});var i=n(841699);let a={},s=i.createContext(a);function t(e){let r=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:t(e.components),i.createElement(s.Provider,{value:r},e.children)}},768674:function(e){e.exports=JSON.parse('{"id":"M_Avalonia_Controls_StackPanel_MeasureOverride","title":"MeasureOverride Method","description":"General StackPanel layout behavior is to grow unbounded in the \\"stacking\\" direction (Size To Content). Children in this dimension are encouraged to be as large as they like. In the other dimension, StackPanel will assume the maximum size of its children.","source":"@site/docs/M_Avalonia_Controls_StackPanel_MeasureOverride.md","sourceDirName":".","slug":"/M_Avalonia_Controls_StackPanel_MeasureOverride","permalink":"/Ava-ApiTests/docs/M_Avalonia_Controls_StackPanel_MeasureOverride","draft":false,"unlisted":false,"editUrl":"https://github.com/timunie/Ava-ApiTests/docs/M_Avalonia_Controls_StackPanel_MeasureOverride.md","tags":[],"version":"current","frontMatter":{}}')}}]);