"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["608089"],{106236:function(e,t,i){i.r(t),i.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>n,toc:()=>c});var n=i(636800),s=i(696773),a=i(116070);let r={},l="CanCast<T> Method",o={},c=[{value:"Definition",id:"definition",level:2},{value:"Parameters",id:"parameters",level:4},{value:"Type Parameters",id:"type-parameters",level:4},{value:"Return Value",id:"return-value",level:4},{value:"See Also",id:"see-also",level:2},{value:"Reference",id:"reference",level:4}];function d(e){let t={br:"br",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,a.a)(),...e.components},{TabItem:i,Tabs:n}=t;return i||p("TabItem",!0),n||p("Tabs",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"cancastt-method",children:"CanCast<T> Method"})}),"\n",(0,s.jsx)(t.p,{children:"Returns a value indicating whether value can be casted to the specified type. If value is null, checks if instances of that type can be null."}),"\n",(0,s.jsx)(t.h2,{id:"definition",children:"Definition"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Namespace:"})," ",(0,s.jsx)("a",{href:"N_Avalonia_Utilities",children:"Avalonia.Utilities"}),(0,s.jsx)(t.br,{}),"\n",(0,s.jsx)(t.strong,{children:"Assembly:"})," Avalonia.Base (in Avalonia.Base.dll) Version: 11.2.0"]}),"\n",(0,s.jsxs)(n,{groupId:"api-code-preview",children:[(0,s.jsx)(i,{value:"csharp",label:"C#",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-csharp",children:"public static bool CanCast<T>(\r\n	Object? value\r\n)\r\n\n"})})}),(0,s.jsx)(i,{value:"vb",label:"VB",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-vb",children:"Public Shared Function CanCast(Of T) ( \r\n	value As Object\r\n) As Boolean\n"})})}),(0,s.jsx)(i,{value:"fsharp",label:"F#",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-fsharp",children:"static member CanCast : \r\n        value : Object -> bool \n"})})})]}),"\n",(0,s.jsx)("a",{href:"https://github.com/AvaloniaUI/Avalonia/tree/master/src/Avalonia.Base/Utilities/TypeUtilities.cs#L118",title:"View the source code",children:"View Source"}),"\n",(0,s.jsx)(t.h4,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsxs)("dt",{children:["\xa0\xa0",(0,s.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.object",target:"_blank",rel:"noopener noreferrer",children:"Object"})]}),(0,s.jsx)("dd",{children:"The value to check if cast possible"})]}),"\n",(0,s.jsx)(t.h4,{id:"type-parameters",children:"Type Parameters"}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{}),(0,s.jsx)("dd",{children:"The type to cast to"})]}),"\n",(0,s.jsx)(t.h4,{id:"return-value",children:"Return Value"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.boolean",target:"_blank",rel:"noopener noreferrer",children:"Boolean"}),(0,s.jsx)(t.br,{}),"\n","True if the cast is possible, otherwise false."]}),"\n",(0,s.jsx)(t.h2,{id:"see-also",children:"See Also"}),"\n",(0,s.jsx)(t.h4,{id:"reference",children:"Reference"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)("a",{href:"T_Avalonia_Utilities_TypeUtilities",children:"TypeUtilities Class"}),(0,s.jsx)(t.br,{}),"\n",(0,s.jsx)("a",{href:"N_Avalonia_Utilities",children:"Avalonia.Utilities Namespace"})]})]})}function h(e={}){let{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}function p(e,t){throw Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},116070:function(e,t,i){i.d(t,{Z:()=>l,a:()=>r});var n=i(841699);let s={},a=n.createContext(s);function r(e){let t=n.useContext(a);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),n.createElement(a.Provider,{value:t},e.children)}},636800:function(e){e.exports=JSON.parse('{"id":"M_Avalonia_Utilities_TypeUtilities_CanCast__1","title":"CanCast&lt;T&gt; Method","description":"Returns a value indicating whether value can be casted to the specified type. If value is null, checks if instances of that type can be null.","source":"@site/docs/M_Avalonia_Utilities_TypeUtilities_CanCast__1.md","sourceDirName":".","slug":"/M_Avalonia_Utilities_TypeUtilities_CanCast__1","permalink":"/Ava-ApiTests/docs/M_Avalonia_Utilities_TypeUtilities_CanCast__1","draft":false,"unlisted":false,"editUrl":"https://github.com/timunie/Ava-ApiTests/docs/M_Avalonia_Utilities_TypeUtilities_CanCast__1.md","tags":[],"version":"current","frontMatter":{}}')}}]);