"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["923606"],{52223:function(e,n,r){r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var i=r(809274),t=r(696773),a=r(116070);let s={},l="CopyPixels(PixelRect, IntPtr, Int32, Int32) Method",o={},c=[{value:"Definition",id:"definition",level:2},{value:"Parameters",id:"parameters",level:4},{value:"See Also",id:"see-also",level:2},{value:"Reference",id:"reference",level:4}];function d(e){let n={br:"br",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,a.a)(),...e.components},{TabItem:r,Tabs:i}=n;return r||p("TabItem",!0),i||p("Tabs",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"copypixelspixelrect-intptr-int32-int32-method",children:"CopyPixels(PixelRect, IntPtr, Int32, Int32) Method"})}),"\n",(0,t.jsx)(n.h2,{id:"definition",children:"Definition"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Namespace:"})," ",(0,t.jsx)("a",{href:"N_Avalonia_Media_Imaging",children:"Avalonia.Media.Imaging"}),(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)(n.strong,{children:"Assembly:"})," Avalonia.Base (in Avalonia.Base.dll)"]}),"\n",(0,t.jsxs)(i,{groupId:"api-code-preview",children:[(0,t.jsx)(r,{value:"csharp",label:"C#",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:"public virtual void CopyPixels(\r\n	PixelRect sourceRect,\r\n	IntPtr buffer,\r\n	int bufferSize,\r\n	int stride\r\n)\n"})})}),(0,t.jsx)(r,{value:"vb",label:"VB",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-vb",children:"Public Overridable Sub CopyPixels ( \r\n	sourceRect As PixelRect,\r\n	buffer As IntPtr,\r\n	bufferSize As Integer,\r\n	stride As Integer\r\n)\n"})})}),(0,t.jsx)(r,{value:"fsharp",label:"F#",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fsharp",children:"abstract CopyPixels : \r\n        sourceRect : PixelRect * \r\n        buffer : IntPtr * \r\n        bufferSize : int * \r\n        stride : int -> unit \r\noverride CopyPixels : \r\n        sourceRect : PixelRect * \r\n        buffer : IntPtr * \r\n        bufferSize : int * \r\n        stride : int -> unit \n"})})})]}),"\n",(0,t.jsx)("a",{href:"https://github.com/AvaloniaUI/Avalonia/tree/master/src/Avalonia.Base/Media/Imaging/Bitmap.cs#L222",title:"View the source code",children:"View Source"}),"\n",(0,t.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsxs)("dl",{children:[(0,t.jsxs)("dt",{children:["\xa0\xa0",(0,t.jsx)("a",{href:"T_Avalonia_PixelRect",children:"PixelRect"})]}),(0,t.jsx)("dd",{children:"\xa0"}),(0,t.jsxs)("dt",{children:["\xa0\xa0",(0,t.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.intptr",target:"_blank",rel:"noopener noreferrer",children:"IntPtr"})]}),(0,t.jsx)("dd",{children:"\xa0"}),(0,t.jsxs)("dt",{children:["\xa0\xa0",(0,t.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.int32",target:"_blank",rel:"noopener noreferrer",children:"Int32"})]}),(0,t.jsx)("dd",{children:"\xa0"}),(0,t.jsxs)("dt",{children:["\xa0\xa0",(0,t.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.int32",target:"_blank",rel:"noopener noreferrer",children:"Int32"})]}),(0,t.jsx)("dd",{children:"\xa0"})]}),"\n",(0,t.jsx)(n.h2,{id:"see-also",children:"See Also"}),"\n",(0,t.jsx)(n.h4,{id:"reference",children:"Reference"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)("a",{href:"T_Avalonia_Media_Imaging_Bitmap",children:"Bitmap Class"}),(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)("a",{href:"Overload_Avalonia_Media_Imaging_Bitmap_CopyPixels",children:"CopyPixels Overload"}),(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)("a",{href:"N_Avalonia_Media_Imaging",children:"Avalonia.Media.Imaging Namespace"})]})]})}function h(e={}){let{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}function p(e,n){throw Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},116070:function(e,n,r){r.d(n,{Z:()=>l,a:()=>s});var i=r(841699);let t={},a=i.createContext(t);function s(e){let n=i.useContext(a);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),i.createElement(a.Provider,{value:n},e.children)}},809274:function(e){e.exports=JSON.parse('{"id":"M_Avalonia_Media_Imaging_Bitmap_CopyPixels","title":"CopyPixels(PixelRect, IntPtr, Int32, Int32) Method","description":"Definition","source":"@site/docs/M_Avalonia_Media_Imaging_Bitmap_CopyPixels.md","sourceDirName":".","slug":"/M_Avalonia_Media_Imaging_Bitmap_CopyPixels","permalink":"/Ava-ApiTests/docs/M_Avalonia_Media_Imaging_Bitmap_CopyPixels","draft":false,"unlisted":false,"editUrl":"https://github.com/timunie/Ava-ApiTests/docs/M_Avalonia_Media_Imaging_Bitmap_CopyPixels.md","tags":[],"version":"current","frontMatter":{}}')}}]);