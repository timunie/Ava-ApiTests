"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["722075"],{824096:function(e,a,n){n.r(a),n.d(a,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>t,toc:()=>o});var t=n(735736),s=n(696773),l=n(116070);let r={},i="Equals Method",d={},o=[{value:"Overload List",id:"overload-list",level:2},{value:"See Also",id:"see-also",level:2},{value:"Reference",id:"reference",level:4}];function c(e){let a={br:"br",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",...(0,l.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(a.header,{children:(0,s.jsx)(a.h1,{id:"equals-method",children:"Equals Method"})}),"\n",(0,s.jsx)(a.h2,{id:"overload-list",children:"Overload List"}),"\n",(0,s.jsxs)("table",{children:[(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Media_Typeface_Equals_1",children:"Equals(Object)"})}),(0,s.jsx)("td",{children:"\xa0"})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Media_Typeface_Equals",children:"Equals(Typeface)"})}),(0,s.jsx)("td",{children:"\xa0"})]})]}),"\n",(0,s.jsx)(a.h2,{id:"see-also",children:"See Also"}),"\n",(0,s.jsx)(a.h4,{id:"reference",children:"Reference"}),"\n",(0,s.jsxs)(a.p,{children:[(0,s.jsx)("a",{href:"T_Avalonia_Media_Typeface",children:"Typeface Structure"}),(0,s.jsx)(a.br,{}),"\n",(0,s.jsx)("a",{href:"N_Avalonia_Media",children:"Avalonia.Media Namespace"})]})]})}function u(e={}){let{wrapper:a}={...(0,l.a)(),...e.components};return a?(0,s.jsx)(a,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},116070:function(e,a,n){n.d(a,{Z:()=>i,a:()=>r});var t=n(841699);let s={},l=t.createContext(s);function r(e){let a=t.useContext(l);return t.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function i(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(l.Provider,{value:a},e.children)}},735736:function(e){e.exports=JSON.parse('{"id":"Overload_Avalonia_Media_Typeface_Equals","title":"Equals Method","description":"Overload List","source":"@site/docs/Overload_Avalonia_Media_Typeface_Equals.md","sourceDirName":".","slug":"/Overload_Avalonia_Media_Typeface_Equals","permalink":"/Ava-ApiTests/docs/Overload_Avalonia_Media_Typeface_Equals","draft":false,"unlisted":false,"editUrl":"https://github.com/timunie/Ava-ApiTests/docs/Overload_Avalonia_Media_Typeface_Equals.md","tags":[],"version":"current","frontMatter":{}}')}}]);