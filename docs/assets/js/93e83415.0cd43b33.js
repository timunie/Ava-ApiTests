"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["685949"],{327073:function(e,r,t){t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>n,toc:()=>c});var n=t(371777),s=t(696773),o=t(116070);let i={},a="KeyEventArgs Class",l={},c=[{value:"Definition",id:"definition",level:2},{value:"Constructors",id:"constructors",level:2},{value:"Properties",id:"properties",level:2},{value:"Methods",id:"methods",level:2},{value:"See Also",id:"see-also",level:2},{value:"Reference",id:"reference",level:4}];function d(e){let r={br:"br",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,o.a)(),...e.components},{TabItem:t,Tabs:n}=r;return t||j("TabItem",!0),n||j("Tabs",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"keyeventargs-class",children:"KeyEventArgs Class"})}),"\n",(0,s.jsx)(r.p,{children:"Provides information specific to a keyboard event."}),"\n",(0,s.jsx)(r.h2,{id:"definition",children:"Definition"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Namespace:"})," ",(0,s.jsx)("a",{href:"N_Avalonia_Input",children:"Avalonia.Input"}),(0,s.jsx)(r.br,{}),"\n",(0,s.jsx)(r.strong,{children:"Assembly:"})," Avalonia.Base (in Avalonia.Base.dll)"]}),"\n",(0,s.jsxs)(n,{groupId:"api-code-preview",children:[(0,s.jsx)(t,{value:"csharp",label:"C#",children:(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-csharp",children:"public class KeyEventArgs : RoutedEventArgs\n"})})}),(0,s.jsx)(t,{value:"vb",label:"VB",children:(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-vb",children:"Public Class KeyEventArgs\r\n	Inherits RoutedEventArgs\n"})})}),(0,s.jsx)(t,{value:"fsharp",label:"F#",children:(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-fsharp",children:"type KeyEventArgs = \r\n    class\r\n        inherit RoutedEventArgs\r\n    end\n"})})})]}),"\n",(0,s.jsx)("a",{href:"https://github.com/AvaloniaUI/Avalonia/tree/master/src/Avalonia.Base/Input/KeyEventArgs.cs",title:"View the source code",children:"View Source"}),"\n",(0,s.jsx)("table",{children:(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("strong",{children:"Inheritance"})}),(0,s.jsxs)("td",{children:[(0,s.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.object",target:"_blank",rel:"noopener noreferrer",children:"Object"}),"  →  ",(0,s.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.eventargs",target:"_blank",rel:"noopener noreferrer",children:"EventArgs"}),"  →  ",(0,s.jsx)("a",{href:"T_Avalonia_Interactivity_RoutedEventArgs",children:"RoutedEventArgs"}),"  →  KeyEventArgs"]})]})}),"\n",(0,s.jsx)(r.h2,{id:"constructors",children:"Constructors"}),"\n",(0,s.jsx)("table",{children:(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Input_KeyEventArgs__ctor",children:"KeyEventArgs()"})}),(0,s.jsx)("td",{children:"Initializes a new instance of the KeyEventArgs class"})]})}),"\n",(0,s.jsx)(r.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsxs)("table",{children:[(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"P_Avalonia_Interactivity_RoutedEventArgs_Handled",children:"Handled"})}),(0,s.jsxs)("td",{children:["Gets or sets a value indicating whether the routed event has already been handled.",(0,s.jsx)("br",{}),"(Inherited from ",(0,s.jsx)("a",{href:"T_Avalonia_Interactivity_RoutedEventArgs",children:"RoutedEventArgs"}),")"]})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"P_Avalonia_Input_KeyEventArgs_Key",children:"Key"})}),(0,s.jsxs)("td",{children:[(0,s.jsxs)("p",{children:["Gets the virtual-key for the associated event.",(0,s.jsx)("br",{})," A given physical key can result in different virtual keys depending on the current keyboard layout.",(0,s.jsx)("br",{})," This is the key that is generally referred to when creating keyboard shortcuts."]}),(0,s.jsxs)("p",{children:["For example, when pressing the key located at the ",(0,s.jsx)("code",{children:"Z"})," position on standard US English QWERTY keyboard, this property returns:",(0,s.jsx)("br",{})," - ",(0,s.jsx)("a",{href:"T_Avalonia_Input_Key",children:"Z"})," for an English (QWERTY) layout",(0,s.jsx)("br",{})," - ",(0,s.jsx)("a",{href:"T_Avalonia_Input_Key",children:"W"})," for a French (AZERTY) layout",(0,s.jsx)("br",{})," - ",(0,s.jsx)("a",{href:"T_Avalonia_Input_Key",children:"Y"})," for a German (QWERTZ) layout",(0,s.jsx)("br",{})," - ",(0,s.jsx)("a",{href:"T_Avalonia_Input_Key",children:"Z"})," for a Russian (JCUKEN) layout"]})]})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"P_Avalonia_Input_KeyEventArgs_KeyDeviceType",children:"KeyDeviceType"})}),(0,s.jsx)("td",{children:"Type of the device that fire the event"})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"P_Avalonia_Input_KeyEventArgs_KeyModifiers",children:"KeyModifiers"})}),(0,s.jsx)("td",{children:"Gets the key modifiers for the associated event."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"P_Avalonia_Input_KeyEventArgs_KeySymbol",children:"KeySymbol"})}),(0,s.jsxs)("td",{children:[(0,s.jsx)("p",{children:"Gets the unicode symbol of the key, or null if none is applicable."}),(0,s.jsxs)("p",{children:["For example, when pressing the key located at the ",(0,s.jsx)("code",{children:"Z"})," position on standard US English QWERTY keyboard, this property returns:",(0,s.jsx)("br",{})," - ",(0,s.jsx)("code",{children:"z"})," for an English (QWERTY) layout",(0,s.jsx)("br",{})," - ",(0,s.jsx)("code",{children:"w"})," for a French (AZERTY) layout",(0,s.jsx)("br",{})," - ",(0,s.jsx)("code",{children:"y"})," for a German (QWERTZ) layout",(0,s.jsx)("br",{})," - ",(0,s.jsx)("code",{children:"я"})," for a Russian (JCUKEN) layout"]})]})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"P_Avalonia_Input_KeyEventArgs_PhysicalKey",children:"PhysicalKey"})}),(0,s.jsxs)("td",{children:[(0,s.jsx)("p",{children:"Gets the physical key for the associated event."}),(0,s.jsx)("p",{children:"This value is independent of the current keyboard layout and usually correspond to the key printed on a standard US English QWERTY keyboard."})]})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"P_Avalonia_Interactivity_RoutedEventArgs_Route",children:"Route"})}),(0,s.jsxs)("td",{children:["Gets or sets the routing strategy (direct, bubbling, or tunneling) of the routed event.",(0,s.jsx)("br",{}),"(Inherited from ",(0,s.jsx)("a",{href:"T_Avalonia_Interactivity_RoutedEventArgs",children:"RoutedEventArgs"}),")"]})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"P_Avalonia_Interactivity_RoutedEventArgs_RoutedEvent",children:"RoutedEvent"})}),(0,s.jsxs)("td",{children:["Gets or sets the routed event associated with these event args.",(0,s.jsx)("br",{}),"(Inherited from ",(0,s.jsx)("a",{href:"T_Avalonia_Interactivity_RoutedEventArgs",children:"RoutedEventArgs"}),")"]})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"P_Avalonia_Interactivity_RoutedEventArgs_Source",children:"Source"})}),(0,s.jsxs)("td",{children:["Gets or sets the source object that raised the routed event.",(0,s.jsx)("br",{}),"(Inherited from ",(0,s.jsx)("a",{href:"T_Avalonia_Interactivity_RoutedEventArgs",children:"RoutedEventArgs"}),")"]})]})]}),"\n",(0,s.jsx)(r.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsxs)("table",{children:[(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)",target:"_blank",rel:"noopener noreferrer",children:"Equals(Object)"})}),(0,s.jsxs)("td",{children:["Determines whether the specified object is equal to the current object.",(0,s.jsx)("br",{}),"(Inherited from ",(0,s.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.object",target:"_blank",rel:"noopener noreferrer",children:"Object"}),")"]})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.object.finalize",target:"_blank",rel:"noopener noreferrer",children:"Finalize()"})}),(0,s.jsxs)("td",{children:["Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.",(0,s.jsx)("br",{}),"(Inherited from ",(0,s.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.object",target:"_blank",rel:"noopener noreferrer",children:"Object"}),")"]})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.object.gethashcode",target:"_blank",rel:"noopener noreferrer",children:"GetHashCode()"})}),(0,s.jsxs)("td",{children:["Serves as the default hash function.",(0,s.jsx)("br",{}),"(Inherited from ",(0,s.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.object",target:"_blank",rel:"noopener noreferrer",children:"Object"}),")"]})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.object.gettype",target:"_blank",rel:"noopener noreferrer",children:"GetType()"})}),(0,s.jsxs)("td",{children:["Gets the ",(0,s.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.type",target:"_blank",rel:"noopener noreferrer",children:"Type"})," of the current instance.",(0,s.jsx)("br",{}),"(Inherited from ",(0,s.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.object",target:"_blank",rel:"noopener noreferrer",children:"Object"}),")"]})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone",target:"_blank",rel:"noopener noreferrer",children:"MemberwiseClone()"})}),(0,s.jsxs)("td",{children:["Creates a shallow copy of the current ",(0,s.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.object",target:"_blank",rel:"noopener noreferrer",children:"Object"}),".",(0,s.jsx)("br",{}),"(Inherited from ",(0,s.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.object",target:"_blank",rel:"noopener noreferrer",children:"Object"}),")"]})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.object.tostring",target:"_blank",rel:"noopener noreferrer",children:"ToString()"})}),(0,s.jsxs)("td",{children:["Returns a string that represents the current object.",(0,s.jsx)("br",{}),"(Inherited from ",(0,s.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.object",target:"_blank",rel:"noopener noreferrer",children:"Object"}),")"]})]})]}),"\n",(0,s.jsx)(r.h2,{id:"see-also",children:"See Also"}),"\n",(0,s.jsx)(r.h4,{id:"reference",children:"Reference"}),"\n",(0,s.jsx)("a",{href:"N_Avalonia_Input",children:"Avalonia.Input Namespace"})]})}function h(e={}){let{wrapper:r}={...(0,o.a)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}function j(e,r){throw Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},116070:function(e,r,t){t.d(r,{Z:()=>a,a:()=>i});var n=t(841699);let s={},o=n.createContext(s);function i(e){let r=n.useContext(o);return n.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),n.createElement(o.Provider,{value:r},e.children)}},371777:function(e){e.exports=JSON.parse('{"id":"T_Avalonia_Input_KeyEventArgs","title":"KeyEventArgs Class","description":"Provides information specific to a keyboard event.","source":"@site/docs/T_Avalonia_Input_KeyEventArgs.md","sourceDirName":".","slug":"/T_Avalonia_Input_KeyEventArgs","permalink":"/Ava-ApiTests/docs/T_Avalonia_Input_KeyEventArgs","draft":false,"unlisted":false,"editUrl":"https://github.com/timunie/Ava-ApiTests/docs/T_Avalonia_Input_KeyEventArgs.md","tags":[],"version":"current","frontMatter":{},"sidebar":"documentationSidebar","previous":{"title":"KeyDeviceType Enumeration","permalink":"/Ava-ApiTests/docs/T_Avalonia_Input_KeyDeviceType"},"next":{"title":"KeyGesture Class","permalink":"/Ava-ApiTests/docs/T_Avalonia_Input_KeyGesture"}}')}}]);