"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["266483"],{349002:function(e,t,i){i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>n,toc:()=>o});var n=i(409116),r=i(696773),a=i(116070);let s={},l="TextLineMetrics Structure",c={},o=[{value:"Definition",id:"definition",level:2},{value:"Properties",id:"properties",level:2},{value:"Methods",id:"methods",level:2},{value:"See Also",id:"see-also",level:2},{value:"Reference",id:"reference",level:4}];function d(e){let t={br:"br",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,a.a)(),...e.components},{TabItem:i,Tabs:n}=t;return i||x("TabItem",!0),n||x("Tabs",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"textlinemetrics-structure",children:"TextLineMetrics Structure"})}),"\n",(0,r.jsxs)(t.p,{children:["Represents a metric for a ",(0,r.jsx)("a",{href:"T_Avalonia_Media_TextFormatting_TextLine",children:"TextLine"})," objects, that holds information about ascent, descent, line gap, size and origin of the text line."]}),"\n",(0,r.jsx)(t.h2,{id:"definition",children:"Definition"}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Namespace:"})," ",(0,r.jsx)("a",{href:"N_Avalonia_Media_TextFormatting",children:"Avalonia.Media.TextFormatting"}),(0,r.jsx)(t.br,{}),"\n",(0,r.jsx)(t.strong,{children:"Assembly:"})," Avalonia.Base (in Avalonia.Base.dll) Version: 11.2.0"]}),"\n",(0,r.jsxs)(n,{groupId:"api-code-preview",children:[(0,r.jsx)(i,{value:"csharp",label:"C#",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-csharp",children:"public readonly struct TextLineMetrics : IEquatable<TextLineMetrics>\n"})})}),(0,r.jsx)(i,{value:"vb",label:"VB",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-vb",children:"Public Structure TextLineMetrics\r\n	Implements IEquatable(Of TextLineMetrics)\n"})})}),(0,r.jsx)(i,{value:"fsharp",label:"F#",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-fsharp",children:"[<SealedAttribute>]\r\ntype TextLineMetrics = \r\n    struct\r\n        inherit ValueType\r\n        interface IEquatable<TextLineMetrics>\r\n    end\n"})})})]}),"\n",(0,r.jsx)("a",{href:"https://github.com/AvaloniaUI/Avalonia/tree/master/src/Avalonia.Base/Media/TextFormatting/TextLineMetrics.cs",title:"View the source code",children:"View Source"}),"\n",(0,r.jsxs)("table",{children:[(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:(0,r.jsx)("strong",{children:"Inheritance"})}),(0,r.jsxs)("td",{children:[(0,r.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.object",target:"_blank",rel:"noopener noreferrer",children:"Object"}),"  →  ",(0,r.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.valuetype",target:"_blank",rel:"noopener noreferrer",children:"ValueType"}),"  →  TextLineMetrics"]})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:(0,r.jsx)("strong",{children:"Implements"})}),(0,r.jsxs)("td",{children:[(0,r.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.iequatable-1",target:"_blank",rel:"noopener noreferrer",children:"IEquatable"}),"(TextLineMetrics)"]})]})]}),"\n",(0,r.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,r.jsxs)("table",{children:[(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:(0,r.jsx)("a",{href:"P_Avalonia_Media_TextFormatting_TextLineMetrics_Extent",children:"Extent"})}),(0,r.jsx)("td",{children:"Gets the distance from the top-most to bottom-most black pixel in a line."})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:(0,r.jsx)("a",{href:"P_Avalonia_Media_TextFormatting_TextLineMetrics_HasOverflowed",children:"HasOverflowed"})}),(0,r.jsx)("td",{children:"Gets a value that indicates whether content of the line overflows the specified paragraph width."})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:(0,r.jsx)("a",{href:"P_Avalonia_Media_TextFormatting_TextLineMetrics_Height",children:"Height"})}),(0,r.jsx)("td",{children:"Gets the height of a line of text."})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:(0,r.jsx)("a",{href:"P_Avalonia_Media_TextFormatting_TextLineMetrics_NewlineLength",children:"NewlineLength"})}),(0,r.jsx)("td",{children:"Gets the number of newline characters at the end of a line."})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:(0,r.jsx)("a",{href:"P_Avalonia_Media_TextFormatting_TextLineMetrics_OverhangAfter",children:"OverhangAfter"})}),(0,r.jsx)("td",{children:"Gets the distance that black pixels extend beyond the bottom alignment edge of a line."})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:(0,r.jsx)("a",{href:"P_Avalonia_Media_TextFormatting_TextLineMetrics_OverhangLeading",children:"OverhangLeading"})}),(0,r.jsx)("td",{children:"Gets the distance that black pixels extend prior to the left leading alignment edge of the line."})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:(0,r.jsx)("a",{href:"P_Avalonia_Media_TextFormatting_TextLineMetrics_OverhangTrailing",children:"OverhangTrailing"})}),(0,r.jsx)("td",{children:"Gets the distance that black pixels extend following the right trailing alignment edge of the line."})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:(0,r.jsx)("a",{href:"P_Avalonia_Media_TextFormatting_TextLineMetrics_Start",children:"Start"})}),(0,r.jsx)("td",{children:"Gets the distance from the start of a paragraph to the starting point of a line."})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:(0,r.jsx)("a",{href:"P_Avalonia_Media_TextFormatting_TextLineMetrics_TextBaseline",children:"TextBaseline"})}),(0,r.jsx)("td",{children:"Gets the distance from the top to the baseline of the line of text."})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:(0,r.jsx)("a",{href:"P_Avalonia_Media_TextFormatting_TextLineMetrics_TrailingWhitespaceLength",children:"TrailingWhitespaceLength"})}),(0,r.jsx)("td",{children:"Gets the number of whitespace code points beyond the last non-blank character in a line."})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:(0,r.jsx)("a",{href:"P_Avalonia_Media_TextFormatting_TextLineMetrics_Width",children:"Width"})}),(0,r.jsx)("td",{children:"Gets the width of a line of text, excluding trailing whitespace characters."})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:(0,r.jsx)("a",{href:"P_Avalonia_Media_TextFormatting_TextLineMetrics_WidthIncludingTrailingWhitespace",children:"WidthIncludingTrailingWhitespace"})}),(0,r.jsx)("td",{children:"Gets the width of a line of text, including trailing whitespace characters."})]})]}),"\n",(0,r.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,r.jsx)("table",{children:(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:(0,r.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.object.gettype",target:"_blank",rel:"noopener noreferrer",children:"GetType()"})}),(0,r.jsxs)("td",{children:["Gets the ",(0,r.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.type",target:"_blank",rel:"noopener noreferrer",children:"Type"})," of the current instance.",(0,r.jsx)("br",{}),"(Inherited from ",(0,r.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.object",target:"_blank",rel:"noopener noreferrer",children:"Object"}),")"]})]})}),"\n",(0,r.jsx)(t.h2,{id:"see-also",children:"See Also"}),"\n",(0,r.jsx)(t.h4,{id:"reference",children:"Reference"}),"\n",(0,r.jsx)("a",{href:"N_Avalonia_Media_TextFormatting",children:"Avalonia.Media.TextFormatting Namespace"})]})}function h(e={}){let{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}function x(e,t){throw Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},116070:function(e,t,i){i.d(t,{Z:()=>l,a:()=>s});var n=i(841699);let r={},a=n.createContext(r);function s(e){let t=n.useContext(a);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),n.createElement(a.Provider,{value:t},e.children)}},409116:function(e){e.exports=JSON.parse('{"id":"T_Avalonia_Media_TextFormatting_TextLineMetrics","title":"TextLineMetrics Structure","description":"Represents a metric for a TextLine objects, that holds information about ascent, descent, line gap, size and origin of the text line.","source":"@site/docs/T_Avalonia_Media_TextFormatting_TextLineMetrics.md","sourceDirName":".","slug":"/T_Avalonia_Media_TextFormatting_TextLineMetrics","permalink":"/Ava-ApiTests/docs/T_Avalonia_Media_TextFormatting_TextLineMetrics","draft":false,"unlisted":false,"editUrl":"https://github.com/timunie/Ava-ApiTests/docs/T_Avalonia_Media_TextFormatting_TextLineMetrics.md","tags":[],"version":"current","frontMatter":{},"sidebar":"documentationSidebar","previous":{"title":"TextLineBreak Class","permalink":"/Ava-ApiTests/docs/T_Avalonia_Media_TextFormatting_TextLineBreak"},"next":{"title":"TextMetrics Structure","permalink":"/Ava-ApiTests/docs/T_Avalonia_Media_TextFormatting_TextMetrics"}}')}}]);