"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["621456"],{167749:function(e,n,r){r.r(n),r.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>f,frontMatter:()=>l,metadata:()=>i,toc:()=>u});var i=r(725316),a=r(696773),t=r(116070);let l={},o="EnableInitialBufferSwapping Property",s={},u=[{value:"Definition",id:"definition",level:2},{value:"Property Value",id:"property-value",level:4},{value:"See Also",id:"see-also",level:2},{value:"Reference",id:"reference",level:4}];function p(e){let n={br:"br",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,t.a)(),...e.components},{TabItem:r,Tabs:i}=n;return r||c("TabItem",!0),i||c("Tabs",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"enableinitialbufferswapping-property",children:"EnableInitialBufferSwapping Property"})}),"\n",(0,a.jsx)(n.p,{children:"If true an two cycle buffer swapping is processed at init. Default: True"}),"\n",(0,a.jsx)(n.h2,{id:"definition",children:"Definition"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Namespace:"})," ",(0,a.jsx)("a",{href:"N_Avalonia_LinuxFramebuffer",children:"Avalonia.LinuxFramebuffer"}),(0,a.jsx)(n.br,{}),"\n",(0,a.jsx)(n.strong,{children:"Assembly:"})," Avalonia.LinuxFramebuffer (in Avalonia.LinuxFramebuffer.dll)"]}),"\n",(0,a.jsxs)(i,{groupId:"api-code-preview",children:[(0,a.jsx)(r,{value:"csharp",label:"C#",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",children:"public bool EnableInitialBufferSwapping { get; set; }\n"})})}),(0,a.jsx)(r,{value:"vb",label:"VB",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-vb",children:"Public Property EnableInitialBufferSwapping As Boolean\r\n	Get\r\n	Set\n"})})}),(0,a.jsx)(r,{value:"fsharp",label:"F#",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-fsharp",children:"member EnableInitialBufferSwapping : bool with get, set\n"})})})]}),"\n",(0,a.jsx)("a",{href:"https://github.com/AvaloniaUI/Avalonia/tree/master/src/Linux/Avalonia.LinuxFramebuffer/DrmOutputOptions.cs#L20",title:"View the source code",children:"View Source"}),"\n",(0,a.jsx)(n.h4,{id:"property-value",children:"Property Value"}),"\n",(0,a.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.boolean",target:"_blank",rel:"noopener noreferrer",children:"Boolean"}),"\n",(0,a.jsx)(n.h2,{id:"see-also",children:"See Also"}),"\n",(0,a.jsx)(n.h4,{id:"reference",children:"Reference"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)("a",{href:"T_Avalonia_LinuxFramebuffer_DrmOutputOptions",children:"DrmOutputOptions Class"}),(0,a.jsx)(n.br,{}),"\n",(0,a.jsx)("a",{href:"N_Avalonia_LinuxFramebuffer",children:"Avalonia.LinuxFramebuffer Namespace"})]})]})}function f(e={}){let{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}function c(e,n){throw Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},116070:function(e,n,r){r.d(n,{Z:()=>o,a:()=>l});var i=r(841699);let a={},t=i.createContext(a);function l(e){let n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),i.createElement(t.Provider,{value:n},e.children)}},725316:function(e){e.exports=JSON.parse('{"id":"P_Avalonia_LinuxFramebuffer_DrmOutputOptions_EnableInitialBufferSwapping","title":"EnableInitialBufferSwapping Property","description":"If true an two cycle buffer swapping is processed at init. Default: True","source":"@site/docs/P_Avalonia_LinuxFramebuffer_DrmOutputOptions_EnableInitialBufferSwapping.md","sourceDirName":".","slug":"/P_Avalonia_LinuxFramebuffer_DrmOutputOptions_EnableInitialBufferSwapping","permalink":"/Ava-ApiTests/docs/P_Avalonia_LinuxFramebuffer_DrmOutputOptions_EnableInitialBufferSwapping","draft":false,"unlisted":false,"editUrl":"https://github.com/timunie/Ava-ApiTests/docs/P_Avalonia_LinuxFramebuffer_DrmOutputOptions_EnableInitialBufferSwapping.md","tags":[],"version":"current","frontMatter":{}}')}}]);