"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["363780"],{399676:function(e,i,n){n.r(i),n.d(i,{assets:()=>r,contentTitle:()=>a,default:()=>d,frontMatter:()=>l,metadata:()=>t,toc:()=>c});var t=n(191156),s=n(696773),o=n(116070);let l={},a="Windows Property",r={},c=[{value:"Definition",id:"definition",level:2},{value:"Property Value",id:"property-value",level:4},{value:"Implements",id:"implements",level:4},{value:"See Also",id:"see-also",level:2},{value:"Reference",id:"reference",level:4}];function p(e){let i={br:"br",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,o.a)(),...e.components},{TabItem:n,Tabs:t}=i;return n||h("TabItem",!0),t||h("Tabs",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"windows-property",children:"Windows Property"})}),"\n",(0,s.jsx)(i.p,{children:"Gets the list of all open windows in the application."}),"\n",(0,s.jsx)(i.h2,{id:"definition",children:"Definition"}),"\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Namespace:"})," ",(0,s.jsx)("a",{href:"N_Avalonia_Controls_ApplicationLifetimes",children:"Avalonia.Controls.ApplicationLifetimes"}),(0,s.jsx)(i.br,{}),"\n",(0,s.jsx)(i.strong,{children:"Assembly:"})," Avalonia.Controls (in Avalonia.Controls.dll)"]}),"\n",(0,s.jsxs)(t,{groupId:"api-code-preview",children:[(0,s.jsx)(n,{value:"csharp",label:"C#",children:(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-csharp",children:"public IReadOnlyList<Window> Windows { get; }\n"})})}),(0,s.jsx)(n,{value:"vb",label:"VB",children:(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-vb",children:"Public ReadOnly Property Windows As IReadOnlyList(Of Window)\r\n	Get\n"})})}),(0,s.jsx)(n,{value:"fsharp",label:"F#",children:(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-fsharp",children:"abstract Windows : IReadOnlyList<Window> with get\r\noverride Windows : IReadOnlyList<Window> with get\n"})})})]}),"\n",(0,s.jsx)("a",{href:"https://github.com/AvaloniaUI/Avalonia/tree/master/src/Avalonia.Controls/ApplicationLifetimes/ClassicDesktopStyleApplicationLifetime.cs#L44",title:"View the source code",children:"View Source"}),"\n",(0,s.jsx)(i.h4,{id:"property-value",children:"Property Value"}),"\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1",target:"_blank",rel:"noopener noreferrer",children:"IReadOnlyList"}),"(",(0,s.jsx)("a",{href:"T_Avalonia_Controls_Window",children:"Window"}),")"]}),"\n",(0,s.jsx)(i.h4,{id:"implements",children:"Implements"}),"\n",(0,s.jsx)("a",{href:"P_Avalonia_Controls_ApplicationLifetimes_IClassicDesktopStyleApplicationLifetime_Windows",children:"IClassicDesktopStyleApplicationLifetime.Windows"}),"\n",(0,s.jsx)(i.h2,{id:"see-also",children:"See Also"}),"\n",(0,s.jsx)(i.h4,{id:"reference",children:"Reference"}),"\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)("a",{href:"T_Avalonia_Controls_ApplicationLifetimes_ClassicDesktopStyleApplicationLifetime",children:"ClassicDesktopStyleApplicationLifetime Class"}),(0,s.jsx)(i.br,{}),"\n",(0,s.jsx)("a",{href:"N_Avalonia_Controls_ApplicationLifetimes",children:"Avalonia.Controls.ApplicationLifetimes Namespace"})]})]})}function d(e={}){let{wrapper:i}={...(0,o.a)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}function h(e,i){throw Error("Expected "+(i?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},116070:function(e,i,n){n.d(i,{Z:()=>a,a:()=>l});var t=n(841699);let s={},o=t.createContext(s);function l(e){let i=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),t.createElement(o.Provider,{value:i},e.children)}},191156:function(e){e.exports=JSON.parse('{"id":"P_Avalonia_Controls_ApplicationLifetimes_ClassicDesktopStyleApplicationLifetime_Windows","title":"Windows Property","description":"Gets the list of all open windows in the application.","source":"@site/docs/P_Avalonia_Controls_ApplicationLifetimes_ClassicDesktopStyleApplicationLifetime_Windows.md","sourceDirName":".","slug":"/P_Avalonia_Controls_ApplicationLifetimes_ClassicDesktopStyleApplicationLifetime_Windows","permalink":"/Ava-ApiTests/docs/P_Avalonia_Controls_ApplicationLifetimes_ClassicDesktopStyleApplicationLifetime_Windows","draft":false,"unlisted":false,"editUrl":"https://github.com/timunie/Ava-ApiTests/docs/P_Avalonia_Controls_ApplicationLifetimes_ClassicDesktopStyleApplicationLifetime_Windows.md","tags":[],"version":"current","frontMatter":{}}')}}]);