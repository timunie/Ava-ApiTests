"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["235186"],{711927:function(e,o,n){n.r(o),n.d(o,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>d});var i=n(943453),t=n(696773),s=n(116070);let r={},a="RequestCompositionUpdate Method",l={},d=[{value:"Definition",id:"definition",level:2},{value:"Parameters",id:"parameters",level:4},{value:"See Also",id:"see-also",level:2},{value:"Reference",id:"reference",level:4}];function c(e){let o={br:"br",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,s.a)(),...e.components},{TabItem:n,Tabs:i}=o;return n||u("TabItem",!0),i||u("Tabs",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(o.header,{children:(0,t.jsx)(o.h1,{id:"requestcompositionupdate-method",children:"RequestCompositionUpdate Method"})}),"\n",(0,t.jsx)(o.p,{children:"Enqueues a callback to be called before the next scheduled commit. If there is no scheduled commit it automatically schedules one This is useful for updating your composition tree objects after binding and layout passes have completed"}),"\n",(0,t.jsx)(o.h2,{id:"definition",children:"Definition"}),"\n",(0,t.jsxs)(o.p,{children:[(0,t.jsx)(o.strong,{children:"Namespace:"})," ",(0,t.jsx)("a",{href:"N_Avalonia_Rendering_Composition",children:"Avalonia.Rendering.Composition"}),(0,t.jsx)(o.br,{}),"\n",(0,t.jsx)(o.strong,{children:"Assembly:"})," Avalonia.Base (in Avalonia.Base.dll) Version: 11.2.0"]}),"\n",(0,t.jsxs)(i,{groupId:"api-code-preview",children:[(0,t.jsx)(n,{value:"csharp",label:"C#",children:(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-csharp",children:"public void RequestCompositionUpdate(\r\n	Action action\r\n)\n"})})}),(0,t.jsx)(n,{value:"vb",label:"VB",children:(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-vb",children:"Public Sub RequestCompositionUpdate ( \r\n	action As Action\r\n)\n"})})}),(0,t.jsx)(n,{value:"fsharp",label:"F#",children:(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-fsharp",children:"member RequestCompositionUpdate : \r\n        action : Action -> unit \n"})})})]}),"\n",(0,t.jsx)("a",{href:"https://github.com/AvaloniaUI/Avalonia/tree/master/src/Avalonia.Base/Rendering/Composition/Compositor.cs#L237",title:"View the source code",children:"View Source"}),"\n",(0,t.jsx)(o.h4,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsxs)("dl",{children:[(0,t.jsxs)("dt",{children:["\xa0\xa0",(0,t.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.action",target:"_blank",rel:"noopener noreferrer",children:"Action"})]}),(0,t.jsx)("dd",{children:"\xa0"})]}),"\n",(0,t.jsx)(o.h2,{id:"see-also",children:"See Also"}),"\n",(0,t.jsx)(o.h4,{id:"reference",children:"Reference"}),"\n",(0,t.jsxs)(o.p,{children:[(0,t.jsx)("a",{href:"T_Avalonia_Rendering_Composition_Compositor",children:"Compositor Class"}),(0,t.jsx)(o.br,{}),"\n",(0,t.jsx)("a",{href:"N_Avalonia_Rendering_Composition",children:"Avalonia.Rendering.Composition Namespace"})]})]})}function p(e={}){let{wrapper:o}={...(0,s.a)(),...e.components};return o?(0,t.jsx)(o,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}function u(e,o){throw Error("Expected "+(o?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},116070:function(e,o,n){n.d(o,{Z:()=>a,a:()=>r});var i=n(841699);let t={},s=i.createContext(t);function r(e){let o=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(o):{...o,...e}},[o,e])}function a(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(s.Provider,{value:o},e.children)}},943453:function(e){e.exports=JSON.parse('{"id":"M_Avalonia_Rendering_Composition_Compositor_RequestCompositionUpdate","title":"RequestCompositionUpdate Method","description":"Enqueues a callback to be called before the next scheduled commit. If there is no scheduled commit it automatically schedules one This is useful for updating your composition tree objects after binding and layout passes have completed","source":"@site/docs/M_Avalonia_Rendering_Composition_Compositor_RequestCompositionUpdate.md","sourceDirName":".","slug":"/M_Avalonia_Rendering_Composition_Compositor_RequestCompositionUpdate","permalink":"/Ava-ApiTests/docs/M_Avalonia_Rendering_Composition_Compositor_RequestCompositionUpdate","draft":false,"unlisted":false,"editUrl":"https://github.com/timunie/Ava-ApiTests/docs/M_Avalonia_Rendering_Composition_Compositor_RequestCompositionUpdate.md","tags":[],"version":"current","frontMatter":{}}')}}]);