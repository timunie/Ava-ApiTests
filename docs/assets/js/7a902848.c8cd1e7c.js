"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["912881"],{533720:function(e,n,r){r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var s=r(190425),t=r(696773),o=r(116070);let a={},i="FindAsync Method",l={},c=[{value:"Definition",id:"definition",level:2},{value:"Parameters",id:"parameters",level:4},{value:"Return Value",id:"return-value",level:4},{value:"See Also",id:"see-also",level:2},{value:"Reference",id:"reference",level:4}];function d(e){let n={br:"br",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,o.a)(),...e.components},{TabItem:r,Tabs:s}=n;return r||u("TabItem",!0),s||u("Tabs",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"findasync-method",children:"FindAsync Method"})}),"\n",(0,t.jsx)(n.p,{children:"Finds a named element in the name scope, waits for the scope to be completely populated before returning null Returned task is configured to run any continuations synchronously."}),"\n",(0,t.jsx)(n.h2,{id:"definition",children:"Definition"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Namespace:"})," ",(0,t.jsx)("a",{href:"N_Avalonia_Controls",children:"Avalonia.Controls"}),(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)(n.strong,{children:"Assembly:"})," Avalonia.Base (in Avalonia.Base.dll)"]}),"\n",(0,t.jsxs)(s,{groupId:"api-code-preview",children:[(0,t.jsx)(r,{value:"csharp",label:"C#",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:"SynchronousCompletionAsyncResult<Object> FindAsync(\r\n	string name\r\n)\n"})})}),(0,t.jsx)(r,{value:"vb",label:"VB",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-vb",children:"Function FindAsync ( \r\n	name As String\r\n) As SynchronousCompletionAsyncResult(Of Object)\n"})})}),(0,t.jsx)(r,{value:"fsharp",label:"F#",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fsharp",children:"abstract FindAsync : \r\n        name : string -> SynchronousCompletionAsyncResult<Object> \n"})})})]}),"\n",(0,t.jsx)("a",{href:"https://github.com/AvaloniaUI/Avalonia/tree/master/src/Avalonia.Base/Controls/INameScope.cs",title:"View the source code",children:"View Source"}),"\n",(0,t.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsxs)("dl",{children:[(0,t.jsxs)("dt",{children:["\xa0\xa0",(0,t.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.string",target:"_blank",rel:"noopener noreferrer",children:"String"})]}),(0,t.jsx)("dd",{children:"The name."})]}),"\n",(0,t.jsx)(n.h4,{id:"return-value",children:"Return Value"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)("a",{href:"T_Avalonia_Utilities_SynchronousCompletionAsyncResult_1",children:"SynchronousCompletionAsyncResult"}),"(",(0,t.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.object",target:"_blank",rel:"noopener noreferrer",children:"Object"}),")",(0,t.jsx)(n.br,{}),"\n","The element, or null if the name was not found."]}),"\n",(0,t.jsx)(n.h2,{id:"see-also",children:"See Also"}),"\n",(0,t.jsx)(n.h4,{id:"reference",children:"Reference"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)("a",{href:"T_Avalonia_Controls_INameScope",children:"INameScope Interface"}),(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)("a",{href:"N_Avalonia_Controls",children:"Avalonia.Controls Namespace"})]})]})}function h(e={}){let{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}function u(e,n){throw Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},116070:function(e,n,r){r.d(n,{Z:()=>i,a:()=>a});var s=r(841699);let t={},o=s.createContext(t);function a(e){let n=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),s.createElement(o.Provider,{value:n},e.children)}},190425:function(e){e.exports=JSON.parse('{"id":"M_Avalonia_Controls_INameScope_FindAsync","title":"FindAsync Method","description":"Finds a named element in the name scope, waits for the scope to be completely populated before returning null Returned task is configured to run any continuations synchronously.","source":"@site/docs/M_Avalonia_Controls_INameScope_FindAsync.md","sourceDirName":".","slug":"/M_Avalonia_Controls_INameScope_FindAsync","permalink":"/Ava-ApiTests/docs/M_Avalonia_Controls_INameScope_FindAsync","draft":false,"unlisted":false,"editUrl":"https://github.com/timunie/Ava-ApiTests/docs/M_Avalonia_Controls_INameScope_FindAsync.md","tags":[],"version":"current","frontMatter":{}}')}}]);