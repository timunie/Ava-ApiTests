"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["262612"],{136352:function(e,s,t){t.r(s),t.d(s,{default:()=>u,frontMatter:()=>i,metadata:()=>a,assets:()=>o,toc:()=>c,contentTitle:()=>l});var a=JSON.parse('{"id":"N_Avalonia_VisualTree","title":"Avalonia.VisualTree Namespace","description":"Classes","source":"@site/docs/N_Avalonia_VisualTree.md","sourceDirName":".","slug":"/N_Avalonia_VisualTree","permalink":"/Ava-ApiTests/docs/N_Avalonia_VisualTree","draft":false,"unlisted":false,"editUrl":"https://github.com/timunie/Ava-ApiTests/docs/N_Avalonia_VisualTree.md","tags":[],"version":"current","frontMatter":{},"sidebar":"documentationSidebar","previous":{"title":"PathGeometryContext Class","permalink":"/Ava-ApiTests/docs/T_Avalonia_Visuals_Platform_PathGeometryContext"},"next":{"title":"IHostedVisualTreeRoot Interface","permalink":"/Ava-ApiTests/docs/T_Avalonia_VisualTree_IHostedVisualTreeRoot"}}'),n=t("785893"),r=t("250065");let i={},l="Avalonia.VisualTree Namespace",o={},c=[{value:"Classes",id:"classes",level:2},{value:"Structures",id:"structures",level:2},{value:"Interfaces",id:"interfaces",level:2}];function d(e){let s={h1:"h1",h2:"h2",header:"header",...(0,r.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"avaloniavisualtree-namespace",children:"Avalonia.VisualTree Namespace"})}),"\n",(0,n.jsx)(s.h2,{id:"classes",children:"Classes"}),"\n",(0,n.jsxs)("table",{children:[(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"T_Avalonia_VisualTree_VisualExtensions",children:"VisualExtensions"})}),(0,n.jsx)("td",{children:"Provides extension methods for working with the visual tree."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"T_Avalonia_VisualTree_VisualLocator",children:"VisualLocator"})}),(0,n.jsx)("td",{children:"\xa0"})]})]}),"\n",(0,n.jsx)(s.h2,{id:"structures",children:"Structures"}),"\n",(0,n.jsx)("table",{children:(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"T_Avalonia_VisualTree_TransformedBounds",children:"TransformedBounds"})}),(0,n.jsx)("td",{children:"Holds information about the bounds of a control, together with a transform and a clip."})]})}),"\n",(0,n.jsx)(s.h2,{id:"interfaces",children:"Interfaces"}),"\n",(0,n.jsx)("table",{children:(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"T_Avalonia_VisualTree_IHostedVisualTreeRoot",children:"IHostedVisualTreeRoot"})}),(0,n.jsx)("td",{children:"Interface for controls that are at the root of a hosted visual tree, such as popups."})]})})]})}function u(e={}){let{wrapper:s}={...(0,r.a)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},250065:function(e,s,t){t.d(s,{Z:function(){return l},a:function(){return i}});var a=t(667294);let n={},r=a.createContext(n);function i(e){let s=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),a.createElement(r.Provider,{value:s},e.children)}}}]);