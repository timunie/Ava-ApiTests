"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["74306"],{544333:function(e,r,n){n.r(r),n.d(r,{assets:()=>s,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>a});var o=n(330658),l=n(696773),t=n(116070);let i={},c="IScrollAnchorProvider Interface",s={},a=[{value:"Definition",id:"definition",level:2},{value:"Properties",id:"properties",level:2},{value:"Methods",id:"methods",level:2},{value:"See Also",id:"see-also",level:2},{value:"Reference",id:"reference",level:4}];function d(e){let r={br:"br",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,t.a)(),...e.components},{TabItem:n,Tabs:o}=r;return n||p("TabItem",!0),o||p("Tabs",!0),(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(r.header,{children:(0,l.jsx)(r.h1,{id:"iscrollanchorprovider-interface",children:"IScrollAnchorProvider Interface"})}),"\n",(0,l.jsx)(r.p,{children:"Specifies a contract for a scrolling control that supports scroll anchoring."}),"\n",(0,l.jsx)(r.h2,{id:"definition",children:"Definition"}),"\n",(0,l.jsxs)(r.p,{children:[(0,l.jsx)(r.strong,{children:"Namespace:"})," ",(0,l.jsx)("a",{href:"N_Avalonia_Controls",children:"Avalonia.Controls"}),(0,l.jsx)(r.br,{}),"\n",(0,l.jsx)(r.strong,{children:"Assembly:"})," Avalonia.Controls (in Avalonia.Controls.dll)"]}),"\n",(0,l.jsxs)(o,{groupId:"api-code-preview",children:[(0,l.jsx)(n,{value:"csharp",label:"C#",children:(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-csharp",children:"public interface IScrollAnchorProvider\n"})})}),(0,l.jsx)(n,{value:"vb",label:"VB",children:(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-vb",children:"Public Interface IScrollAnchorProvider\n"})})}),(0,l.jsx)(n,{value:"fsharp",label:"F#",children:(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-fsharp",children:"type IScrollAnchorProvider = interface end\n"})})})]}),"\n",(0,l.jsx)("a",{href:"https://github.com/AvaloniaUI/Avalonia/tree/master/src/Avalonia.Controls/IScrollAnchorProvider.cs",title:"View the source code",children:"View Source"}),"\n",(0,l.jsx)(r.h2,{id:"properties",children:"Properties"}),"\n",(0,l.jsx)("table",{children:(0,l.jsxs)("tr",{children:[(0,l.jsx)("td",{children:(0,l.jsx)("a",{href:"P_Avalonia_Controls_IScrollAnchorProvider_CurrentAnchor",children:"CurrentAnchor"})}),(0,l.jsx)("td",{children:"The currently chosen anchor element to use for scroll anchoring."})]})}),"\n",(0,l.jsx)(r.h2,{id:"methods",children:"Methods"}),"\n",(0,l.jsxs)("table",{children:[(0,l.jsxs)("tr",{children:[(0,l.jsx)("td",{children:(0,l.jsx)("a",{href:"M_Avalonia_Controls_IScrollAnchorProvider_RegisterAnchorCandidate",children:"RegisterAnchorCandidate(Control)"})}),(0,l.jsx)("td",{children:"Registers a control as a potential scroll anchor candidate."})]}),(0,l.jsxs)("tr",{children:[(0,l.jsx)("td",{children:(0,l.jsx)("a",{href:"M_Avalonia_Controls_IScrollAnchorProvider_UnregisterAnchorCandidate",children:"UnregisterAnchorCandidate(Control)"})}),(0,l.jsx)("td",{children:"Unregisters a control as a potential scroll anchor candidate."})]})]}),"\n",(0,l.jsx)(r.h2,{id:"see-also",children:"See Also"}),"\n",(0,l.jsx)(r.h4,{id:"reference",children:"Reference"}),"\n",(0,l.jsx)("a",{href:"N_Avalonia_Controls",children:"Avalonia.Controls Namespace"})]})}function h(e={}){let{wrapper:r}={...(0,t.a)(),...e.components};return r?(0,l.jsx)(r,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}function p(e,r){throw Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},116070:function(e,r,n){n.d(r,{Z:()=>c,a:()=>i});var o=n(841699);let l={},t=o.createContext(l);function i(e){let r=o.useContext(t);return o.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:i(e.components),o.createElement(t.Provider,{value:r},e.children)}},330658:function(e){e.exports=JSON.parse('{"id":"T_Avalonia_Controls_IScrollAnchorProvider","title":"IScrollAnchorProvider Interface","description":"Specifies a contract for a scrolling control that supports scroll anchoring.","source":"@site/docs/T_Avalonia_Controls_IScrollAnchorProvider.md","sourceDirName":".","slug":"/T_Avalonia_Controls_IScrollAnchorProvider","permalink":"/Ava-ApiTests/docs/T_Avalonia_Controls_IScrollAnchorProvider","draft":false,"unlisted":false,"editUrl":"https://github.com/timunie/Ava-ApiTests/docs/T_Avalonia_Controls_IScrollAnchorProvider.md","tags":[],"version":"current","frontMatter":{},"sidebar":"documentationSidebar","previous":{"title":"IResourceProvider Interface","permalink":"/Ava-ApiTests/docs/T_Avalonia_Controls_IResourceProvider"},"next":{"title":"ISelectable Interface","permalink":"/Ava-ApiTests/docs/T_Avalonia_Controls_ISelectable"}}')}}]);