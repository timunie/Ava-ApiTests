"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["598542"],{580793:function(e,t,n){n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>a,default:()=>d,frontMatter:()=>l,metadata:()=>s,toc:()=>h});var s=n(762204),i=n(696773),r=n(116070);let l={},a="LessThan(Single, Single) Method",o={},h=[{value:"Definition",id:"definition",level:2},{value:"Parameters",id:"parameters",level:4},{value:"Return Value",id:"return-value",level:4},{value:"See Also",id:"see-also",level:2},{value:"Reference",id:"reference",level:4}];function c(e){let t={br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,r.a)(),...e.components},{TabItem:n,Tabs:s}=t;return n||u("TabItem",!0),s||u("Tabs",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"lessthansingle-single-method",children:"LessThan(Single, Single) Method"})}),"\n",(0,i.jsxs)(t.p,{children:["LessThan - Returns whether or not the first float is less than the second float. That is, whether or not the first is strictly less than ",(0,i.jsx)(t.em,{children:"and"})," not within epsilon of the other number."]}),"\n",(0,i.jsx)(t.h2,{id:"definition",children:"Definition"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Namespace:"})," ",(0,i.jsx)("a",{href:"N_Avalonia_Utilities",children:"Avalonia.Utilities"}),(0,i.jsx)(t.br,{}),"\n",(0,i.jsx)(t.strong,{children:"Assembly:"})," Avalonia.Base (in Avalonia.Base.dll) Version: 11.2.0"]}),"\n",(0,i.jsxs)(s,{groupId:"api-code-preview",children:[(0,i.jsx)(n,{value:"csharp",label:"C#",children:(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-csharp",children:"public static bool LessThan(\r\n	float value1,\r\n	float value2\r\n)\n"})})}),(0,i.jsx)(n,{value:"vb",label:"VB",children:(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-vb",children:"Public Shared Function LessThan ( \r\n	value1 As Single,\r\n	value2 As Single\r\n) As Boolean\n"})})}),(0,i.jsx)(n,{value:"fsharp",label:"F#",children:(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-fsharp",children:"static member LessThan : \r\n        value1 : float32 * \r\n        value2 : float32 -> bool \n"})})})]}),"\n",(0,i.jsx)("a",{href:"https://github.com/AvaloniaUI/Avalonia/tree/master/src/Avalonia.Base/Utilities/MathUtilities.cs#L89",title:"View the source code",children:"View Source"}),"\n",(0,i.jsx)(t.h4,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)("dl",{children:[(0,i.jsxs)("dt",{children:["\xa0\xa0",(0,i.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.single",target:"_blank",rel:"noopener noreferrer",children:"Single"})]}),(0,i.jsx)("dd",{children:"The first single float to compare."}),(0,i.jsxs)("dt",{children:["\xa0\xa0",(0,i.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.single",target:"_blank",rel:"noopener noreferrer",children:"Single"})]}),(0,i.jsx)("dd",{children:"The second single float to compare."})]}),"\n",(0,i.jsx)(t.h4,{id:"return-value",children:"Return Value"}),"\n",(0,i.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.boolean",target:"_blank",rel:"noopener noreferrer",children:"Boolean"}),"\n",(0,i.jsx)(t.h2,{id:"see-also",children:"See Also"}),"\n",(0,i.jsx)(t.h4,{id:"reference",children:"Reference"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)("a",{href:"T_Avalonia_Utilities_MathUtilities",children:"MathUtilities Class"}),(0,i.jsx)(t.br,{}),"\n",(0,i.jsx)("a",{href:"Overload_Avalonia_Utilities_MathUtilities_LessThan",children:"LessThan Overload"}),(0,i.jsx)(t.br,{}),"\n",(0,i.jsx)("a",{href:"N_Avalonia_Utilities",children:"Avalonia.Utilities Namespace"})]})]})}function d(e={}){let{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}function u(e,t){throw Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},116070:function(e,t,n){n.d(t,{Z:()=>a,a:()=>l});var s=n(841699);let i={},r=s.createContext(i);function l(e){let t=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(r.Provider,{value:t},e.children)}},762204:function(e){e.exports=JSON.parse('{"id":"M_Avalonia_Utilities_MathUtilities_LessThan_1","title":"LessThan(Single, Single) Method","description":"LessThan - Returns whether or not the first float is less than the second float. That is, whether or not the first is strictly less than and not within epsilon of the other number.","source":"@site/docs/M_Avalonia_Utilities_MathUtilities_LessThan_1.md","sourceDirName":".","slug":"/M_Avalonia_Utilities_MathUtilities_LessThan_1","permalink":"/Ava-ApiTests/docs/M_Avalonia_Utilities_MathUtilities_LessThan_1","draft":false,"unlisted":false,"editUrl":"https://github.com/timunie/Ava-ApiTests/docs/M_Avalonia_Utilities_MathUtilities_LessThan_1.md","tags":[],"version":"current","frontMatter":{}}')}}]);