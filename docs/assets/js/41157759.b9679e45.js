"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["652101"],{741831:function(e,i,t){t.r(i),t.d(i,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>o});var s=t(139421),l=t(696773),n=t(116070);let r={},a="TypeUtilities Class",c={},o=[{value:"Definition",id:"definition",level:2},{value:"Methods",id:"methods",level:2},{value:"See Also",id:"see-also",level:2},{value:"Reference",id:"reference",level:4}];function d(e){let i={br:"br",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,n.a)(),...e.components},{TabItem:t,Tabs:s}=i;return t||p("TabItem",!0),s||p("Tabs",!0),(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(i.header,{children:(0,l.jsx)(i.h1,{id:"typeutilities-class",children:"TypeUtilities Class"})}),"\n",(0,l.jsx)(i.p,{children:"Provides utilities for working with types at runtime."}),"\n",(0,l.jsx)(i.h2,{id:"definition",children:"Definition"}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.strong,{children:"Namespace:"})," ",(0,l.jsx)("a",{href:"N_Avalonia_Utilities",children:"Avalonia.Utilities"}),(0,l.jsx)(i.br,{}),"\n",(0,l.jsx)(i.strong,{children:"Assembly:"})," Avalonia.Base (in Avalonia.Base.dll)"]}),"\n",(0,l.jsxs)(s,{groupId:"api-code-preview",children:[(0,l.jsx)(t,{value:"csharp",label:"C#",children:(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-csharp",children:"public static class TypeUtilities\n"})})}),(0,l.jsx)(t,{value:"vb",label:"VB",children:(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-vb",children:"Public NotInheritable Class TypeUtilities\n"})})}),(0,l.jsx)(t,{value:"fsharp",label:"F#",children:(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-fsharp",children:"[<AbstractClassAttribute>]\r\n[<SealedAttribute>]\r\ntype TypeUtilities = class end\n"})})})]}),"\n",(0,l.jsx)("a",{href:"https://github.com/AvaloniaUI/Avalonia/tree/master/src/Avalonia.Base/Utilities/TypeUtilities.cs",title:"View the source code",children:"View Source"}),"\n",(0,l.jsx)("table",{children:(0,l.jsxs)("tr",{children:[(0,l.jsx)("td",{children:(0,l.jsx)("strong",{children:"Inheritance"})}),(0,l.jsxs)("td",{children:[(0,l.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.object",target:"_blank",rel:"noopener noreferrer",children:"Object"}),"  â†’  TypeUtilities"]})]})}),"\n",(0,l.jsx)(i.h2,{id:"methods",children:"Methods"}),"\n",(0,l.jsxs)("table",{children:[(0,l.jsxs)("tr",{children:[(0,l.jsx)("td",{children:(0,l.jsx)("a",{href:"M_Avalonia_Utilities_TypeUtilities_AcceptsNull",children:"AcceptsNull(Type)"})}),(0,l.jsx)("td",{children:"Returns a value indicating whether null can be assigned to the specified type."})]}),(0,l.jsxs)("tr",{children:[(0,l.jsx)("td",{children:(0,l.jsx)("a",{href:"M_Avalonia_Utilities_TypeUtilities_AcceptsNull__1",children:"AcceptsNull(T)()"})}),(0,l.jsx)("td",{children:"Returns a value indicating whether null can be assigned to the specified type."})]}),(0,l.jsxs)("tr",{children:[(0,l.jsx)("td",{children:(0,l.jsx)("a",{href:"M_Avalonia_Utilities_TypeUtilities_CanCast__1",children:"CanCast(T)(Object)"})}),(0,l.jsx)("td",{children:"Returns a value indicating whether value can be casted to the specified type. If value is null, checks if instances of that type can be null."})]}),(0,l.jsxs)("tr",{children:[(0,l.jsx)("td",{children:(0,l.jsx)("a",{href:"M_Avalonia_Utilities_TypeUtilities_ConvertImplicit__1",children:"ConvertImplicit(T)(Object)"})}),(0,l.jsx)("td",{children:"\xa0"})]}),(0,l.jsxs)("tr",{children:[(0,l.jsx)("td",{children:(0,l.jsx)("a",{href:"M_Avalonia_Utilities_TypeUtilities_ConvertImplicitOrDefault",children:"ConvertImplicitOrDefault(Object, Type)"})}),(0,l.jsx)("td",{children:"Convert a value to a type using the implicit conversions allowed by the C# language or return the default for the type if the value could not be converted."})]}),(0,l.jsxs)("tr",{children:[(0,l.jsx)("td",{children:(0,l.jsx)("a",{href:"M_Avalonia_Utilities_TypeUtilities_ConvertOrDefault",children:"ConvertOrDefault(Object, Type, CultureInfo)"})}),(0,l.jsx)("td",{children:"Convert a value to a type by any means possible, returning the default for that type if the value could not be converted."})]}),(0,l.jsxs)("tr",{children:[(0,l.jsx)("td",{children:(0,l.jsx)("a",{href:"M_Avalonia_Utilities_TypeUtilities_Default",children:"Default(Type)"})}),(0,l.jsx)("td",{children:"Gets the default value for the specified type."})]}),(0,l.jsxs)("tr",{children:[(0,l.jsx)("td",{children:(0,l.jsx)("a",{href:"M_Avalonia_Utilities_TypeUtilities_IsNumeric",children:"IsNumeric(Type)"})}),(0,l.jsx)("td",{children:"Determines if a type is numeric. Nullable numeric types are considered numeric."})]}),(0,l.jsxs)("tr",{children:[(0,l.jsx)("td",{children:(0,l.jsx)("a",{href:"M_Avalonia_Utilities_TypeUtilities_TryConvert",children:"TryConvert(Type, Object, CultureInfo, Object)"})}),(0,l.jsx)("td",{children:"Try to convert a value to a type by any means possible."})]}),(0,l.jsxs)("tr",{children:[(0,l.jsx)("td",{children:(0,l.jsx)("a",{href:"M_Avalonia_Utilities_TypeUtilities_TryConvertImplicit",children:"TryConvertImplicit(Type, Object, Object)"})}),(0,l.jsx)("td",{children:"Try to convert a value to a type using the implicit conversions allowed by the C# language."})]})]}),"\n",(0,l.jsx)(i.h2,{id:"see-also",children:"See Also"}),"\n",(0,l.jsx)(i.h4,{id:"reference",children:"Reference"}),"\n",(0,l.jsx)("a",{href:"N_Avalonia_Utilities",children:"Avalonia.Utilities Namespace"})]})}function h(e={}){let{wrapper:i}={...(0,n.a)(),...e.components};return i?(0,l.jsx)(i,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}function p(e,i){throw Error("Expected "+(i?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},116070:function(e,i,t){t.d(i,{Z:()=>a,a:()=>r});var s=t(841699);let l={},n=s.createContext(l);function r(e){let i=s.useContext(n);return s.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:r(e.components),s.createElement(n.Provider,{value:i},e.children)}},139421:function(e){e.exports=JSON.parse('{"id":"T_Avalonia_Utilities_TypeUtilities","title":"TypeUtilities Class","description":"Provides utilities for working with types at runtime.","source":"@site/docs/T_Avalonia_Utilities_TypeUtilities.md","sourceDirName":".","slug":"/T_Avalonia_Utilities_TypeUtilities","permalink":"/Ava-ApiTests/docs/T_Avalonia_Utilities_TypeUtilities","draft":false,"unlisted":false,"editUrl":"https://github.com/timunie/Ava-ApiTests/docs/T_Avalonia_Utilities_TypeUtilities.md","tags":[],"version":"current","frontMatter":{},"sidebar":"documentationSidebar","previous":{"title":"TargetWeakEventSubscriber<TTarget, TEventArgs> Class","permalink":"/Ava-ApiTests/docs/T_Avalonia_Utilities_TargetWeakEventSubscriber_2"},"next":{"title":"ValueSpan<T> Structure","permalink":"/Ava-ApiTests/docs/T_Avalonia_Utilities_ValueSpan_1"}}')}}]);