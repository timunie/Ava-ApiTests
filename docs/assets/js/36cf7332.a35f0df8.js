"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["502011"],{998635:function(e,o,n){n.r(o),n.d(o,{assets:()=>l,contentTitle:()=>a,default:()=>m,frontMatter:()=>s,metadata:()=>t,toc:()=>p});var t=n(183034),r=n(696773),i=n(116070);let s={},a="ImportImage Method",l={},p=[{value:"Overload List",id:"overload-list",level:2},{value:"See Also",id:"see-also",level:2},{value:"Reference",id:"reference",level:4}];function d(e){let o={br:"br",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(o.header,{children:(0,r.jsx)(o.h1,{id:"importimage-method",children:"ImportImage Method"})}),"\n",(0,r.jsx)(o.h2,{id:"overload-list",children:"Overload List"}),"\n",(0,r.jsxs)("table",{children:[(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:(0,r.jsx)("a",{href:"M_Avalonia_Rendering_Composition_ICompositionGpuInterop_ImportImage_1",children:"ImportImage(ICompositionImportableSharedGpuContextImage)"})}),(0,r.jsx)("td",{children:"Asynchronously imports a texture. The returned object is immediately usable. If import operation fails, the caller is responsible for destroying the handle"})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:(0,r.jsx)("a",{href:"M_Avalonia_Rendering_Composition_ICompositionGpuInterop_ImportImage",children:"ImportImage(IPlatformHandle, PlatformGraphicsExternalImageProperties)"})}),(0,r.jsx)("td",{children:"Asynchronously imports a texture. The returned object is immediately usable."})]})]}),"\n",(0,r.jsx)(o.h2,{id:"see-also",children:"See Also"}),"\n",(0,r.jsx)(o.h4,{id:"reference",children:"Reference"}),"\n",(0,r.jsxs)(o.p,{children:[(0,r.jsx)("a",{href:"T_Avalonia_Rendering_Composition_ICompositionGpuInterop",children:"ICompositionGpuInterop Interface"}),(0,r.jsx)(o.br,{}),"\n",(0,r.jsx)("a",{href:"N_Avalonia_Rendering_Composition",children:"Avalonia.Rendering.Composition Namespace"})]})]})}function m(e={}){let{wrapper:o}={...(0,i.a)(),...e.components};return o?(0,r.jsx)(o,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},116070:function(e,o,n){n.d(o,{Z:()=>a,a:()=>s});var t=n(841699);let r={},i=t.createContext(r);function s(e){let o=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(o):{...o,...e}},[o,e])}function a(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(i.Provider,{value:o},e.children)}},183034:function(e){e.exports=JSON.parse('{"id":"Overload_Avalonia_Rendering_Composition_ICompositionGpuInterop_ImportImage","title":"ImportImage Method","description":"Overload List","source":"@site/docs/Overload_Avalonia_Rendering_Composition_ICompositionGpuInterop_ImportImage.md","sourceDirName":".","slug":"/Overload_Avalonia_Rendering_Composition_ICompositionGpuInterop_ImportImage","permalink":"/Ava-ApiTests/docs/Overload_Avalonia_Rendering_Composition_ICompositionGpuInterop_ImportImage","draft":false,"unlisted":false,"editUrl":"https://github.com/timunie/Ava-ApiTests/docs/Overload_Avalonia_Rendering_Composition_ICompositionGpuInterop_ImportImage.md","tags":[],"version":"current","frontMatter":{}}')}}]);