"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["598955"],{906674:function(e,r,n){n.r(r),n.d(r,{assets:()=>i,contentTitle:()=>s,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>d});var t=n(336199),o=n(696773),l=n(116070);let a={},s="ToHsl(Byte, Byte, Byte, Byte) Method",i={},d=[{value:"Definition",id:"definition",level:2},{value:"Parameters",id:"parameters",level:4},{value:"Return Value",id:"return-value",level:4},{value:"See Also",id:"see-also",level:2},{value:"Reference",id:"reference",level:4}];function c(e){let r={br:"br",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,l.a)(),...e.components},{TabItem:n,Tabs:t}=r;return n||p("TabItem",!0),t||p("Tabs",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.header,{children:(0,o.jsx)(r.h1,{id:"tohslbyte-byte-byte-byte-method",children:"ToHsl(Byte, Byte, Byte, Byte) Method"})}),"\n",(0,o.jsx)(r.p,{children:"Converts the given RGBA color component values to their HSL color equivalent."}),"\n",(0,o.jsx)(r.h2,{id:"definition",children:"Definition"}),"\n",(0,o.jsxs)(r.p,{children:[(0,o.jsx)(r.strong,{children:"Namespace:"})," ",(0,o.jsx)("a",{href:"N_Avalonia_Media",children:"Avalonia.Media"}),(0,o.jsx)(r.br,{}),"\n",(0,o.jsx)(r.strong,{children:"Assembly:"})," Avalonia.Base (in Avalonia.Base.dll)"]}),"\n",(0,o.jsxs)(t,{groupId:"api-code-preview",children:[(0,o.jsx)(n,{value:"csharp",label:"C#",children:(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-csharp",children:"public static HslColor ToHsl(\r\n	byte red,\r\n	byte green,\r\n	byte blue,\r\n	byte alpha = 255\r\n)\n"})})}),(0,o.jsx)(n,{value:"vb",label:"VB",children:(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-vb",children:"Public Shared Function ToHsl ( \r\n	red As Byte,\r\n	green As Byte,\r\n	blue As Byte,\r\n	Optional alpha As Byte = 255\r\n) As HslColor\n"})})}),(0,o.jsx)(n,{value:"fsharp",label:"F#",children:(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-fsharp",children:"static member ToHsl : \r\n        red : byte * \r\n        green : byte * \r\n        blue : byte * \r\n        ?alpha : byte \r\n(* Defaults:\r\n        let _alpha = defaultArg alpha 255\r\n*)\r\n-> HslColor \n"})})})]}),"\n",(0,o.jsx)("a",{href:"https://github.com/AvaloniaUI/Avalonia/tree/master/src/Avalonia.Base/Media/Color.cs#L540",title:"View the source code",children:"View Source"}),"\n",(0,o.jsx)(r.h4,{id:"parameters",children:"Parameters"}),"\n",(0,o.jsxs)("dl",{children:[(0,o.jsxs)("dt",{children:["\xa0\xa0",(0,o.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.byte",target:"_blank",rel:"noopener noreferrer",children:"Byte"})]}),(0,o.jsx)("dd",{children:"The Red component in the RGB color model."}),(0,o.jsxs)("dt",{children:["\xa0\xa0",(0,o.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.byte",target:"_blank",rel:"noopener noreferrer",children:"Byte"})]}),(0,o.jsx)("dd",{children:"The Green component in the RGB color model."}),(0,o.jsxs)("dt",{children:["\xa0\xa0",(0,o.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.byte",target:"_blank",rel:"noopener noreferrer",children:"Byte"})]}),(0,o.jsx)("dd",{children:"The Blue component in the RGB color model."}),(0,o.jsxs)("dt",{children:["\xa0\xa0",(0,o.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.byte",target:"_blank",rel:"noopener noreferrer",children:"Byte"}),"\xa0\xa0(Optional)"]}),(0,o.jsx)("dd",{children:"The Alpha component."})]}),"\n",(0,o.jsx)(r.h4,{id:"return-value",children:"Return Value"}),"\n",(0,o.jsxs)(r.p,{children:[(0,o.jsx)("a",{href:"T_Avalonia_Media_HslColor",children:"HslColor"}),(0,o.jsx)(r.br,{}),"\n","A new ",(0,o.jsx)("a",{href:"T_Avalonia_Media_HslColor",children:"HslColor"})," equivalent to the given RGBA values."]}),"\n",(0,o.jsx)(r.h2,{id:"see-also",children:"See Also"}),"\n",(0,o.jsx)(r.h4,{id:"reference",children:"Reference"}),"\n",(0,o.jsxs)(r.p,{children:[(0,o.jsx)("a",{href:"T_Avalonia_Media_Color",children:"Color Structure"}),(0,o.jsx)(r.br,{}),"\n",(0,o.jsx)("a",{href:"Overload_Avalonia_Media_Color_ToHsl",children:"ToHsl Overload"}),(0,o.jsx)(r.br,{}),"\n",(0,o.jsx)("a",{href:"N_Avalonia_Media",children:"Avalonia.Media Namespace"})]})]})}function h(e={}){let{wrapper:r}={...(0,l.a)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}function p(e,r){throw Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},116070:function(e,r,n){n.d(r,{Z:()=>s,a:()=>a});var t=n(841699);let o={},l=t.createContext(o);function a(e){let r=t.useContext(l);return t.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function s(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),t.createElement(l.Provider,{value:r},e.children)}},336199:function(e){e.exports=JSON.parse('{"id":"M_Avalonia_Media_Color_ToHsl_1","title":"ToHsl(Byte, Byte, Byte, Byte) Method","description":"Converts the given RGBA color component values to their HSL color equivalent.","source":"@site/docs/M_Avalonia_Media_Color_ToHsl_1.md","sourceDirName":".","slug":"/M_Avalonia_Media_Color_ToHsl_1","permalink":"/Ava-ApiTests/docs/M_Avalonia_Media_Color_ToHsl_1","draft":false,"unlisted":false,"editUrl":"https://github.com/timunie/Ava-ApiTests/docs/M_Avalonia_Media_Color_ToHsl_1.md","tags":[],"version":"current","frontMatter":{}}')}}]);