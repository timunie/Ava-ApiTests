"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["815119"],{617828:function(e,i,n){n.r(i),n.d(i,{assets:()=>s,contentTitle:()=>d,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var a=n(629986),t=n(696773),r=n(116070);let o={},d="DecodeToWidth Method",s={},l=[{value:"Definition",id:"definition",level:2},{value:"Parameters",id:"parameters",level:4},{value:"Return Value",id:"return-value",level:4},{value:"See Also",id:"see-also",level:2},{value:"Reference",id:"reference",level:4}];function c(e){let i={br:"br",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,r.a)(),...e.components},{TabItem:n,Tabs:a}=i;return n||p("TabItem",!0),a||p("Tabs",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.header,{children:(0,t.jsx)(i.h1,{id:"decodetowidth-method",children:"DecodeToWidth Method"})}),"\n",(0,t.jsx)(i.p,{children:"Loads a Bitmap from a stream and decodes at the desired width. Aspect ratio is maintained. This is more efficient than loading and then resizing."}),"\n",(0,t.jsx)(i.h2,{id:"definition",children:"Definition"}),"\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.strong,{children:"Namespace:"})," ",(0,t.jsx)("a",{href:"N_Avalonia_Media_Imaging",children:"Avalonia.Media.Imaging"}),(0,t.jsx)(i.br,{}),"\n",(0,t.jsx)(i.strong,{children:"Assembly:"})," Avalonia.Base (in Avalonia.Base.dll)"]}),"\n",(0,t.jsxs)(a,{groupId:"api-code-preview",children:[(0,t.jsx)(n,{value:"csharp",label:"C#",children:(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-csharp",children:"public static Bitmap DecodeToWidth(\r\n	Stream stream,\r\n	int width,\r\n	BitmapInterpolationMode interpolationMode = BitmapInterpolationMode.HighQuality\r\n)\n"})})}),(0,t.jsx)(n,{value:"vb",label:"VB",children:(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-vb",children:"Public Shared Function DecodeToWidth ( \r\n	stream As Stream,\r\n	width As Integer,\r\n	Optional interpolationMode As BitmapInterpolationMode = BitmapInterpolationMode.HighQuality\r\n) As Bitmap\n"})})}),(0,t.jsx)(n,{value:"fsharp",label:"F#",children:(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-fsharp",children:"static member DecodeToWidth : \r\n        stream : Stream * \r\n        width : int * \r\n        ?interpolationMode : BitmapInterpolationMode \r\n(* Defaults:\r\n        let _interpolationMode = defaultArg interpolationMode BitmapInterpolationMode.HighQuality\r\n*)\r\n-> Bitmap \n"})})})]}),"\n",(0,t.jsx)("a",{href:"https://github.com/AvaloniaUI/Avalonia/tree/master/src/Avalonia.Base/Media/Imaging/Bitmap.cs#L26",title:"View the source code",children:"View Source"}),"\n",(0,t.jsx)(i.h4,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsxs)("dl",{children:[(0,t.jsxs)("dt",{children:["\xa0\xa0",(0,t.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.io.stream",target:"_blank",rel:"noopener noreferrer",children:"Stream"})]}),(0,t.jsx)("dd",{children:"The stream to read the bitmap from. This can be any supported image format."}),(0,t.jsxs)("dt",{children:["\xa0\xa0",(0,t.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.int32",target:"_blank",rel:"noopener noreferrer",children:"Int32"})]}),(0,t.jsx)("dd",{children:"The desired width of the resulting bitmap."}),(0,t.jsxs)("dt",{children:["\xa0\xa0",(0,t.jsx)("a",{href:"T_Avalonia_Media_Imaging_BitmapInterpolationMode",children:"BitmapInterpolationMode"}),"\xa0\xa0(Optional)"]}),(0,t.jsxs)("dd",{children:["The ",(0,t.jsx)("a",{href:"T_Avalonia_Media_Imaging_BitmapInterpolationMode",children:"BitmapInterpolationMode"})," to use should any scaling be required."]})]}),"\n",(0,t.jsx)(i.h4,{id:"return-value",children:"Return Value"}),"\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)("a",{href:"T_Avalonia_Media_Imaging_Bitmap",children:"Bitmap"}),(0,t.jsx)(i.br,{}),"\n","An instance of the ",(0,t.jsx)("a",{href:"T_Avalonia_Media_Imaging_Bitmap",children:"Bitmap"})," class."]}),"\n",(0,t.jsx)(i.h2,{id:"see-also",children:"See Also"}),"\n",(0,t.jsx)(i.h4,{id:"reference",children:"Reference"}),"\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)("a",{href:"T_Avalonia_Media_Imaging_Bitmap",children:"Bitmap Class"}),(0,t.jsx)(i.br,{}),"\n",(0,t.jsx)("a",{href:"N_Avalonia_Media_Imaging",children:"Avalonia.Media.Imaging Namespace"})]})]})}function h(e={}){let{wrapper:i}={...(0,r.a)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}function p(e,i){throw Error("Expected "+(i?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},116070:function(e,i,n){n.d(i,{Z:()=>d,a:()=>o});var a=n(841699);let t={},r=a.createContext(t);function o(e){let i=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function d(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),a.createElement(r.Provider,{value:i},e.children)}},629986:function(e){e.exports=JSON.parse('{"id":"M_Avalonia_Media_Imaging_Bitmap_DecodeToWidth","title":"DecodeToWidth Method","description":"Loads a Bitmap from a stream and decodes at the desired width. Aspect ratio is maintained. This is more efficient than loading and then resizing.","source":"@site/docs/M_Avalonia_Media_Imaging_Bitmap_DecodeToWidth.md","sourceDirName":".","slug":"/M_Avalonia_Media_Imaging_Bitmap_DecodeToWidth","permalink":"/Ava-ApiTests/docs/M_Avalonia_Media_Imaging_Bitmap_DecodeToWidth","draft":false,"unlisted":false,"editUrl":"https://github.com/timunie/Ava-ApiTests/docs/M_Avalonia_Media_Imaging_Bitmap_DecodeToWidth.md","tags":[],"version":"current","frontMatter":{}}')}}]);