"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["221185"],{181842:function(e,t,r){r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>c,frontMatter:()=>s,metadata:()=>o,toc:()=>d});var o=r(174974),n=r(696773),i=r(116070);let s={},a="IGeometryContext2 Methods",l={},d=[{value:"Methods",id:"methods",level:2},{value:"See Also",id:"see-also",level:2},{value:"Reference",id:"reference",level:4}];function h(e){let t={br:"br",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",...(0,i.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"igeometrycontext2-methods",children:"IGeometryContext2 Methods"})}),"\n",(0,n.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,n.jsxs)("table",{children:[(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_Platform_IGeometryContext_ArcTo",children:"ArcTo(Point, Size, Double, Boolean, SweepDirection)"})}),(0,n.jsxs)("td",{children:["Draws an arc to the specified point.",(0,n.jsx)("br",{}),"(Inherited from ",(0,n.jsx)("a",{href:"T_Avalonia_Platform_IGeometryContext",children:"IGeometryContext"}),")"]})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_Platform_IGeometryContext2_ArcTo",children:"ArcTo(Point, Size, Double, Boolean, SweepDirection, Boolean)"})}),(0,n.jsx)("td",{children:"Draws an arc to the specified point."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_Platform_IGeometryContext_BeginFigure",children:"BeginFigure(Point, Boolean)"})}),(0,n.jsxs)("td",{children:["Begins a new figure.",(0,n.jsx)("br",{}),"(Inherited from ",(0,n.jsx)("a",{href:"T_Avalonia_Platform_IGeometryContext",children:"IGeometryContext"}),")"]})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_Platform_IGeometryContext_CubicBezierTo",children:"CubicBezierTo(Point, Point, Point)"})}),(0,n.jsxs)("td",{children:["Draws a Bezier curve to the specified point.",(0,n.jsx)("br",{}),"(Inherited from ",(0,n.jsx)("a",{href:"T_Avalonia_Platform_IGeometryContext",children:"IGeometryContext"}),")"]})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_Platform_IGeometryContext2_CubicBezierTo",children:"CubicBezierTo(Point, Point, Point, Boolean)"})}),(0,n.jsx)("td",{children:"Draws a Bezier curve to the specified point."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.idisposable.dispose",target:"_blank",rel:"noopener noreferrer",children:"Dispose()"})}),(0,n.jsxs)("td",{children:["Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.",(0,n.jsx)("br",{}),"(Inherited from ",(0,n.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.idisposable",target:"_blank",rel:"noopener noreferrer",children:"IDisposable"}),")"]})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_Platform_IGeometryContext_EndFigure",children:"EndFigure(Boolean)"})}),(0,n.jsxs)("td",{children:["Ends the figure started by ",(0,n.jsx)("a",{href:"M_Avalonia_Platform_IGeometryContext_BeginFigure",children:"BeginFigure(Point, Boolean)"}),".",(0,n.jsx)("br",{}),"(Inherited from ",(0,n.jsx)("a",{href:"T_Avalonia_Platform_IGeometryContext",children:"IGeometryContext"}),")"]})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_Platform_IGeometryContext_LineTo",children:"LineTo(Point)"})}),(0,n.jsxs)("td",{children:["Draws a line to the specified point.",(0,n.jsx)("br",{}),"(Inherited from ",(0,n.jsx)("a",{href:"T_Avalonia_Platform_IGeometryContext",children:"IGeometryContext"}),")"]})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_Platform_IGeometryContext2_LineTo",children:"LineTo(Point, Boolean)"})}),(0,n.jsx)("td",{children:"Draws a line to the specified point."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_Platform_IGeometryContext_QuadraticBezierTo",children:"QuadraticBezierTo(Point, Point)"})}),(0,n.jsxs)("td",{children:["Draws a quadratic Bezier curve to the specified point",(0,n.jsx)("br",{}),"(Inherited from ",(0,n.jsx)("a",{href:"T_Avalonia_Platform_IGeometryContext",children:"IGeometryContext"}),")"]})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_Platform_IGeometryContext2_QuadraticBezierTo",children:"QuadraticBezierTo(Point, Point, Boolean)"})}),(0,n.jsx)("td",{children:"Draws a quadratic Bezier curve to the specified point"})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_Platform_IGeometryContext_SetFillRule",children:"SetFillRule(FillRule)"})}),(0,n.jsxs)("td",{children:["Sets path's winding rule (default is EvenOdd). You should call this method before any calls to BeginFigure.",(0,n.jsx)("br",{}),"(Inherited from ",(0,n.jsx)("a",{href:"T_Avalonia_Platform_IGeometryContext",children:"IGeometryContext"}),")"]})]})]}),"\n",(0,n.jsx)(t.h2,{id:"see-also",children:"See Also"}),"\n",(0,n.jsx)(t.h4,{id:"reference",children:"Reference"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)("a",{href:"T_Avalonia_Platform_IGeometryContext2",children:"IGeometryContext2 Interface"}),(0,n.jsx)(t.br,{}),"\n",(0,n.jsx)("a",{href:"N_Avalonia_Platform",children:"Avalonia.Platform Namespace"})]})]})}function c(e={}){let{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},116070:function(e,t,r){r.d(t,{Z:()=>a,a:()=>s});var o=r(841699);let n={},i=o.createContext(n);function s(e){let t=o.useContext(i);return o.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),o.createElement(i.Provider,{value:t},e.children)}},174974:function(e){e.exports=JSON.parse('{"id":"Methods_T_Avalonia_Platform_IGeometryContext2","title":"IGeometryContext2 Methods","description":"Methods","source":"@site/docs/Methods_T_Avalonia_Platform_IGeometryContext2.md","sourceDirName":".","slug":"/Methods_T_Avalonia_Platform_IGeometryContext2","permalink":"/Ava-ApiTests/docs/Methods_T_Avalonia_Platform_IGeometryContext2","draft":false,"unlisted":false,"editUrl":"https://github.com/timunie/Ava-ApiTests/docs/Methods_T_Avalonia_Platform_IGeometryContext2.md","tags":[],"version":"current","frontMatter":{}}')}}]);