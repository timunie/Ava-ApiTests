"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["696270"],{510865:function(e,t,r){r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var a=r(130013),n=r(696773),l=r(116070);let i={},s="Equality Operator",o={},c=[{value:"Definition",id:"definition",level:2},{value:"Parameters",id:"parameters",level:4},{value:"Return Value",id:"return-value",level:4},{value:"See Also",id:"see-also",level:2},{value:"Reference",id:"reference",level:4}];function d(e){let t={br:"br",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,l.a)(),...e.components},{TabItem:r,Tabs:a}=t;return r||u("TabItem",!0),a||u("Tabs",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"equality-operator",children:"Equality Operator"})}),"\n",(0,n.jsxs)(t.p,{children:["Checks for equality between two ",(0,n.jsx)("a",{href:"T_Avalonia_RelativeRect",children:"RelativeRect"}),"s."]}),"\n",(0,n.jsx)(t.h2,{id:"definition",children:"Definition"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Namespace:"})," ",(0,n.jsx)("a",{href:"N_Avalonia",children:"Avalonia"}),(0,n.jsx)(t.br,{}),"\n",(0,n.jsx)(t.strong,{children:"Assembly:"})," Avalonia.Base (in Avalonia.Base.dll)"]}),"\n",(0,n.jsxs)(a,{groupId:"api-code-preview",children:[(0,n.jsx)(r,{value:"csharp",label:"C#",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-csharp",children:"public static bool operator ==(\r\n	RelativeRect left,\r\n	RelativeRect right\r\n)\n"})})}),(0,n.jsx)(r,{value:"vb",label:"VB",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-vb",children:"Public Shared Operator = ( \r\n	left As RelativeRect,\r\n	right As RelativeRect\r\n) As Boolean\n"})})}),(0,n.jsx)(r,{value:"fsharp",label:"F#",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-fsharp",children:"static let inline (=)\r\n        left : RelativeRect * \r\n        right : RelativeRect  : bool\n"})})})]}),"\n",(0,n.jsx)("a",{href:"https://github.com/AvaloniaUI/Avalonia/tree/master/src/Avalonia.Base/RelativeRect.cs#L97",title:"View the source code",children:"View Source"}),"\n",(0,n.jsx)(t.h4,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsxs)("dl",{children:[(0,n.jsxs)("dt",{children:["\xa0\xa0",(0,n.jsx)("a",{href:"T_Avalonia_RelativeRect",children:"RelativeRect"})]}),(0,n.jsx)("dd",{children:"The first rectangle."}),(0,n.jsxs)("dt",{children:["\xa0\xa0",(0,n.jsx)("a",{href:"T_Avalonia_RelativeRect",children:"RelativeRect"})]}),(0,n.jsx)("dd",{children:"The second rectangle."})]}),"\n",(0,n.jsx)(t.h4,{id:"return-value",children:"Return Value"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.boolean",target:"_blank",rel:"noopener noreferrer",children:"Boolean"}),(0,n.jsx)(t.br,{}),"\n","True if the rectangles are equal; otherwise false."]}),"\n",(0,n.jsx)(t.h2,{id:"see-also",children:"See Also"}),"\n",(0,n.jsx)(t.h4,{id:"reference",children:"Reference"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)("a",{href:"T_Avalonia_RelativeRect",children:"RelativeRect Structure"}),(0,n.jsx)(t.br,{}),"\n",(0,n.jsx)("a",{href:"N_Avalonia",children:"Avalonia Namespace"})]})]})}function h(e={}){let{wrapper:t}={...(0,l.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}function u(e,t){throw Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},116070:function(e,t,r){r.d(t,{Z:()=>s,a:()=>i});var a=r(841699);let n={},l=a.createContext(n);function i(e){let t=a.useContext(l);return a.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),a.createElement(l.Provider,{value:t},e.children)}},130013:function(e){e.exports=JSON.parse('{"id":"M_Avalonia_RelativeRect_op_Equality","title":"Equality Operator","description":"Checks for equality between two RelativeRects.","source":"@site/docs/M_Avalonia_RelativeRect_op_Equality.md","sourceDirName":".","slug":"/M_Avalonia_RelativeRect_op_Equality","permalink":"/Ava-ApiTests/docs/M_Avalonia_RelativeRect_op_Equality","draft":false,"unlisted":false,"editUrl":"https://github.com/timunie/Ava-ApiTests/docs/M_Avalonia_RelativeRect_op_Equality.md","tags":[],"version":"current","frontMatter":{}}')}}]);