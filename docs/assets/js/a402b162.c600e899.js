"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["85342"],{753441:function(e,r,t){t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>a,default:()=>f,frontMatter:()=>i,metadata:()=>n,toc:()=>c});var n=t(27380),o=t(696773),s=t(116070);let i={},a="KeyGestureFormatInfo Constructor",l={},c=[{value:"Definition",id:"definition",level:2},{value:"Parameters",id:"parameters",level:4},{value:"See Also",id:"see-also",level:2},{value:"Reference",id:"reference",level:4}];function d(e){let r={br:"br",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,s.a)(),...e.components},{TabItem:t,Tabs:n}=r;return t||h("TabItem",!0),n||h("Tabs",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.header,{children:(0,o.jsx)(r.h1,{id:"keygestureformatinfo-constructor",children:"KeyGestureFormatInfo Constructor"})}),"\n",(0,o.jsx)(r.p,{children:"Provides platform specific formatting information for the KeyGesture class"}),"\n",(0,o.jsx)(r.h2,{id:"definition",children:"Definition"}),"\n",(0,o.jsxs)(r.p,{children:[(0,o.jsx)(r.strong,{children:"Namespace:"})," ",(0,o.jsx)("a",{href:"N_Avalonia_Input_Platform",children:"Avalonia.Input.Platform"}),(0,o.jsx)(r.br,{}),"\n",(0,o.jsx)(r.strong,{children:"Assembly:"})," Avalonia.Base (in Avalonia.Base.dll)"]}),"\n",(0,o.jsxs)(n,{groupId:"api-code-preview",children:[(0,o.jsx)(t,{value:"csharp",label:"C#",children:(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-csharp",children:'public KeyGestureFormatInfo(\r\n	IReadOnlyDictionary<Key, string>? platformKeyOverrides = null,\r\n	string meta = "Cmd",\r\n	string ctrl = "Ctrl",\r\n	string alt = "Alt",\r\n	string shift = "Shift"\r\n)\n'})})}),(0,o.jsx)(t,{value:"vb",label:"VB",children:(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-vb",children:'Public Sub New ( \r\n	Optional platformKeyOverrides As IReadOnlyDictionary(Of Key, String) = Nothing,\r\n	Optional meta As String = "Cmd",\r\n	Optional ctrl As String = "Ctrl",\r\n	Optional alt As String = "Alt",\r\n	Optional shift As String = "Shift"\r\n)\n'})})}),(0,o.jsx)(t,{value:"fsharp",label:"F#",children:(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-fsharp",children:'new : \r\n        ?platformKeyOverrides : IReadOnlyDictionary<Key, string> * \r\n        ?meta : string * \r\n        ?ctrl : string * \r\n        ?alt : string * \r\n        ?shift : string \r\n(* Defaults:\r\n        let _platformKeyOverrides = defaultArg platformKeyOverrides null\r\n        let _meta = defaultArg meta "Cmd"\r\n        let _ctrl = defaultArg ctrl "Ctrl"\r\n        let _alt = defaultArg alt "Alt"\r\n        let _shift = defaultArg shift "Shift"\r\n*)\r\n-> KeyGestureFormatInfo\n'})})})]}),"\n",(0,o.jsx)("a",{href:"https://github.com/AvaloniaUI/Avalonia/tree/master/src/Avalonia.Base/Input/Platform/KeyGestureFormatInfo.cs#L34",title:"View the source code",children:"View Source"}),"\n",(0,o.jsx)(r.h4,{id:"parameters",children:"Parameters"}),"\n",(0,o.jsxs)("dl",{children:[(0,o.jsxs)("dt",{children:["\xa0\xa0",(0,o.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2",target:"_blank",rel:"noopener noreferrer",children:"IReadOnlyDictionary"}),"(",(0,o.jsx)("a",{href:"T_Avalonia_Input_Key",children:"Key"}),", ",(0,o.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.string",target:"_blank",rel:"noopener noreferrer",children:"String"}),")\xa0\xa0(Optional)"]}),(0,o.jsx)("dd",{children:'A dictionary of Key to String overrides for specific characters, for example Key.Left to "Left Arrow" or "←" on Mac. A null value is assumed to be the Invariant, so the included set of common overrides will be skipped if this is null. If only the common overrides are desired, pass an empty Dictionary instead.'}),(0,o.jsxs)("dt",{children:["\xa0\xa0",(0,o.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.string",target:"_blank",rel:"noopener noreferrer",children:"String"}),"\xa0\xa0(Optional)"]}),(0,o.jsx)("dd",{children:'The string to use for the Meta modifier, defaults to "Cmd"'}),(0,o.jsxs)("dt",{children:["\xa0\xa0",(0,o.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.string",target:"_blank",rel:"noopener noreferrer",children:"String"}),"\xa0\xa0(Optional)"]}),(0,o.jsx)("dd",{children:'The string to use for the Ctrl modifier, defaults to "Ctrl"'}),(0,o.jsxs)("dt",{children:["\xa0\xa0",(0,o.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.string",target:"_blank",rel:"noopener noreferrer",children:"String"}),"\xa0\xa0(Optional)"]}),(0,o.jsx)("dd",{children:'The string to use for the Alt modifier, defaults to "Alt"'}),(0,o.jsxs)("dt",{children:["\xa0\xa0",(0,o.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.string",target:"_blank",rel:"noopener noreferrer",children:"String"}),"\xa0\xa0(Optional)"]}),(0,o.jsx)("dd",{children:'The string to use for the Shift modifier, defaults to "Shift"'})]}),"\n",(0,o.jsx)(r.h2,{id:"see-also",children:"See Also"}),"\n",(0,o.jsx)(r.h4,{id:"reference",children:"Reference"}),"\n",(0,o.jsxs)(r.p,{children:[(0,o.jsx)("a",{href:"T_Avalonia_Input_Platform_KeyGestureFormatInfo",children:"KeyGestureFormatInfo Class"}),(0,o.jsx)(r.br,{}),"\n",(0,o.jsx)("a",{href:"N_Avalonia_Input_Platform",children:"Avalonia.Input.Platform Namespace"})]})]})}function f(e={}){let{wrapper:r}={...(0,s.a)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}function h(e,r){throw Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},116070:function(e,r,t){t.d(r,{Z:()=>a,a:()=>i});var n=t(841699);let o={},s=n.createContext(o);function i(e){let r=n.useContext(s);return n.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),n.createElement(s.Provider,{value:r},e.children)}},27380:function(e){e.exports=JSON.parse('{"id":"M_Avalonia_Input_Platform_KeyGestureFormatInfo__ctor","title":"KeyGestureFormatInfo Constructor","description":"Provides platform specific formatting information for the KeyGesture class","source":"@site/docs/M_Avalonia_Input_Platform_KeyGestureFormatInfo__ctor.md","sourceDirName":".","slug":"/M_Avalonia_Input_Platform_KeyGestureFormatInfo__ctor","permalink":"/Ava-ApiTests/docs/M_Avalonia_Input_Platform_KeyGestureFormatInfo__ctor","draft":false,"unlisted":false,"editUrl":"https://github.com/timunie/Ava-ApiTests/docs/M_Avalonia_Input_Platform_KeyGestureFormatInfo__ctor.md","tags":[],"version":"current","frontMatter":{}}')}}]);