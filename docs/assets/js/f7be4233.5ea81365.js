"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["79906"],{514440:function(e,t,r){r.r(t),r.d(t,{default:()=>p,frontMatter:()=>a,metadata:()=>o,assets:()=>l,toc:()=>c,contentTitle:()=>s});var o=JSON.parse('{"id":"F_Avalonia_Automation_AutomationProperties_SizeOfSetProperty","title":"SizeOfSetProperty Field","description":"Defines the AutomationProperties.SizeOfSet attached property.","source":"@site/docs/F_Avalonia_Automation_AutomationProperties_SizeOfSetProperty.md","sourceDirName":".","slug":"/F_Avalonia_Automation_AutomationProperties_SizeOfSetProperty","permalink":"/Ava-ApiTests/docs/F_Avalonia_Automation_AutomationProperties_SizeOfSetProperty","draft":false,"unlisted":false,"editUrl":"https://github.com/timunie/Ava-ApiTests/docs/F_Avalonia_Automation_AutomationProperties_SizeOfSetProperty.md","tags":[],"version":"current","frontMatter":{}}'),n=r("785893"),i=r("250065");let a={},s="SizeOfSetProperty Field",l={},c=[{value:"Definition",id:"definition",level:2},{value:"Field Value",id:"field-value",level:4},{value:"See Also",id:"see-also",level:2},{value:"Reference",id:"reference",level:4}];function d(e){let t={br:"br",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,i.a)(),...e.components},{TabItem:r,Tabs:o}=t;return r||h("TabItem",!0),o||h("Tabs",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"sizeofsetproperty-field",children:"SizeOfSetProperty Field"})}),"\n",(0,n.jsx)(t.p,{children:"Defines the AutomationProperties.SizeOfSet attached property."}),"\n",(0,n.jsx)(t.h2,{id:"definition",children:"Definition"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Namespace:"})," ",(0,n.jsx)("a",{href:"N_Avalonia_Automation",children:"Avalonia.Automation"}),(0,n.jsx)(t.br,{}),"\n",(0,n.jsx)(t.strong,{children:"Assembly:"})," Avalonia.Controls (in Avalonia.Controls.dll) Version: 11.2.0"]}),"\n",(0,n.jsxs)(o,{groupId:"api-code-preview",children:[(0,n.jsx)(r,{value:"csharp",label:"C#",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-csharp",children:"public static readonly AttachedProperty<int> SizeOfSetProperty\n"})})}),(0,n.jsx)(r,{value:"vb",label:"VB",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-vb",children:"Public Shared ReadOnly SizeOfSetProperty As AttachedProperty(Of Integer)\n"})})}),(0,n.jsx)(r,{value:"fsharp",label:"F#",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-fsharp",children:"static val SizeOfSetProperty: AttachedProperty<int>\n"})})})]}),"\n",(0,n.jsx)("a",{href:"https://github.com/AvaloniaUI/Avalonia/tree/master/src/Avalonia.Controls/Automation/AutomationProperties.cs",title:"View the source code",children:"View Source"}),"\n",(0,n.jsx)(t.h4,{id:"field-value",children:"Field Value"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)("a",{href:"T_Avalonia_AttachedProperty_1",children:"AttachedProperty"}),"(",(0,n.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.int32",target:"_blank",rel:"noopener noreferrer",children:"Int32"}),")The SizeOfSet property describes the count of automation elements in a group or set that are considered to be siblings. SizeOfSet works in coordination with the PositionInSet property to describe the count of items in the set."]}),"\n",(0,n.jsx)(t.h2,{id:"see-also",children:"See Also"}),"\n",(0,n.jsx)(t.h4,{id:"reference",children:"Reference"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)("a",{href:"T_Avalonia_Automation_AutomationProperties",children:"AutomationProperties Class"}),(0,n.jsx)(t.br,{}),"\n",(0,n.jsx)("a",{href:"N_Avalonia_Automation",children:"Avalonia.Automation Namespace"})]})]})}function p(e={}){let{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}function h(e,t){throw Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},250065:function(e,t,r){r.d(t,{Z:function(){return s},a:function(){return a}});var o=r(667294);let n={},i=o.createContext(n);function a(e){let t=o.useContext(i);return o.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),o.createElement(i.Provider,{value:t},e.children)}}}]);