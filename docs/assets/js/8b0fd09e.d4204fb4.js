"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["408103"],{290010:function(e,n,l){l.r(n),l.d(n,{assets:()=>i,contentTitle:()=>a,default:()=>h,frontMatter:()=>t,metadata:()=>r,toc:()=>c});var r=l(270464),o=l(696773),s=l(116070);let t={},a="MaskFull Property",i={},c=[{value:"Definition",id:"definition",level:2},{value:"Property Value",id:"property-value",level:4},{value:"See Also",id:"see-also",level:2},{value:"Reference",id:"reference",level:4}];function d(e){let n={br:"br",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,s.a)(),...e.components},{TabItem:l,Tabs:r}=n;return l||u("TabItem",!0),r||u("Tabs",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"maskfull-property",children:"MaskFull Property"})}),"\n",(0,o.jsx)(n.p,{children:"Specifies whether all inputs (required and optional) have been provided into the mask successfully."}),"\n",(0,o.jsx)(n.h2,{id:"definition",children:"Definition"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Namespace:"})," ",(0,o.jsx)("a",{href:"N_Avalonia_Controls",children:"Avalonia.Controls"}),(0,o.jsx)(n.br,{}),"\n",(0,o.jsx)(n.strong,{children:"Assembly:"})," Avalonia.Controls (in Avalonia.Controls.dll)"]}),"\n",(0,o.jsxs)(r,{groupId:"api-code-preview",children:[(0,o.jsx)(l,{value:"csharp",label:"C#",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-csharp",children:"public bool? MaskFull { get; }\n"})})}),(0,o.jsx)(l,{value:"vb",label:"VB",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-vb",children:"Public ReadOnly Property MaskFull As Boolean?\r\n	Get\n"})})}),(0,o.jsx)(l,{value:"fsharp",label:"F#",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-fsharp",children:"member MaskFull : Nullable<bool> with get\n"})})})]}),"\n",(0,o.jsx)("a",{href:"https://github.com/AvaloniaUI/Avalonia/tree/master/src/Avalonia.Controls/MaskedTextBox.cs#L149",title:"View the source code",children:"View Source"}),"\n",(0,o.jsx)(n.h4,{id:"property-value",children:"Property Value"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.nullable-1",target:"_blank",rel:"noopener noreferrer",children:"Nullable"}),"(",(0,o.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.boolean",target:"_blank",rel:"noopener noreferrer",children:"Boolean"}),")"]}),"\n",(0,o.jsx)(n.h2,{id:"see-also",children:"See Also"}),"\n",(0,o.jsx)(n.h4,{id:"reference",children:"Reference"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)("a",{href:"T_Avalonia_Controls_MaskedTextBox",children:"MaskedTextBox Class"}),(0,o.jsx)(n.br,{}),"\n",(0,o.jsx)("a",{href:"N_Avalonia_Controls",children:"Avalonia.Controls Namespace"})]})]})}function h(e={}){let{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}function u(e,n){throw Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},116070:function(e,n,l){l.d(n,{Z:()=>a,a:()=>t});var r=l(841699);let o={},s=r.createContext(o);function t(e){let n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),r.createElement(s.Provider,{value:n},e.children)}},270464:function(e){e.exports=JSON.parse('{"id":"P_Avalonia_Controls_MaskedTextBox_MaskFull","title":"MaskFull Property","description":"Specifies whether all inputs (required and optional) have been provided into the mask successfully.","source":"@site/docs/P_Avalonia_Controls_MaskedTextBox_MaskFull.md","sourceDirName":".","slug":"/P_Avalonia_Controls_MaskedTextBox_MaskFull","permalink":"/Ava-ApiTests/docs/P_Avalonia_Controls_MaskedTextBox_MaskFull","draft":false,"unlisted":false,"editUrl":"https://github.com/timunie/Ava-ApiTests/docs/P_Avalonia_Controls_MaskedTextBox_MaskFull.md","tags":[],"version":"current","frontMatter":{}}')}}]);