"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["512764"],{274730:function(e,n,t){t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>c});var i=t(764005),a=t(696773),o=t(116070);let r={},l="CanCancelEdit Property",s={},c=[{value:"Definition",id:"definition",level:2},{value:"Property Value",id:"property-value",level:4},{value:"See Also",id:"see-also",level:2},{value:"Reference",id:"reference",level:4}];function d(e){let n={br:"br",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,o.a)(),...e.components},{TabItem:t,Tabs:i}=n;return t||p("TabItem",!0),i||p("Tabs",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"cancanceledit-property",children:"CanCancelEdit Property"})}),"\n",(0,a.jsx)(n.p,{children:'Gets a value indicating whether the view supports the notion of "pending changes" on the current edit item. This may vary, depending on the view and the particular item. For example, a view might return true if the current edit item implements IEditableObject, or if the view has special knowledge about the item that it can use to support rollback of pending changes.'}),"\n",(0,a.jsx)(n.h2,{id:"definition",children:"Definition"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Namespace:"})," ",(0,a.jsx)("a",{href:"N_Avalonia_Collections",children:"Avalonia.Collections"}),(0,a.jsx)(n.br,{}),"\n",(0,a.jsx)(n.strong,{children:"Assembly:"})," Avalonia.Controls.DataGrid (in Avalonia.Controls.DataGrid.dll) Version: 11.2.0"]}),"\n",(0,a.jsxs)(i,{groupId:"api-code-preview",children:[(0,a.jsx)(t,{value:"csharp",label:"C#",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",children:"public bool CanCancelEdit { get; }\n"})})}),(0,a.jsx)(t,{value:"vb",label:"VB",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-vb",children:"Public ReadOnly Property CanCancelEdit As Boolean\r\n	Get\n"})})}),(0,a.jsx)(t,{value:"fsharp",label:"F#",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-fsharp",children:"abstract CanCancelEdit : bool with get\r\noverride CanCancelEdit : bool with get\n"})})})]}),"\n",(0,a.jsx)("a",{href:"https://github.com/AvaloniaUI/Avalonia/tree/master/src/Avalonia.Controls.DataGrid/Collections/DataGridCollectionView.cs#L395",title:"View the source code",children:"View Source"}),"\n",(0,a.jsx)(n.h4,{id:"property-value",children:"Property Value"}),"\n",(0,a.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.boolean",target:"_blank",rel:"noopener noreferrer",children:"Boolean"}),"\n",(0,a.jsx)(n.h2,{id:"see-also",children:"See Also"}),"\n",(0,a.jsx)(n.h4,{id:"reference",children:"Reference"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)("a",{href:"T_Avalonia_Collections_DataGridCollectionView",children:"DataGridCollectionView Class"}),(0,a.jsx)(n.br,{}),"\n",(0,a.jsx)("a",{href:"N_Avalonia_Collections",children:"Avalonia.Collections Namespace"})]})]})}function h(e={}){let{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}function p(e,n){throw Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},116070:function(e,n,t){t.d(n,{Z:()=>l,a:()=>r});var i=t(841699);let a={},o=i.createContext(a);function r(e){let n=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),i.createElement(o.Provider,{value:n},e.children)}},764005:function(e){e.exports=JSON.parse('{"id":"P_Avalonia_Collections_DataGridCollectionView_CanCancelEdit","title":"CanCancelEdit Property","description":"Gets a value indicating whether the view supports the notion of \\"pending changes\\" on the current edit item. This may vary, depending on the view and the particular item. For example, a view might return true if the current edit item implements IEditableObject, or if the view has special knowledge about the item that it can use to support rollback of pending changes.","source":"@site/docs/P_Avalonia_Collections_DataGridCollectionView_CanCancelEdit.md","sourceDirName":".","slug":"/P_Avalonia_Collections_DataGridCollectionView_CanCancelEdit","permalink":"/Ava-ApiTests/docs/P_Avalonia_Collections_DataGridCollectionView_CanCancelEdit","draft":false,"unlisted":false,"editUrl":"https://github.com/timunie/Ava-ApiTests/docs/P_Avalonia_Collections_DataGridCollectionView_CanCancelEdit.md","tags":[],"version":"current","frontMatter":{}}')}}]);