"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["92257"],{966362:function(e,i,t){t.r(i),t.d(i,{assets:()=>r,contentTitle:()=>a,default:()=>d,frontMatter:()=>l,metadata:()=>s,toc:()=>p});var s=t(227767),o=t(696773),n=t(116070);let l={},a="ClassicDesktopStyleApplicationLifetime Properties",r={},p=[{value:"Properties",id:"properties",level:2},{value:"See Also",id:"see-also",level:2},{value:"Reference",id:"reference",level:4}];function c(e){let i={br:"br",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",...(0,n.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(i.header,{children:(0,o.jsx)(i.h1,{id:"classicdesktopstyleapplicationlifetime-properties",children:"ClassicDesktopStyleApplicationLifetime Properties"})}),"\n",(0,o.jsx)(i.h2,{id:"properties",children:"Properties"}),"\n",(0,o.jsxs)("table",{children:[(0,o.jsxs)("tr",{children:[(0,o.jsx)("td",{children:(0,o.jsx)("a",{href:"P_Avalonia_Controls_ApplicationLifetimes_ClassicDesktopStyleApplicationLifetime_Args",children:"Args"})}),(0,o.jsx)("td",{children:"Gets the arguments passed to the AppBuilder Start method."})]}),(0,o.jsxs)("tr",{children:[(0,o.jsx)("td",{children:(0,o.jsx)("a",{href:"P_Avalonia_Controls_ApplicationLifetimes_ClassicDesktopStyleApplicationLifetime_MainWindow",children:"MainWindow"})}),(0,o.jsx)("td",{children:"Gets or sets the main window of the application."})]}),(0,o.jsxs)("tr",{children:[(0,o.jsx)("td",{children:(0,o.jsx)("a",{href:"P_Avalonia_Controls_ApplicationLifetimes_ClassicDesktopStyleApplicationLifetime_ShutdownMode",children:"ShutdownMode"})}),(0,o.jsxs)("td",{children:["Gets or sets the ",(0,o.jsx)("a",{href:"P_Avalonia_Controls_ApplicationLifetimes_IClassicDesktopStyleApplicationLifetime_ShutdownMode",children:"ShutdownMode"}),". This property indicates whether the application is shutdown explicitly or implicitly. If ",(0,o.jsx)("a",{href:"P_Avalonia_Controls_ApplicationLifetimes_IClassicDesktopStyleApplicationLifetime_ShutdownMode",children:"ShutdownMode"})," is set to OnExplicitShutdown the application is only closes if Shutdown is called. The default is OnLastWindowClose"]})]}),(0,o.jsxs)("tr",{children:[(0,o.jsx)("td",{children:(0,o.jsx)("a",{href:"P_Avalonia_Controls_ApplicationLifetimes_ClassicDesktopStyleApplicationLifetime_Windows",children:"Windows"})}),(0,o.jsx)("td",{children:"Gets the list of all open windows in the application."})]})]}),"\n",(0,o.jsx)(i.h2,{id:"see-also",children:"See Also"}),"\n",(0,o.jsx)(i.h4,{id:"reference",children:"Reference"}),"\n",(0,o.jsxs)(i.p,{children:[(0,o.jsx)("a",{href:"T_Avalonia_Controls_ApplicationLifetimes_ClassicDesktopStyleApplicationLifetime",children:"ClassicDesktopStyleApplicationLifetime Class"}),(0,o.jsx)(i.br,{}),"\n",(0,o.jsx)("a",{href:"N_Avalonia_Controls_ApplicationLifetimes",children:"Avalonia.Controls.ApplicationLifetimes Namespace"})]})]})}function d(e={}){let{wrapper:i}={...(0,n.a)(),...e.components};return i?(0,o.jsx)(i,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},116070:function(e,i,t){t.d(i,{Z:()=>a,a:()=>l});var s=t(841699);let o={},n=s.createContext(o);function l(e){let i=s.useContext(n);return s.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),s.createElement(n.Provider,{value:i},e.children)}},227767:function(e){e.exports=JSON.parse('{"id":"Properties_T_Avalonia_Controls_ApplicationLifetimes_ClassicDesktopStyleApplicationLifetime","title":"ClassicDesktopStyleApplicationLifetime Properties","description":"Properties","source":"@site/docs/Properties_T_Avalonia_Controls_ApplicationLifetimes_ClassicDesktopStyleApplicationLifetime.md","sourceDirName":".","slug":"/Properties_T_Avalonia_Controls_ApplicationLifetimes_ClassicDesktopStyleApplicationLifetime","permalink":"/Ava-ApiTests/docs/Properties_T_Avalonia_Controls_ApplicationLifetimes_ClassicDesktopStyleApplicationLifetime","draft":false,"unlisted":false,"editUrl":"https://github.com/timunie/Ava-ApiTests/docs/Properties_T_Avalonia_Controls_ApplicationLifetimes_ClassicDesktopStyleApplicationLifetime.md","tags":[],"version":"current","frontMatter":{}}')}}]);