"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["718730"],{166884:function(e,n,r){r.r(n),r.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>c});var t=r(94485),o=r(696773),l=r(116070);let a={},i="UpdateSelectionFromEventSource Method",s={},c=[{value:"Definition",id:"definition",level:2},{value:"Parameters",id:"parameters",level:4},{value:"Return Value",id:"return-value",level:4},{value:"See Also",id:"see-also",level:2},{value:"Reference",id:"reference",level:4}];function d(e){let n={br:"br",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,l.a)(),...e.components},{TabItem:r,Tabs:t}=n;return r||p("TabItem",!0),t||p("Tabs",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"updateselectionfromeventsource-method",children:"UpdateSelectionFromEventSource Method"})}),"\n",(0,o.jsx)(n.p,{children:"Updates the selection based on an event that may have originated in a container that belongs to the control."}),"\n",(0,o.jsx)(n.h2,{id:"definition",children:"Definition"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Namespace:"})," ",(0,o.jsx)("a",{href:"N_Avalonia_Controls",children:"Avalonia.Controls"}),(0,o.jsx)(n.br,{}),"\n",(0,o.jsx)(n.strong,{children:"Assembly:"})," Avalonia.Controls (in Avalonia.Controls.dll)"]}),"\n",(0,o.jsxs)(t,{groupId:"api-code-preview",children:[(0,o.jsx)(r,{value:"csharp",label:"C#",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-csharp",children:"protected bool UpdateSelectionFromEventSource(\r\n	Object eventSource,\r\n	bool select = true,\r\n	bool rangeModifier = false,\r\n	bool toggleModifier = false,\r\n	bool rightButton = false\r\n)\n"})})}),(0,o.jsx)(r,{value:"vb",label:"VB",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-vb",children:"Protected Function UpdateSelectionFromEventSource ( \r\n	eventSource As Object,\r\n	Optional select As Boolean = true,\r\n	Optional rangeModifier As Boolean = false,\r\n	Optional toggleModifier As Boolean = false,\r\n	Optional rightButton As Boolean = false\r\n) As Boolean\n"})})}),(0,o.jsx)(r,{value:"fsharp",label:"F#",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-fsharp",children:"member UpdateSelectionFromEventSource : \r\n        eventSource : Object * \r\n        ?select : bool * \r\n        ?rangeModifier : bool * \r\n        ?toggleModifier : bool * \r\n        ?rightButton : bool \r\n(* Defaults:\r\n        let _select = defaultArg select true\r\n        let _rangeModifier = defaultArg rangeModifier false\r\n        let _toggleModifier = defaultArg toggleModifier false\r\n        let _rightButton = defaultArg rightButton false\r\n*)\r\n-> bool \n"})})})]}),"\n",(0,o.jsx)("a",{href:"https://github.com/AvaloniaUI/Avalonia/tree/master/src/Avalonia.Controls/TreeView.cs#L899",title:"View the source code",children:"View Source"}),"\n",(0,o.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n",(0,o.jsxs)("dl",{children:[(0,o.jsxs)("dt",{children:["\xa0\xa0",(0,o.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.object",target:"_blank",rel:"noopener noreferrer",children:"Object"})]}),(0,o.jsx)("dd",{children:"The control that raised the event."}),(0,o.jsxs)("dt",{children:["\xa0\xa0",(0,o.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.boolean",target:"_blank",rel:"noopener noreferrer",children:"Boolean"}),"\xa0\xa0(Optional)"]}),(0,o.jsx)("dd",{children:"Whether the container should be selected or unselected."}),(0,o.jsxs)("dt",{children:["\xa0\xa0",(0,o.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.boolean",target:"_blank",rel:"noopener noreferrer",children:"Boolean"}),"\xa0\xa0(Optional)"]}),(0,o.jsx)("dd",{children:"Whether the range modifier is enabled (i.e. shift key)."}),(0,o.jsxs)("dt",{children:["\xa0\xa0",(0,o.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.boolean",target:"_blank",rel:"noopener noreferrer",children:"Boolean"}),"\xa0\xa0(Optional)"]}),(0,o.jsx)("dd",{children:"Whether the toggle modifier is enabled (i.e. ctrl key)."}),(0,o.jsxs)("dt",{children:["\xa0\xa0",(0,o.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.boolean",target:"_blank",rel:"noopener noreferrer",children:"Boolean"}),"\xa0\xa0(Optional)"]}),(0,o.jsx)("dd",{children:"Whether the event is a right-click."})]}),"\n",(0,o.jsx)(n.h4,{id:"return-value",children:"Return Value"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.boolean",target:"_blank",rel:"noopener noreferrer",children:"Boolean"}),(0,o.jsx)(n.br,{}),"\n","True if the event originated from a container that belongs to the control; otherwise false."]}),"\n",(0,o.jsx)(n.h2,{id:"see-also",children:"See Also"}),"\n",(0,o.jsx)(n.h4,{id:"reference",children:"Reference"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)("a",{href:"T_Avalonia_Controls_TreeView",children:"TreeView Class"}),(0,o.jsx)(n.br,{}),"\n",(0,o.jsx)("a",{href:"N_Avalonia_Controls",children:"Avalonia.Controls Namespace"})]})]})}function h(e={}){let{wrapper:n}={...(0,l.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}function p(e,n){throw Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},116070:function(e,n,r){r.d(n,{Z:()=>i,a:()=>a});var t=r(841699);let o={},l=t.createContext(o);function a(e){let n=t.useContext(l);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),t.createElement(l.Provider,{value:n},e.children)}},94485:function(e){e.exports=JSON.parse('{"id":"M_Avalonia_Controls_TreeView_UpdateSelectionFromEventSource","title":"UpdateSelectionFromEventSource Method","description":"Updates the selection based on an event that may have originated in a container that belongs to the control.","source":"@site/docs/M_Avalonia_Controls_TreeView_UpdateSelectionFromEventSource.md","sourceDirName":".","slug":"/M_Avalonia_Controls_TreeView_UpdateSelectionFromEventSource","permalink":"/Ava-ApiTests/docs/M_Avalonia_Controls_TreeView_UpdateSelectionFromEventSource","draft":false,"unlisted":false,"editUrl":"https://github.com/timunie/Ava-ApiTests/docs/M_Avalonia_Controls_TreeView_UpdateSelectionFromEventSource.md","tags":[],"version":"current","frontMatter":{}}')}}]);