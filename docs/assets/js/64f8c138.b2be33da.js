"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["16900"],{386888:function(e,n,r){r.r(n),r.d(n,{assets:()=>i,contentTitle:()=>t,default:()=>h,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var l=r(14513),o=r(696773),s=r(116070);let a={},t="OnScrollChanged Method",i={},c=[{value:"Definition",id:"definition",level:2},{value:"Parameters",id:"parameters",level:4},{value:"Remarks",id:"remarks",level:2},{value:"See Also",id:"see-also",level:2},{value:"Reference",id:"reference",level:4}];function d(e){let n={br:"br",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,s.a)(),...e.components},{TabItem:r,Tabs:l}=n;return r||v("TabItem",!0),l||v("Tabs",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"onscrollchanged-method",children:"OnScrollChanged Method"})}),"\n",(0,o.jsx)(n.p,{children:"Called when a change in scrolling state is detected, such as a change in scroll position, extent, or viewport size."}),"\n",(0,o.jsx)(n.h2,{id:"definition",children:"Definition"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Namespace:"})," ",(0,o.jsx)("a",{href:"N_Avalonia_Controls",children:"Avalonia.Controls"}),(0,o.jsx)(n.br,{}),"\n",(0,o.jsx)(n.strong,{children:"Assembly:"})," Avalonia.Controls (in Avalonia.Controls.dll)"]}),"\n",(0,o.jsxs)(l,{groupId:"api-code-preview",children:[(0,o.jsx)(r,{value:"csharp",label:"C#",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-csharp",children:"protected virtual void OnScrollChanged(\r\n	ScrollChangedEventArgs e\r\n)\n"})})}),(0,o.jsx)(r,{value:"vb",label:"VB",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-vb",children:"Protected Overridable Sub OnScrollChanged ( \r\n	e As ScrollChangedEventArgs\r\n)\n"})})}),(0,o.jsx)(r,{value:"fsharp",label:"F#",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-fsharp",children:"abstract OnScrollChanged : \r\n        e : ScrollChangedEventArgs -> unit \r\noverride OnScrollChanged : \r\n        e : ScrollChangedEventArgs -> unit \n"})})})]}),"\n",(0,o.jsx)("a",{href:"https://github.com/AvaloniaUI/Avalonia/tree/master/src/Avalonia.Controls/ScrollViewer.cs#L802",title:"View the source code",children:"View Source"}),"\n",(0,o.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n",(0,o.jsxs)("dl",{children:[(0,o.jsxs)("dt",{children:["\xa0\xa0",(0,o.jsx)("a",{href:"T_Avalonia_Controls_ScrollChangedEventArgs",children:"ScrollChangedEventArgs"})]}),(0,o.jsx)("dd",{children:"The event args."})]}),"\n",(0,o.jsx)(n.h2,{id:"remarks",children:"Remarks"}),"\n",(0,o.jsxs)(n.p,{children:["If you override this method, call ",(0,o.jsx)(n.code,{children:"base.OnScrollChanged(ScrollChangedEventArgs)"})," to ensure that this event is raised."]}),"\n",(0,o.jsx)(n.h2,{id:"see-also",children:"See Also"}),"\n",(0,o.jsx)(n.h4,{id:"reference",children:"Reference"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)("a",{href:"T_Avalonia_Controls_ScrollViewer",children:"ScrollViewer Class"}),(0,o.jsx)(n.br,{}),"\n",(0,o.jsx)("a",{href:"N_Avalonia_Controls",children:"Avalonia.Controls Namespace"})]})]})}function h(e={}){let{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}function v(e,n){throw Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},116070:function(e,n,r){r.d(n,{Z:()=>t,a:()=>a});var l=r(841699);let o={},s=l.createContext(o);function a(e){let n=l.useContext(s);return l.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),l.createElement(s.Provider,{value:n},e.children)}},14513:function(e){e.exports=JSON.parse('{"id":"M_Avalonia_Controls_ScrollViewer_OnScrollChanged","title":"OnScrollChanged Method","description":"Called when a change in scrolling state is detected, such as a change in scroll position, extent, or viewport size.","source":"@site/docs/M_Avalonia_Controls_ScrollViewer_OnScrollChanged.md","sourceDirName":".","slug":"/M_Avalonia_Controls_ScrollViewer_OnScrollChanged","permalink":"/Ava-ApiTests/docs/M_Avalonia_Controls_ScrollViewer_OnScrollChanged","draft":false,"unlisted":false,"editUrl":"https://github.com/timunie/Ava-ApiTests/docs/M_Avalonia_Controls_ScrollViewer_OnScrollChanged.md","tags":[],"version":"current","frontMatter":{}}')}}]);