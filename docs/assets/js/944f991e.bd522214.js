"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["203717"],{100084:function(e,t,i){i.r(t),i.d(t,{assets:()=>h,contentTitle:()=>c,default:()=>o,frontMatter:()=>l,metadata:()=>r,toc:()=>a});var r=i(692910),n=i(696773),s=i(116070);let l={},c="PixelRect Structure",h={},a=[{value:"Definition",id:"definition",level:2},{value:"Constructors",id:"constructors",level:2},{value:"Properties",id:"properties",level:2},{value:"Methods",id:"methods",level:2},{value:"Operators",id:"operators",level:2},{value:"Extension Methods",id:"extension-methods",level:2},{value:"See Also",id:"see-also",level:2},{value:"Reference",id:"reference",level:4}];function d(e){let t={br:"br",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,s.a)(),...e.components},{TabItem:i,Tabs:r}=t;return i||x("TabItem",!0),r||x("Tabs",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"pixelrect-structure",children:"PixelRect Structure"})}),"\n",(0,n.jsx)(t.p,{children:"Represents a rectangle in device pixels."}),"\n",(0,n.jsx)(t.h2,{id:"definition",children:"Definition"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Namespace:"})," ",(0,n.jsx)("a",{href:"N_Avalonia",children:"Avalonia"}),(0,n.jsx)(t.br,{}),"\n",(0,n.jsx)(t.strong,{children:"Assembly:"})," Avalonia.Base (in Avalonia.Base.dll) Version: 11.2.0"]}),"\n",(0,n.jsxs)(r,{groupId:"api-code-preview",children:[(0,n.jsx)(i,{value:"csharp",label:"C#",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-csharp",children:"public readonly struct PixelRect : IEquatable<PixelRect>\n"})})}),(0,n.jsx)(i,{value:"vb",label:"VB",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-vb",children:"Public Structure PixelRect\r\n	Implements IEquatable(Of PixelRect)\n"})})}),(0,n.jsx)(i,{value:"fsharp",label:"F#",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-fsharp",children:"[<SealedAttribute>]\r\ntype PixelRect = \r\n    struct\r\n        inherit ValueType\r\n        interface IEquatable<PixelRect>\r\n    end\n"})})})]}),"\n",(0,n.jsx)("a",{href:"https://github.com/AvaloniaUI/Avalonia/tree/master/src/Avalonia.Base/PixelRect.cs",title:"View the source code",children:"View Source"}),"\n",(0,n.jsxs)("table",{children:[(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("strong",{children:"Inheritance"})}),(0,n.jsxs)("td",{children:[(0,n.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.object",target:"_blank",rel:"noopener noreferrer",children:"Object"}),"  →  ",(0,n.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.valuetype",target:"_blank",rel:"noopener noreferrer",children:"ValueType"}),"  →  PixelRect"]})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("strong",{children:"Implements"})}),(0,n.jsxs)("td",{children:[(0,n.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.iequatable-1",target:"_blank",rel:"noopener noreferrer",children:"IEquatable"}),"(PixelRect)"]})]})]}),"\n",(0,n.jsx)(t.h2,{id:"constructors",children:"Constructors"}),"\n",(0,n.jsxs)("table",{children:[(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_PixelRect__ctor_2",children:"PixelRect(PixelSize)"})}),(0,n.jsx)("td",{children:"Initializes a new instance of the PixelRect structure."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_PixelRect__ctor",children:"PixelRect(PixelPoint, PixelPoint)"})}),(0,n.jsx)("td",{children:"Initializes a new instance of the PixelRect structure."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_PixelRect__ctor_1",children:"PixelRect(PixelPoint, PixelSize)"})}),(0,n.jsx)("td",{children:"Initializes a new instance of the PixelRect structure."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_PixelRect__ctor_3",children:"PixelRect(Int32, Int32, Int32, Int32)"})}),(0,n.jsx)("td",{children:"Initializes a new instance of the PixelRect structure."})]})]}),"\n",(0,n.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,n.jsxs)("table",{children:[(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"P_Avalonia_PixelRect_Bottom",children:"Bottom"})}),(0,n.jsx)("td",{children:"Gets the bottom position of the rectangle."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"P_Avalonia_PixelRect_BottomLeft",children:"BottomLeft"})}),(0,n.jsx)("td",{children:"Gets the bottom left point of the rectangle."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"P_Avalonia_PixelRect_BottomRight",children:"BottomRight"})}),(0,n.jsx)("td",{children:"Gets the bottom right point of the rectangle."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"P_Avalonia_PixelRect_Center",children:"Center"})}),(0,n.jsx)("td",{children:"Gets the center point of the rectangle."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"P_Avalonia_PixelRect_Height",children:"Height"})}),(0,n.jsx)("td",{children:"Gets the height."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"P_Avalonia_PixelRect_Position",children:"Position"})}),(0,n.jsx)("td",{children:"Gets the position of the rectangle."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"P_Avalonia_PixelRect_Right",children:"Right"})}),(0,n.jsx)("td",{children:"Gets the right position of the rectangle."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"P_Avalonia_PixelRect_Size",children:"Size"})}),(0,n.jsx)("td",{children:"Gets the size of the rectangle."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"P_Avalonia_PixelRect_TopLeft",children:"TopLeft"})}),(0,n.jsx)("td",{children:"Gets the top left point of the rectangle."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"P_Avalonia_PixelRect_TopRight",children:"TopRight"})}),(0,n.jsx)("td",{children:"Gets the top right point of the rectangle."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"P_Avalonia_PixelRect_Width",children:"Width"})}),(0,n.jsx)("td",{children:"Gets the width."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"P_Avalonia_PixelRect_X",children:"X"})}),(0,n.jsx)("td",{children:"Gets the X position."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"P_Avalonia_PixelRect_Y",children:"Y"})}),(0,n.jsx)("td",{children:"Gets the Y position."})]})]}),"\n",(0,n.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,n.jsxs)("table",{children:[(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_PixelRect_CenterRect",children:"CenterRect(PixelRect)"})}),(0,n.jsx)("td",{children:"Centers another rectangle in this rectangle."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_PixelRect_Contains",children:"Contains(PixelPoint)"})}),(0,n.jsx)("td",{children:"Determines whether a point in the bounds of the rectangle."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_PixelRect_Contains_1",children:"Contains(PixelRect)"})}),(0,n.jsx)("td",{children:"Determines whether the rectangle fully contains another rectangle."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_PixelRect_ContainsExclusive",children:"ContainsExclusive(PixelPoint)"})}),(0,n.jsx)("td",{children:"Determines whether a point is in the bounds of the rectangle, exclusive of the rectangle's bottom/right edge."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_PixelRect_Equals_1",children:"Equals(Object)"})}),(0,n.jsxs)("td",{children:["Returns a boolean indicating whether the given object is equal to this rectangle.",(0,n.jsx)("br",{}),"(Overrides ",(0,n.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.valuetype.equals",target:"_blank",rel:"noopener noreferrer",children:"ValueType.Equals(Object)"}),")"]})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_PixelRect_Equals",children:"Equals(PixelRect)"})}),(0,n.jsx)("td",{children:"Returns a boolean indicating whether the rect is equal to the other given rect."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_PixelRect_FromRect",children:"FromRect(Rect, Vector)"})}),(0,n.jsxs)("td",{children:["Converts a ",(0,n.jsx)("a",{href:"T_Avalonia_Rect",children:"Rect"})," to device pixels using the specified scaling factor."]})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_PixelRect_FromRect_1",children:"FromRect(Rect, Double)"})}),(0,n.jsxs)("td",{children:["Converts a ",(0,n.jsx)("a",{href:"T_Avalonia_Rect",children:"Rect"})," to device pixels using the specified scaling factor."]})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_PixelRect_FromRectWithDpi",children:"FromRectWithDpi(Rect, Vector)"})}),(0,n.jsxs)("td",{children:["Converts a ",(0,n.jsx)("a",{href:"T_Avalonia_Rect",children:"Rect"})," to device pixels using the specified dots per inch (DPI)."]})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_PixelRect_FromRectWithDpi_1",children:"FromRectWithDpi(Rect, Double)"})}),(0,n.jsxs)("td",{children:["Converts a ",(0,n.jsx)("a",{href:"T_Avalonia_Rect",children:"Rect"})," to device pixels using the specified dots per inch (DPI)."]})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_PixelRect_GetHashCode",children:"GetHashCode()"})}),(0,n.jsxs)("td",{children:["Returns the hash code for this instance.",(0,n.jsx)("br",{}),"(Overrides ",(0,n.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode",target:"_blank",rel:"noopener noreferrer",children:"ValueType.GetHashCode()"}),")"]})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.object.gettype",target:"_blank",rel:"noopener noreferrer",children:"GetType()"})}),(0,n.jsxs)("td",{children:["Gets the ",(0,n.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.type",target:"_blank",rel:"noopener noreferrer",children:"Type"})," of the current instance.",(0,n.jsx)("br",{}),"(Inherited from ",(0,n.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.object",target:"_blank",rel:"noopener noreferrer",children:"Object"}),")"]})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_PixelRect_Intersect",children:"Intersect(PixelRect)"})}),(0,n.jsx)("td",{children:"Gets the intersection of two rectangles."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_PixelRect_Intersects",children:"Intersects(PixelRect)"})}),(0,n.jsx)("td",{children:"Determines whether a rectangle intersects with this rectangle."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_PixelRect_Parse",children:"Parse(String)"})}),(0,n.jsx)("td",{children:"Parses a PixelRect string."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_PixelRect_ToRect_1",children:"ToRect(Double)"})}),(0,n.jsxs)("td",{children:["Converts the PixelRect to a device-independent ",(0,n.jsx)("a",{href:"T_Avalonia_Rect",children:"Rect"})," using the specified scaling factor."]})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_PixelRect_ToRect",children:"ToRect(Vector)"})}),(0,n.jsxs)("td",{children:["Converts the PixelRect to a device-independent ",(0,n.jsx)("a",{href:"T_Avalonia_Rect",children:"Rect"})," using the specified scaling factor."]})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_PixelRect_ToRectWithDpi_1",children:"ToRectWithDpi(Double)"})}),(0,n.jsxs)("td",{children:["Converts the PixelRect to a device-independent ",(0,n.jsx)("a",{href:"T_Avalonia_Rect",children:"Rect"})," using the specified dots per inch (DPI)."]})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_PixelRect_ToRectWithDpi",children:"ToRectWithDpi(Vector)"})}),(0,n.jsxs)("td",{children:["Converts the PixelRect to a device-independent ",(0,n.jsx)("a",{href:"T_Avalonia_Rect",children:"Rect"})," using the specified dots per inch (DPI)."]})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_PixelRect_ToString",children:"ToString()"})}),(0,n.jsxs)("td",{children:["Returns the string representation of the rectangle.",(0,n.jsx)("br",{}),"(Overrides ",(0,n.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.valuetype.tostring",target:"_blank",rel:"noopener noreferrer",children:"ValueType.ToString()"}),")"]})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_PixelRect_Translate",children:"Translate(PixelVector)"})}),(0,n.jsx)("td",{children:"Translates the rectangle by an offset."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_PixelRect_Union",children:"Union(PixelRect)"})}),(0,n.jsx)("td",{children:"Gets the union of two rectangles."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_PixelRect_WithHeight",children:"WithHeight(Int32)"})}),(0,n.jsx)("td",{children:"Returns a new PixelRect with the specified height."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_PixelRect_WithWidth",children:"WithWidth(Int32)"})}),(0,n.jsx)("td",{children:"Returns a new PixelRect with the specified width."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_PixelRect_WithX",children:"WithX(Int32)"})}),(0,n.jsx)("td",{children:"Returns a new PixelRect with the specified X position."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_PixelRect_WithY",children:"WithY(Int32)"})}),(0,n.jsx)("td",{children:"Returns a new PixelRect with the specified Y position."})]})]}),"\n",(0,n.jsx)(t.h2,{id:"operators",children:"Operators"}),"\n",(0,n.jsxs)("table",{children:[(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_PixelRect_op_Equality",children:"Equality(PixelRect, PixelRect)"})}),(0,n.jsx)("td",{children:"Checks for equality between two PixelRects."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_PixelRect_op_Inequality",children:"Inequality(PixelRect, PixelRect)"})}),(0,n.jsx)("td",{children:"Checks for inequality between two PixelRects."})]})]}),"\n",(0,n.jsx)(t.h2,{id:"extension-methods",children:"Extension Methods"}),"\n",(0,n.jsx)("table",{children:(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("a",{href:"M_Avalonia_Skia_SkiaSharpExtensions_ToSKRectI",children:"ToSKRectI()"})}),(0,n.jsxs)("td",{children:[(0,n.jsx)("br",{}),"(Defined by ",(0,n.jsx)("a",{href:"T_Avalonia_Skia_SkiaSharpExtensions",children:"SkiaSharpExtensions"}),")"]})]})}),"\n",(0,n.jsx)(t.h2,{id:"see-also",children:"See Also"}),"\n",(0,n.jsx)(t.h4,{id:"reference",children:"Reference"}),"\n",(0,n.jsx)("a",{href:"N_Avalonia",children:"Avalonia Namespace"})]})}function o(e={}){let{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}function x(e,t){throw Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},116070:function(e,t,i){i.d(t,{Z:()=>c,a:()=>l});var r=i(841699);let n={},s=r.createContext(n);function l(e){let t=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:l(e.components),r.createElement(s.Provider,{value:t},e.children)}},692910:function(e){e.exports=JSON.parse('{"id":"T_Avalonia_PixelRect","title":"PixelRect Structure","description":"Represents a rectangle in device pixels.","source":"@site/docs/T_Avalonia_PixelRect.md","sourceDirName":".","slug":"/T_Avalonia_PixelRect","permalink":"/Ava-ApiTests/docs/T_Avalonia_PixelRect","draft":false,"unlisted":false,"editUrl":"https://github.com/timunie/Ava-ApiTests/docs/T_Avalonia_PixelRect.md","tags":[],"version":"current","frontMatter":{},"sidebar":"documentationSidebar","previous":{"title":"PixelPoint Structure","permalink":"/Ava-ApiTests/docs/T_Avalonia_PixelPoint"},"next":{"title":"PixelSize Structure","permalink":"/Ava-ApiTests/docs/T_Avalonia_PixelSize"}}')}}]);