"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["558126"],{82533:function(e,t,n){n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>r,toc:()=>c});var r=n(950199),a=n(696773),s=n(116070);let i={},l="RequestCatch Property",o={},c=[{value:"Definition",id:"definition",level:2},{value:"Property Value",id:"property-value",level:4},{value:"Remarks",id:"remarks",level:2},{value:"See Also",id:"see-also",level:2},{value:"Reference",id:"reference",level:4}];function h(e){let t={br:"br",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,s.a)(),...e.components},{TabItem:n,Tabs:r}=t;return n||p("TabItem",!0),r||p("Tabs",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"requestcatch-property",children:"RequestCatch Property"})}),"\n",(0,a.jsx)(t.p,{children:"Gets or sets whether the exception should be caught and the event handlers called.."}),"\n",(0,a.jsx)(t.h2,{id:"definition",children:"Definition"}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"Namespace:"})," ",(0,a.jsx)("a",{href:"N_Avalonia_Threading",children:"Avalonia.Threading"}),(0,a.jsx)(t.br,{}),"\n",(0,a.jsx)(t.strong,{children:"Assembly:"})," Avalonia.Base (in Avalonia.Base.dll)"]}),"\n",(0,a.jsxs)(r,{groupId:"api-code-preview",children:[(0,a.jsx)(n,{value:"csharp",label:"C#",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",children:"public bool RequestCatch { get; set; }\n"})})}),(0,a.jsx)(n,{value:"vb",label:"VB",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-vb",children:"Public Property RequestCatch As Boolean\r\n	Get\r\n	Set\n"})})}),(0,a.jsx)(n,{value:"fsharp",label:"F#",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-fsharp",children:"member RequestCatch : bool with get, set\n"})})})]}),"\n",(0,a.jsx)("a",{href:"https://github.com/AvaloniaUI/Avalonia/tree/master/src/Avalonia.Base/Threading/DispatcherUnhandledExceptionFilterEventArgs.cs#L47",title:"View the source code",children:"View Source"}),"\n",(0,a.jsx)(t.h4,{id:"property-value",children:"Property Value"}),"\n",(0,a.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.boolean",target:"_blank",rel:"noopener noreferrer",children:"Boolean"}),"\n",(0,a.jsx)(t.h2,{id:"remarks",children:"Remarks"}),"\n",(0,a.jsx)(t.p,{children:"A filter handler can set this property to false to request that the exception not be caught, to avoid the callstack getting unwound up to the Dispatcher."}),"\n",(0,a.jsx)(t.p,{children:'A previous handler in the event multicast might have already set this property to false, signalling that the exception will not be caught. We let the "don\'t catch" behavior override all others because it most likely means a debugging scenario.'}),"\n",(0,a.jsx)(t.h2,{id:"see-also",children:"See Also"}),"\n",(0,a.jsx)(t.h4,{id:"reference",children:"Reference"}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)("a",{href:"T_Avalonia_Threading_DispatcherUnhandledExceptionFilterEventArgs",children:"DispatcherUnhandledExceptionFilterEventArgs Class"}),(0,a.jsx)(t.br,{}),"\n",(0,a.jsx)("a",{href:"N_Avalonia_Threading",children:"Avalonia.Threading Namespace"})]})]})}function d(e={}){let{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}function p(e,t){throw Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},116070:function(e,t,n){n.d(t,{Z:()=>l,a:()=>i});var r=n(841699);let a={},s=r.createContext(a);function i(e){let t=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),r.createElement(s.Provider,{value:t},e.children)}},950199:function(e){e.exports=JSON.parse('{"id":"P_Avalonia_Threading_DispatcherUnhandledExceptionFilterEventArgs_RequestCatch","title":"RequestCatch Property","description":"Gets or sets whether the exception should be caught and the event handlers called..","source":"@site/docs/P_Avalonia_Threading_DispatcherUnhandledExceptionFilterEventArgs_RequestCatch.md","sourceDirName":".","slug":"/P_Avalonia_Threading_DispatcherUnhandledExceptionFilterEventArgs_RequestCatch","permalink":"/Ava-ApiTests/docs/P_Avalonia_Threading_DispatcherUnhandledExceptionFilterEventArgs_RequestCatch","draft":false,"unlisted":false,"editUrl":"https://github.com/timunie/Ava-ApiTests/docs/P_Avalonia_Threading_DispatcherUnhandledExceptionFilterEventArgs_RequestCatch.md","tags":[],"version":"current","frontMatter":{}}')}}]);