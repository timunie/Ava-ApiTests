"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["622966"],{49376:function(e,i,n){n.r(i),n.d(i,{assets:()=>o,contentTitle:()=>s,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var l=n(540654),t=n(696773),a=n(116070);let r={},s="Clamp(Single, Single, Single) Method",o={},c=[{value:"Definition",id:"definition",level:2},{value:"Parameters",id:"parameters",level:4},{value:"Return Value",id:"return-value",level:4},{value:"See Also",id:"see-also",level:2},{value:"Reference",id:"reference",level:4}];function d(e){let i={br:"br",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,a.a)(),...e.components},{TabItem:n,Tabs:l}=i;return n||m("TabItem",!0),l||m("Tabs",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.header,{children:(0,t.jsx)(i.h1,{id:"clampsingle-single-single-method",children:"Clamp(Single, Single, Single) Method"})}),"\n",(0,t.jsx)(i.p,{children:"Clamps a value between a minimum and maximum value."}),"\n",(0,t.jsx)(i.h2,{id:"definition",children:"Definition"}),"\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.strong,{children:"Namespace:"})," ",(0,t.jsx)("a",{href:"N_Avalonia_Utilities",children:"Avalonia.Utilities"}),(0,t.jsx)(i.br,{}),"\n",(0,t.jsx)(i.strong,{children:"Assembly:"})," Avalonia.Base (in Avalonia.Base.dll) Version: 11.2.0"]}),"\n",(0,t.jsxs)(l,{groupId:"api-code-preview",children:[(0,t.jsx)(n,{value:"csharp",label:"C#",children:(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-csharp",children:"public static float Clamp(\r\n	float value,\r\n	float min,\r\n	float max\r\n)\n"})})}),(0,t.jsx)(n,{value:"vb",label:"VB",children:(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-vb",children:"Public Shared Function Clamp ( \r\n	value As Single,\r\n	min As Single,\r\n	max As Single\r\n) As Single\n"})})}),(0,t.jsx)(n,{value:"fsharp",label:"F#",children:(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-fsharp",children:"static member Clamp : \r\n        value : float32 * \r\n        min : float32 * \r\n        max : float32 -> float32 \n"})})})]}),"\n",(0,t.jsx)("a",{href:"https://github.com/AvaloniaUI/Avalonia/tree/master/src/Avalonia.Base/Utilities/MathUtilities.cs#L269",title:"View the source code",children:"View Source"}),"\n",(0,t.jsx)(i.h4,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsxs)("dl",{children:[(0,t.jsxs)("dt",{children:["\xa0\xa0",(0,t.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.single",target:"_blank",rel:"noopener noreferrer",children:"Single"})]}),(0,t.jsx)("dd",{children:"The value."}),(0,t.jsxs)("dt",{children:["\xa0\xa0",(0,t.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.single",target:"_blank",rel:"noopener noreferrer",children:"Single"})]}),(0,t.jsx)("dd",{children:"The minimum value."}),(0,t.jsxs)("dt",{children:["\xa0\xa0",(0,t.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.single",target:"_blank",rel:"noopener noreferrer",children:"Single"})]}),(0,t.jsx)("dd",{children:"The maximum value."})]}),"\n",(0,t.jsx)(i.h4,{id:"return-value",children:"Return Value"}),"\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.single",target:"_blank",rel:"noopener noreferrer",children:"Single"}),(0,t.jsx)(i.br,{}),"\n","The clamped value."]}),"\n",(0,t.jsx)(i.h2,{id:"see-also",children:"See Also"}),"\n",(0,t.jsx)(i.h4,{id:"reference",children:"Reference"}),"\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)("a",{href:"T_Avalonia_Utilities_MathUtilities",children:"MathUtilities Class"}),(0,t.jsx)(i.br,{}),"\n",(0,t.jsx)("a",{href:"Overload_Avalonia_Utilities_MathUtilities_Clamp",children:"Clamp Overload"}),(0,t.jsx)(i.br,{}),"\n",(0,t.jsx)("a",{href:"N_Avalonia_Utilities",children:"Avalonia.Utilities Namespace"})]})]})}function h(e={}){let{wrapper:i}={...(0,a.a)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}function m(e,i){throw Error("Expected "+(i?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},116070:function(e,i,n){n.d(i,{Z:()=>s,a:()=>r});var l=n(841699);let t={},a=l.createContext(t);function r(e){let i=l.useContext(a);return l.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function s(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),l.createElement(a.Provider,{value:i},e.children)}},540654:function(e){e.exports=JSON.parse('{"id":"M_Avalonia_Utilities_MathUtilities_Clamp_3","title":"Clamp(Single, Single, Single) Method","description":"Clamps a value between a minimum and maximum value.","source":"@site/docs/M_Avalonia_Utilities_MathUtilities_Clamp_3.md","sourceDirName":".","slug":"/M_Avalonia_Utilities_MathUtilities_Clamp_3","permalink":"/Ava-ApiTests/docs/M_Avalonia_Utilities_MathUtilities_Clamp_3","draft":false,"unlisted":false,"editUrl":"https://github.com/timunie/Ava-ApiTests/docs/M_Avalonia_Utilities_MathUtilities_Clamp_3.md","tags":[],"version":"current","frontMatter":{}}')}}]);