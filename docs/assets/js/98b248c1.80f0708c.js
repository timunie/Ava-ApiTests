"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["53678"],{161288:function(e,n,t){t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>c});var r=t(416271),i=t(696773),a=t(116070);let o={},s="Equals(Point) Method",l={},c=[{value:"Definition",id:"definition",level:2},{value:"Parameters",id:"parameters",level:4},{value:"Return Value",id:"return-value",level:4},{value:"Implements",id:"implements",level:4},{value:"See Also",id:"see-also",level:2},{value:"Reference",id:"reference",level:4}];function d(e){let n={br:"br",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,a.a)(),...e.components},{TabItem:t,Tabs:r}=n;return t||u("TabItem",!0),r||u("Tabs",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"equalspoint-method",children:"Equals(Point) Method"})}),"\n",(0,i.jsx)(n.p,{children:"Returns a boolean indicating whether the point is equal to the other given point (bitwise)."}),"\n",(0,i.jsx)(n.h2,{id:"definition",children:"Definition"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Namespace:"})," ",(0,i.jsx)("a",{href:"N_Avalonia",children:"Avalonia"}),(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Assembly:"})," Avalonia.Base (in Avalonia.Base.dll) Version: 11.2.0"]}),"\n",(0,i.jsxs)(r,{groupId:"api-code-preview",children:[(0,i.jsx)(t,{value:"csharp",label:"C#",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:"public bool Equals(\r\n	Point other\r\n)\n"})})}),(0,i.jsx)(t,{value:"vb",label:"VB",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-vb",children:"Public Function Equals ( \r\n	other As Point\r\n) As Boolean\n"})})}),(0,i.jsx)(t,{value:"fsharp",label:"F#",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-fsharp",children:"abstract Equals : \r\n        other : Point -> bool \r\noverride Equals : \r\n        other : Point -> bool \n"})})})]}),"\n",(0,i.jsx)("a",{href:"https://github.com/AvaloniaUI/Avalonia/tree/master/src/Avalonia.Base/Point.cs#L204",title:"View the source code",children:"View Source"}),"\n",(0,i.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)("dl",{children:[(0,i.jsxs)("dt",{children:["\xa0\xa0",(0,i.jsx)("a",{href:"T_Avalonia_Point",children:"Point"})]}),(0,i.jsx)("dd",{children:"The other point to test equality against."})]}),"\n",(0,i.jsx)(n.h4,{id:"return-value",children:"Return Value"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.boolean",target:"_blank",rel:"noopener noreferrer",children:"Boolean"}),(0,i.jsx)(n.br,{}),"\n","True if this point is equal to other; False otherwise."]}),"\n",(0,i.jsx)(n.h4,{id:"implements",children:"Implements"}),"\n",(0,i.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals",target:"_blank",rel:"noopener noreferrer",children:"IEquatable(T).Equals(T)"}),"\n",(0,i.jsx)(n.h2,{id:"see-also",children:"See Also"}),"\n",(0,i.jsx)(n.h4,{id:"reference",children:"Reference"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)("a",{href:"T_Avalonia_Point",children:"Point Structure"}),(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)("a",{href:"Overload_Avalonia_Point_Equals",children:"Equals Overload"}),(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)("a",{href:"N_Avalonia",children:"Avalonia Namespace"})]})]})}function h(e={}){let{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}function u(e,n){throw Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},116070:function(e,n,t){t.d(n,{Z:()=>s,a:()=>o});var r=t(841699);let i={},a=r.createContext(i);function o(e){let n=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(a.Provider,{value:n},e.children)}},416271:function(e){e.exports=JSON.parse('{"id":"M_Avalonia_Point_Equals","title":"Equals(Point) Method","description":"Returns a boolean indicating whether the point is equal to the other given point (bitwise).","source":"@site/docs/M_Avalonia_Point_Equals.md","sourceDirName":".","slug":"/M_Avalonia_Point_Equals","permalink":"/Ava-ApiTests/docs/M_Avalonia_Point_Equals","draft":false,"unlisted":false,"editUrl":"https://github.com/timunie/Ava-ApiTests/docs/M_Avalonia_Point_Equals.md","tags":[],"version":"current","frontMatter":{}}')}}]);