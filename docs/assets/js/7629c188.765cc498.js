"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["542029"],{441202:function(e,r,t){t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>n,toc:()=>d});var n=t(837121),s=t(696773),i=t(116070);let c={},o="Vector Structure",l={},d=[{value:"Definition",id:"definition",level:2},{value:"Constructors",id:"constructors",level:2},{value:"Properties",id:"properties",level:2},{value:"Methods",id:"methods",level:2},{value:"Operators",id:"operators",level:2},{value:"Extension Methods",id:"extension-methods",level:2},{value:"See Also",id:"see-also",level:2},{value:"Reference",id:"reference",level:4}];function a(e){let r={br:"br",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,i.a)(),...e.components},{TabItem:t,Tabs:n}=r;return t||x("TabItem",!0),n||x("Tabs",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"vector-structure",children:"Vector Structure"})}),"\n",(0,s.jsx)(r.p,{children:"Defines a vector."}),"\n",(0,s.jsx)(r.h2,{id:"definition",children:"Definition"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Namespace:"})," ",(0,s.jsx)("a",{href:"N_Avalonia",children:"Avalonia"}),(0,s.jsx)(r.br,{}),"\n",(0,s.jsx)(r.strong,{children:"Assembly:"})," Avalonia.Base (in Avalonia.Base.dll)"]}),"\n",(0,s.jsxs)(n,{groupId:"api-code-preview",children:[(0,s.jsx)(t,{value:"csharp",label:"C#",children:(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-csharp",children:"public readonly struct Vector : IEquatable<Vector>\n"})})}),(0,s.jsx)(t,{value:"vb",label:"VB",children:(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-vb",children:"Public Structure Vector\r\n	Implements IEquatable(Of Vector)\n"})})}),(0,s.jsx)(t,{value:"fsharp",label:"F#",children:(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-fsharp",children:"[<SealedAttribute>]\r\ntype Vector = \r\n    struct\r\n        inherit ValueType\r\n        interface IEquatable<Vector>\r\n    end\n"})})})]}),"\n",(0,s.jsx)("a",{href:"https://github.com/AvaloniaUI/Avalonia/tree/master/src/Avalonia.Base/Vector.cs",title:"View the source code",children:"View Source"}),"\n",(0,s.jsxs)("table",{children:[(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("strong",{children:"Inheritance"})}),(0,s.jsxs)("td",{children:[(0,s.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.object",target:"_blank",rel:"noopener noreferrer",children:"Object"}),"  →  ",(0,s.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.valuetype",target:"_blank",rel:"noopener noreferrer",children:"ValueType"}),"  →  Vector"]})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("strong",{children:"Implements"})}),(0,s.jsxs)("td",{children:[(0,s.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.iequatable-1",target:"_blank",rel:"noopener noreferrer",children:"IEquatable"}),"(Vector)"]})]})]}),"\n",(0,s.jsx)(r.h2,{id:"constructors",children:"Constructors"}),"\n",(0,s.jsx)("table",{children:(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Vector__ctor",children:"Vector(Double, Double)"})}),(0,s.jsx)("td",{children:"Initializes a new instance of the Vector structure."})]})}),"\n",(0,s.jsx)(r.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsxs)("table",{children:[(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"P_Avalonia_Vector_Length",children:"Length"})}),(0,s.jsx)("td",{children:"Length of the vector."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"P_Avalonia_Vector_One",children:"One"})}),(0,s.jsx)("td",{children:"Returns the vector (1.0, 1.0)."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"P_Avalonia_Vector_SquaredLength",children:"SquaredLength"})}),(0,s.jsx)("td",{children:"Squared Length of the vector."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"P_Avalonia_Vector_UnitX",children:"UnitX"})}),(0,s.jsx)("td",{children:"Returns the vector (1.0, 0.0)."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"P_Avalonia_Vector_UnitY",children:"UnitY"})}),(0,s.jsx)("td",{children:"Returns the vector (0.0, 1.0)."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"P_Avalonia_Vector_X",children:"X"})}),(0,s.jsx)("td",{children:"Gets the X component."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"P_Avalonia_Vector_Y",children:"Y"})}),(0,s.jsx)("td",{children:"Gets the Y component."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"P_Avalonia_Vector_Zero",children:"Zero"})}),(0,s.jsx)("td",{children:"Returns the vector (0.0, 0.0)."})]})]}),"\n",(0,s.jsx)(r.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsxs)("table",{children:[(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Vector_Abs",children:"Abs()"})}),(0,s.jsx)("td",{children:"Returns a vector whose elements are the absolute values of each of the specified vector's elements."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Vector_Add",children:"Add(Vector, Vector)"})}),(0,s.jsx)("td",{children:"Adds the second to the first vector"})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Vector_Clamp",children:"Clamp(Vector, Vector, Vector)"})}),(0,s.jsx)("td",{children:"Restricts a vector between a minimum and a maximum value."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Vector_Cross",children:"Cross(Vector, Vector)"})}),(0,s.jsx)("td",{children:"Returns the cross product of two vectors."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Vector_Deconstruct",children:"Deconstruct(Double, Double)"})}),(0,s.jsx)("td",{children:"Deconstructs the vector into its X and Y components."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Vector_Distance",children:"Distance(Vector, Vector)"})}),(0,s.jsx)("td",{children:"Computes the Euclidean distance between the two given points."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Vector_DistanceSquared",children:"DistanceSquared(Vector, Vector)"})}),(0,s.jsx)("td",{children:"Returns the Euclidean distance squared between two specified points"})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Vector_Divide",children:"Divide(Vector, Vector)"})}),(0,s.jsx)("td",{children:"Divides the first vector by the second."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Vector_Divide_1",children:"Divide(Vector, Double)"})}),(0,s.jsx)("td",{children:"Divides the vector by the given scalar."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Vector_Dot",children:"Dot(Vector, Vector)"})}),(0,s.jsx)("td",{children:"Returns the dot product of two vectors."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Vector_Equals_1",children:"Equals(Object)"})}),(0,s.jsxs)("td",{children:[(0,s.jsx)("br",{}),"(Overrides ",(0,s.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.valuetype.equals",target:"_blank",rel:"noopener noreferrer",children:"ValueType.Equals(Object)"}),")"]})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Vector_Equals",children:"Equals(Vector)"})}),(0,s.jsx)("td",{children:"Check if two vectors are equal (bitwise)."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Vector_GetHashCode",children:"GetHashCode()"})}),(0,s.jsxs)("td",{children:[(0,s.jsx)("br",{}),"(Overrides ",(0,s.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode",target:"_blank",rel:"noopener noreferrer",children:"ValueType.GetHashCode()"}),")"]})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.object.gettype",target:"_blank",rel:"noopener noreferrer",children:"GetType()"})}),(0,s.jsxs)("td",{children:["Gets the ",(0,s.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.type",target:"_blank",rel:"noopener noreferrer",children:"Type"})," of the current instance.",(0,s.jsx)("br",{}),"(Inherited from ",(0,s.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.object",target:"_blank",rel:"noopener noreferrer",children:"Object"}),")"]})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Vector_Max",children:"Max(Vector, Vector)"})}),(0,s.jsx)("td",{children:"Returns a vector whose elements are the maximum of each of the pairs of elements in two specified vectors"})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Vector_Min",children:"Min(Vector, Vector)"})}),(0,s.jsx)("td",{children:"Returns a vector whose elements are the minimum of each of the pairs of elements in two specified vectors"})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Vector_Multiply",children:"Multiply(Vector, Vector)"})}),(0,s.jsx)("td",{children:"Multiplies the first vector by the second."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Vector_Multiply_1",children:"Multiply(Vector, Double)"})}),(0,s.jsx)("td",{children:"Multiplies the vector by the given scalar."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Vector_NearlyEquals",children:"NearlyEquals(Vector)"})}),(0,s.jsx)("td",{children:"Check if two vectors are nearly equal (numerically)."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Vector_Negate",children:"Negate()"})}),(0,s.jsx)("td",{children:"Returns a negated version of this vector."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Vector_Negate_1",children:"Negate(Vector)"})}),(0,s.jsx)("td",{children:"Negates the vector"})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Vector_Normalize",children:"Normalize()"})}),(0,s.jsx)("td",{children:"Returns a normalized version of this vector."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Vector_Normalize_1",children:"Normalize(Vector)"})}),(0,s.jsx)("td",{children:"Normalizes the given vector."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Vector_Parse",children:"Parse(String)"})}),(0,s.jsx)("td",{children:"Parses a Vector string."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Vector_Subtract",children:"Subtract(Vector, Vector)"})}),(0,s.jsx)("td",{children:"Subtracts the second from the first vector"})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Vector_ToString",children:"ToString()"})}),(0,s.jsxs)("td",{children:["Returns the string representation of the vector.",(0,s.jsx)("br",{}),"(Overrides ",(0,s.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.valuetype.tostring",target:"_blank",rel:"noopener noreferrer",children:"ValueType.ToString()"}),")"]})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Vector_WithX",children:"WithX(Double)"})}),(0,s.jsx)("td",{children:"Returns a new vector with the specified X component."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Vector_WithY",children:"WithY(Double)"})}),(0,s.jsx)("td",{children:"Returns a new vector with the specified Y component."})]})]}),"\n",(0,s.jsx)(r.h2,{id:"operators",children:"Operators"}),"\n",(0,s.jsxs)("table",{children:[(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Vector_op_Addition",children:"Addition(Vector, Vector)"})}),(0,s.jsx)("td",{children:"Adds two vectors."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Vector_op_Division",children:"Division(Vector, Double)"})}),(0,s.jsx)("td",{children:"Scales a vector."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Vector_op_Equality",children:"Equality(Vector, Vector)"})}),(0,s.jsx)("td",{children:"\xa0"})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Vector_op_Explicit",children:"Explicit(Vector to Point)"})}),(0,s.jsxs)("td",{children:["Converts the Vector to a ",(0,s.jsx)("a",{href:"T_Avalonia_Point",children:"Point"}),"."]})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Vector_op_Implicit",children:"Implicit(Vector2 to Vector)"})}),(0,s.jsx)("td",{children:"\xa0"})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Vector_op_Inequality",children:"Inequality(Vector, Vector)"})}),(0,s.jsx)("td",{children:"\xa0"})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Vector_op_Multiply_2",children:"Multiply(Double, Vector)"})}),(0,s.jsx)("td",{children:"Scales a vector."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Vector_op_Multiply",children:"Multiply(Vector, Vector)"})}),(0,s.jsx)("td",{children:"Calculates the dot product of two vectors."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Vector_op_Multiply_1",children:"Multiply(Vector, Double)"})}),(0,s.jsx)("td",{children:"Scales a vector."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Vector_op_Subtraction",children:"Subtraction(Vector, Vector)"})}),(0,s.jsx)("td",{children:"Subtracts two vectors."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Vector_op_UnaryNegation",children:"UnaryNegation(Vector)"})}),(0,s.jsx)("td",{children:"Negates a vector."})]})]}),"\n",(0,s.jsx)(r.h2,{id:"extension-methods",children:"Extension Methods"}),"\n",(0,s.jsx)("table",{children:(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"M_Avalonia_Skia_SkiaSharpExtensions_ToSKPoint_1",children:"ToSKPoint()"})}),(0,s.jsxs)("td",{children:[(0,s.jsx)("br",{}),"(Defined by ",(0,s.jsx)("a",{href:"T_Avalonia_Skia_SkiaSharpExtensions",children:"SkiaSharpExtensions"}),")"]})]})}),"\n",(0,s.jsx)(r.h2,{id:"see-also",children:"See Also"}),"\n",(0,s.jsx)(r.h4,{id:"reference",children:"Reference"}),"\n",(0,s.jsx)("a",{href:"N_Avalonia",children:"Avalonia Namespace"})]})}function h(e={}){let{wrapper:r}={...(0,i.a)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}function x(e,r){throw Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},116070:function(e,r,t){t.d(r,{Z:()=>o,a:()=>c});var n=t(841699);let s={},i=n.createContext(s);function c(e){let r=n.useContext(i);return n.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),n.createElement(i.Provider,{value:r},e.children)}},837121:function(e){e.exports=JSON.parse('{"id":"T_Avalonia_Vector","title":"Vector Structure","description":"Defines a vector.","source":"@site/docs/T_Avalonia_Vector.md","sourceDirName":".","slug":"/T_Avalonia_Vector","permalink":"/Ava-ApiTests/docs/T_Avalonia_Vector","draft":false,"unlisted":false,"editUrl":"https://github.com/timunie/Ava-ApiTests/docs/T_Avalonia_Vector.md","tags":[],"version":"current","frontMatter":{},"sidebar":"documentationSidebar","previous":{"title":"UrlOpenedEventArgs Class","permalink":"/Ava-ApiTests/docs/T_Avalonia_UrlOpenedEventArgs"},"next":{"title":"Vector3D Structure","permalink":"/Ava-ApiTests/docs/T_Avalonia_Vector3D"}}')}}]);