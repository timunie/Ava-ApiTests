"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["985713"],{642578:function(e,r,o){o.r(r),o.d(r,{assets:()=>l,contentTitle:()=>a,default:()=>c,frontMatter:()=>n,metadata:()=>s,toc:()=>d});var s=o(995868),t=o(696773),i=o(116070);let n={},a="BrowserPlatformOptions Properties",l={},d=[{value:"Properties",id:"properties",level:2},{value:"See Also",id:"see-also",level:2},{value:"Reference",id:"reference",level:4}];function h(e){let r={a:"a",br:"br",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",...(0,i.a)(),...e.components},{Tag:o}=r;return o||function(e,r){throw Error("Expected "+(r?"component":"object")+" `Tag` to be defined: you likely forgot to import, pass, or provide it.")}("Tag",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"browserplatformoptions-properties",children:"BrowserPlatformOptions Properties"})}),"\n",(0,t.jsx)(r.h2,{id:"properties",children:"Properties"}),"\n",(0,t.jsxs)("table",{children:[(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:(0,t.jsx)("a",{href:"P_Avalonia_Browser_BrowserPlatformOptions_AvaloniaServiceWorkerScope",children:"AvaloniaServiceWorkerScope"})}),(0,t.jsxs)("td",{children:["If ",(0,t.jsx)("a",{href:"P_Avalonia_Browser_BrowserPlatformOptions_RegisterAvaloniaServiceWorker",children:"RegisterAvaloniaServiceWorker"})," is enabled, it is possible to redefine scope for the worker. By default, current domain root is used as a scope."]})]}),(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:(0,t.jsx)("a",{href:"P_Avalonia_Browser_BrowserPlatformOptions_FrameworkAssetPathResolver",children:"FrameworkAssetPathResolver"})}),(0,t.jsx)("td",{children:"Defines paths where avalonia modules and service locator should be resolved. If null, default path resolved depending on the backend (browser or blazor) is used."})]}),(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:(0,t.jsx)("a",{href:"P_Avalonia_Browser_BrowserPlatformOptions_PreferFileDialogPolyfill",children:"PreferFileDialogPolyfill"})}),(0,t.jsxs)("td",{children:['Avalonia uses "native-file-system-adapter" polyfill for the file dialogs. If native implementation is available, by default it is used. This property forces polyfill to be always used. For more details, see ',(0,t.jsx)(r.a,{href:"https://github.com/jimmywarting/native-file-system-adapter#a-note-when-downloading-with-the-polyfilled-version",children:"https://github.com/jimmywarting/native-file-system-adapter#a-note-when-downloading-with-the-polyfilled-version"}),"."]})]}),(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:(0,t.jsx)("a",{href:"P_Avalonia_Browser_BrowserPlatformOptions_PreferManagedThreadDispatcher",children:"PreferManagedThreadDispatcher"})}),(0,t.jsx)("td",{children:"Defines if Avalonia should create a controlled dispatcher loop on the web worker thread. If used only when WasmEnableThreads is set to true. Default value is true."})]}),(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:(0,t.jsx)("a",{href:"P_Avalonia_Browser_BrowserPlatformOptions_RegisterAvaloniaServiceWorker",children:"RegisterAvaloniaServiceWorker"})}),(0,t.jsxs)("td",{children:["Defines if the service worker used by Avalonia should be registered. If registered, service worker can work as a save file picker fallback on the browsers that don't support native implementation. For more details, see ",(0,t.jsx)(r.a,{href:"https://github.com/jimmywarting/native-file-system-adapter#a-note-when-downloading-with-the-polyfilled-version",children:"https://github.com/jimmywarting/native-file-system-adapter#a-note-when-downloading-with-the-polyfilled-version"}),".",(0,t.jsx)("br",{}),(0,t.jsx)(o,{type:"is-info",children:"Unstable."})]})]}),(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:(0,t.jsx)("a",{href:"P_Avalonia_Browser_BrowserPlatformOptions_RenderingMode",children:"RenderingMode"})}),(0,t.jsx)("td",{children:"Gets or sets Avalonia rendering modes with fallbacks. The first element in the array has the highest priority."})]})]}),"\n",(0,t.jsx)(r.h2,{id:"see-also",children:"See Also"}),"\n",(0,t.jsx)(r.h4,{id:"reference",children:"Reference"}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)("a",{href:"T_Avalonia_Browser_BrowserPlatformOptions",children:"BrowserPlatformOptions Class"}),(0,t.jsx)(r.br,{}),"\n",(0,t.jsx)("a",{href:"N_Avalonia_Browser",children:"Avalonia.Browser Namespace"})]})]})}function c(e={}){let{wrapper:r}={...(0,i.a)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},116070:function(e,r,o){o.d(r,{Z:()=>a,a:()=>n});var s=o(841699);let t={},i=s.createContext(t);function n(e){let r=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:n(e.components),s.createElement(i.Provider,{value:r},e.children)}},995868:function(e){e.exports=JSON.parse('{"id":"Properties_T_Avalonia_Browser_BrowserPlatformOptions","title":"BrowserPlatformOptions Properties","description":"Properties","source":"@site/docs/Properties_T_Avalonia_Browser_BrowserPlatformOptions.md","sourceDirName":".","slug":"/Properties_T_Avalonia_Browser_BrowserPlatformOptions","permalink":"/Ava-ApiTests/docs/Properties_T_Avalonia_Browser_BrowserPlatformOptions","draft":false,"unlisted":false,"editUrl":"https://github.com/timunie/Ava-ApiTests/docs/Properties_T_Avalonia_Browser_BrowserPlatformOptions.md","tags":[],"version":"current","frontMatter":{}}')}}]);