"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["735183"],{411502:function(e,t,n){n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>c});var r=n(587262),i=n(696773),a=n(116070);let o={},l="IPlatformSettings Interface",s={},c=[{value:"Definition",id:"definition",level:2},{value:"Properties",id:"properties",level:2},{value:"Methods",id:"methods",level:2},{value:"Events",id:"events",level:2},{value:"See Also",id:"see-also",level:2},{value:"Reference",id:"reference",level:4}];function d(e){let t={br:"br",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,a.a)(),...e.components},{TabItem:n,Tabs:r}=t;return n||f("TabItem",!0),r||f("Tabs",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"iplatformsettings-interface",children:"IPlatformSettings Interface"})}),"\n",(0,i.jsx)(t.p,{children:"The IPlatformSettings interface represents a contract for accessing platform-specific settings and information. Some of these settings might be changed by used globally in the OS in runtime."}),"\n",(0,i.jsx)(t.h2,{id:"definition",children:"Definition"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Namespace:"})," ",(0,i.jsx)("a",{href:"N_Avalonia_Platform",children:"Avalonia.Platform"}),(0,i.jsx)(t.br,{}),"\n",(0,i.jsx)(t.strong,{children:"Assembly:"})," Avalonia.Base (in Avalonia.Base.dll)"]}),"\n",(0,i.jsxs)(r,{groupId:"api-code-preview",children:[(0,i.jsx)(n,{value:"csharp",label:"C#",children:(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-csharp",children:"[NotClientImplementableAttribute]\r\npublic interface IPlatformSettings\n"})})}),(0,i.jsx)(n,{value:"vb",label:"VB",children:(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-vb",children:"<NotClientImplementableAttribute>\r\nPublic Interface IPlatformSettings\n"})})}),(0,i.jsx)(n,{value:"fsharp",label:"F#",children:(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-fsharp",children:"[<NotClientImplementableAttribute>]\r\ntype IPlatformSettings = interface end\n"})})})]}),"\n",(0,i.jsx)("a",{href:"https://github.com/AvaloniaUI/Avalonia/tree/master/src/Avalonia.Base/Platform/IPlatformSettings.cs",title:"View the source code",children:"View Source"}),"\n",(0,i.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,i.jsxs)("table",{children:[(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("a",{href:"P_Avalonia_Platform_IPlatformSettings_HoldWaitDuration",children:"HoldWaitDuration"})}),(0,i.jsx)("td",{children:"Holding duration between pointer press and when event is fired."})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("a",{href:"P_Avalonia_Platform_IPlatformSettings_HotkeyConfiguration",children:"HotkeyConfiguration"})}),(0,i.jsx)("td",{children:"Get a configuration for platform-specific hotkeys in an Avalonia application."})]})]}),"\n",(0,i.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,i.jsxs)("table",{children:[(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("a",{href:"M_Avalonia_Platform_IPlatformSettings_GetColorValues",children:"GetColorValues()"})}),(0,i.jsx)("td",{children:"Gets current system color values including dark mode and accent colors."})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("a",{href:"M_Avalonia_Platform_IPlatformSettings_GetDoubleTapSize",children:"GetDoubleTapSize(PointerType)"})}),(0,i.jsx)("td",{children:"The size of the rectangle around the location of a pointer down that a pointer up must occur within in order to register a double-tap gesture, in device-independent pixels."})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("a",{href:"M_Avalonia_Platform_IPlatformSettings_GetDoubleTapTime",children:"GetDoubleTapTime(PointerType)"})}),(0,i.jsx)("td",{children:"Gets the maximum time that may occur between the first and second click of a double- tap gesture."})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("a",{href:"M_Avalonia_Platform_IPlatformSettings_GetTapSize",children:"GetTapSize(PointerType)"})}),(0,i.jsx)("td",{children:"The size of the rectangle around the location of a pointer down that a pointer up must occur within in order to register a tap gesture, in device-independent pixels."})]})]}),"\n",(0,i.jsx)(t.h2,{id:"events",children:"Events"}),"\n",(0,i.jsx)("table",{children:(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("a",{href:"E_Avalonia_Platform_IPlatformSettings_ColorValuesChanged",children:"ColorValuesChanged"})}),(0,i.jsx)("td",{children:"Raises when current system color values are changed. Including changing of a dark mode and accent colors."})]})}),"\n",(0,i.jsx)(t.h2,{id:"see-also",children:"See Also"}),"\n",(0,i.jsx)(t.h4,{id:"reference",children:"Reference"}),"\n",(0,i.jsx)("a",{href:"N_Avalonia_Platform",children:"Avalonia.Platform Namespace"})]})}function h(e={}){let{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}function f(e,t){throw Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},116070:function(e,t,n){n.d(t,{Z:()=>l,a:()=>o});var r=n(841699);let i={},a=r.createContext(i);function o(e){let t=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(a.Provider,{value:t},e.children)}},587262:function(e){e.exports=JSON.parse('{"id":"T_Avalonia_Platform_IPlatformSettings","title":"IPlatformSettings Interface","description":"The IPlatformSettings interface represents a contract for accessing platform-specific settings and information. Some of these settings might be changed by used globally in the OS in runtime.","source":"@site/docs/T_Avalonia_Platform_IPlatformSettings.md","sourceDirName":".","slug":"/T_Avalonia_Platform_IPlatformSettings","permalink":"/Ava-ApiTests/docs/T_Avalonia_Platform_IPlatformSettings","draft":false,"unlisted":false,"editUrl":"https://github.com/timunie/Ava-ApiTests/docs/T_Avalonia_Platform_IPlatformSettings.md","tags":[],"version":"current","frontMatter":{},"sidebar":"documentationSidebar","previous":{"title":"IPlatformHandle Interface","permalink":"/Ava-ApiTests/docs/T_Avalonia_Platform_IPlatformHandle"},"next":{"title":"IScopedResource<T> Interface","permalink":"/Ava-ApiTests/docs/T_Avalonia_Platform_IScopedResource_1"}}')}}]);