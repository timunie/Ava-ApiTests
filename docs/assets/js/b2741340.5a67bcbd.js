"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["813128"],{918556:function(e,t,n){n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>d});var o=n(694709),r=n(696773),i=n(116070);let s={},a="TryGetPosition Method",l={},d=[{value:"Definition",id:"definition",level:2},{value:"Parameters",id:"parameters",level:4},{value:"Return Value",id:"return-value",level:4},{value:"See Also",id:"see-also",level:2},{value:"Reference",id:"reference",level:4}];function c(e){let t={br:"br",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,i.a)(),...e.components},{TabItem:n,Tabs:o}=t;return n||u("TabItem",!0),o||u("Tabs",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"trygetposition-method",children:"TryGetPosition Method"})}),"\n",(0,r.jsxs)(t.p,{children:["Gets the x- and y-coordinates of the pointer position, optionally evaluated against a coordinate origin of a supplied ",(0,r.jsx)("a",{href:"T_Avalonia_Controls_Control",children:"Control"}),"."]}),"\n",(0,r.jsx)(t.h2,{id:"definition",children:"Definition"}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Namespace:"})," ",(0,r.jsx)("a",{href:"N_Avalonia_Controls",children:"Avalonia.Controls"}),(0,r.jsx)(t.br,{}),"\n",(0,r.jsx)(t.strong,{children:"Assembly:"})," Avalonia.Controls (in Avalonia.Controls.dll)"]}),"\n",(0,r.jsxs)(o,{groupId:"api-code-preview",children:[(0,r.jsx)(n,{value:"csharp",label:"C#",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-csharp",children:"public bool TryGetPosition(\r\n	Control? relativeTo,\r\n	out Point? point\r\n)\n"})})}),(0,r.jsx)(n,{value:"vb",label:"VB",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-vb",children:"Public Function TryGetPosition ( \r\n	relativeTo As Control,\r\n	<OutAttribute> ByRef point As Point\r\n) As Boolean\n"})})}),(0,r.jsx)(n,{value:"fsharp",label:"F#",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-fsharp",children:"member TryGetPosition : \r\n        relativeTo : Control * \r\n        point : Point byref -> bool \n"})})})]}),"\n",(0,r.jsx)("a",{href:"https://github.com/AvaloniaUI/Avalonia/tree/master/src/Avalonia.Controls/ContextRequestedEventArgs.cs#L53",title:"View the source code",children:"View Source"}),"\n",(0,r.jsx)(t.h4,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)("dl",{children:[(0,r.jsxs)("dt",{children:["\xa0\xa0",(0,r.jsx)("a",{href:"T_Avalonia_Controls_Control",children:"Control"})]}),(0,r.jsxs)("dd",{children:["Any ",(0,r.jsx)("a",{href:"T_Avalonia_Controls_Control",children:"Control"}),"-derived object that is connected to the same object tree. To specify the object relative to the overall coordinate system, use a relativeTo value of null."]}),(0,r.jsxs)("dt",{children:["\xa0\xa0",(0,r.jsx)("a",{href:"T_Avalonia_Point",children:"Point"})]}),(0,r.jsxs)("dd",{children:["A ",(0,r.jsx)("a",{href:"T_Avalonia_Point",children:"Point"})," that represents the current x- and y-coordinates of the mouse pointer position. If null was passed as relativeTo, this coordinate is for the overall window. If a relativeTo value other than null was passed, this coordinate is relative to the object referenced by relativeTo."]})]}),"\n",(0,r.jsx)(t.h4,{id:"return-value",children:"Return Value"}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.boolean",target:"_blank",rel:"noopener noreferrer",children:"Boolean"}),(0,r.jsx)(t.br,{}),"\n","true if the context request was initiated by a pointer device; otherwise, false."]}),"\n",(0,r.jsx)(t.h2,{id:"see-also",children:"See Also"}),"\n",(0,r.jsx)(t.h4,{id:"reference",children:"Reference"}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)("a",{href:"T_Avalonia_Controls_ContextRequestedEventArgs",children:"ContextRequestedEventArgs Class"}),(0,r.jsx)(t.br,{}),"\n",(0,r.jsx)("a",{href:"N_Avalonia_Controls",children:"Avalonia.Controls Namespace"})]})]})}function h(e={}){let{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}function u(e,t){throw Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},116070:function(e,t,n){n.d(t,{Z:()=>a,a:()=>s});var o=n(841699);let r={},i=o.createContext(r);function s(e){let t=o.useContext(i);return o.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),o.createElement(i.Provider,{value:t},e.children)}},694709:function(e){e.exports=JSON.parse('{"id":"M_Avalonia_Controls_ContextRequestedEventArgs_TryGetPosition","title":"TryGetPosition Method","description":"Gets the x- and y-coordinates of the pointer position, optionally evaluated against a coordinate origin of a supplied Control.","source":"@site/docs/M_Avalonia_Controls_ContextRequestedEventArgs_TryGetPosition.md","sourceDirName":".","slug":"/M_Avalonia_Controls_ContextRequestedEventArgs_TryGetPosition","permalink":"/Ava-ApiTests/docs/M_Avalonia_Controls_ContextRequestedEventArgs_TryGetPosition","draft":false,"unlisted":false,"editUrl":"https://github.com/timunie/Ava-ApiTests/docs/M_Avalonia_Controls_ContextRequestedEventArgs_TryGetPosition.md","tags":[],"version":"current","frontMatter":{}}')}}]);