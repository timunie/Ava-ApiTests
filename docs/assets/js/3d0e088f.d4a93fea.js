"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["579641"],{111474:function(e,n,r){r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>t,toc:()=>c});var t=r(517793),a=r(696773),o=r(116070);let s={},i="Invariant Property",l={},c=[{value:"Definition",id:"definition",level:2},{value:"Property Value",id:"property-value",level:4},{value:"See Also",id:"see-also",level:2},{value:"Reference",id:"reference",level:4}];function u(e){let n={br:"br",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,o.a)(),...e.components},{TabItem:r,Tabs:t}=n;return r||d("TabItem",!0),t||d("Tabs",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"invariant-property",children:"Invariant Property"})}),"\n",(0,a.jsx)(n.p,{children:"The Invariant format. Only uses strings straight from the appropriate Enums."}),"\n",(0,a.jsx)(n.h2,{id:"definition",children:"Definition"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Namespace:"})," ",(0,a.jsx)("a",{href:"N_Avalonia_Input_Platform",children:"Avalonia.Input.Platform"}),(0,a.jsx)(n.br,{}),"\n",(0,a.jsx)(n.strong,{children:"Assembly:"})," Avalonia.Base (in Avalonia.Base.dll)"]}),"\n",(0,a.jsxs)(t,{groupId:"api-code-preview",children:[(0,a.jsx)(r,{value:"csharp",label:"C#",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",children:"public static KeyGestureFormatInfo Invariant { get; }\n"})})}),(0,a.jsx)(r,{value:"vb",label:"VB",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-vb",children:"Public Shared ReadOnly Property Invariant As KeyGestureFormatInfo\r\n	Get\n"})})}),(0,a.jsx)(r,{value:"fsharp",label:"F#",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-fsharp",children:"static member Invariant : KeyGestureFormatInfo with get\n"})})})]}),"\n",(0,a.jsx)("a",{href:"https://github.com/AvaloniaUI/Avalonia/tree/master/src/Avalonia.Base/Input/Platform/KeyGestureFormatInfo.cs#L29",title:"View the source code",children:"View Source"}),"\n",(0,a.jsx)(n.h4,{id:"property-value",children:"Property Value"}),"\n",(0,a.jsx)("a",{href:"T_Avalonia_Input_Platform_KeyGestureFormatInfo",children:"KeyGestureFormatInfo"}),"\n",(0,a.jsx)(n.h2,{id:"see-also",children:"See Also"}),"\n",(0,a.jsx)(n.h4,{id:"reference",children:"Reference"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)("a",{href:"T_Avalonia_Input_Platform_KeyGestureFormatInfo",children:"KeyGestureFormatInfo Class"}),(0,a.jsx)(n.br,{}),"\n",(0,a.jsx)("a",{href:"N_Avalonia_Input_Platform",children:"Avalonia.Input.Platform Namespace"})]})]})}function p(e={}){let{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}function d(e,n){throw Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},116070:function(e,n,r){r.d(n,{Z:()=>i,a:()=>s});var t=r(841699);let a={},o=t.createContext(a);function s(e){let n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),t.createElement(o.Provider,{value:n},e.children)}},517793:function(e){e.exports=JSON.parse('{"id":"P_Avalonia_Input_Platform_KeyGestureFormatInfo_Invariant","title":"Invariant Property","description":"The Invariant format. Only uses strings straight from the appropriate Enums.","source":"@site/docs/P_Avalonia_Input_Platform_KeyGestureFormatInfo_Invariant.md","sourceDirName":".","slug":"/P_Avalonia_Input_Platform_KeyGestureFormatInfo_Invariant","permalink":"/Ava-ApiTests/docs/P_Avalonia_Input_Platform_KeyGestureFormatInfo_Invariant","draft":false,"unlisted":false,"editUrl":"https://github.com/timunie/Ava-ApiTests/docs/P_Avalonia_Input_Platform_KeyGestureFormatInfo_Invariant.md","tags":[],"version":"current","frontMatter":{}}')}}]);