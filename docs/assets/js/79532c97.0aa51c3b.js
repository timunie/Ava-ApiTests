"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["537240"],{786017:function(e,r,n){n.r(r),n.d(r,{assets:()=>s,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var l=n(816962),t=n(696773),i=n(116070);let a={},o="Multiply(PixelVector, Int32) Operator",s={},c=[{value:"Definition",id:"definition",level:2},{value:"Parameters",id:"parameters",level:4},{value:"Return Value",id:"return-value",level:4},{value:"See Also",id:"see-also",level:2},{value:"Reference",id:"reference",level:4}];function d(e){let r={br:"br",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,i.a)(),...e.components},{TabItem:n,Tabs:l}=r;return n||p("TabItem",!0),l||p("Tabs",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"multiplypixelvector-int32-operator",children:"Multiply(PixelVector, Int32) Operator"})}),"\n",(0,t.jsx)(r.p,{children:"Scales a vector."}),"\n",(0,t.jsx)(r.h2,{id:"definition",children:"Definition"}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"Namespace:"})," ",(0,t.jsx)("a",{href:"N_Avalonia",children:"Avalonia"}),(0,t.jsx)(r.br,{}),"\n",(0,t.jsx)(r.strong,{children:"Assembly:"})," Avalonia.Base (in Avalonia.Base.dll) Version: 11.2.0"]}),"\n",(0,t.jsxs)(l,{groupId:"api-code-preview",children:[(0,t.jsx)(n,{value:"csharp",label:"C#",children:(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-csharp",children:"public static PixelVector operator *(\r\n	PixelVector vector,\r\n	int scale\r\n)\n"})})}),(0,t.jsx)(n,{value:"vb",label:"VB",children:(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-vb",children:"Public Shared Operator * ( \r\n	vector As PixelVector,\r\n	scale As Integer\r\n) As PixelVector\n"})})}),(0,t.jsx)(n,{value:"fsharp",label:"F#",children:(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-fsharp",children:"static let inline (*)\r\n        vector : PixelVector * \r\n        scale : int  : PixelVector\n"})})})]}),"\n",(0,t.jsx)("a",{href:"https://github.com/AvaloniaUI/Avalonia/tree/master/src/Avalonia.Base/PixelVector.cs#L71",title:"View the source code",children:"View Source"}),"\n",(0,t.jsx)(r.h4,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsxs)("dl",{children:[(0,t.jsxs)("dt",{children:["\xa0\xa0",(0,t.jsx)("a",{href:"T_Avalonia_PixelVector",children:"PixelVector"})]}),(0,t.jsx)("dd",{children:"The vector"}),(0,t.jsxs)("dt",{children:["\xa0\xa0",(0,t.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.int32",target:"_blank",rel:"noopener noreferrer",children:"Int32"})]}),(0,t.jsx)("dd",{children:"The scaling factor."})]}),"\n",(0,t.jsx)(r.h4,{id:"return-value",children:"Return Value"}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)("a",{href:"T_Avalonia_PixelVector",children:"PixelVector"}),(0,t.jsx)(r.br,{}),"\n","The scaled vector."]}),"\n",(0,t.jsx)(r.h2,{id:"see-also",children:"See Also"}),"\n",(0,t.jsx)(r.h4,{id:"reference",children:"Reference"}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)("a",{href:"T_Avalonia_PixelVector",children:"PixelVector Structure"}),(0,t.jsx)(r.br,{}),"\n",(0,t.jsx)("a",{href:"Overload_Avalonia_PixelVector_op_Multiply",children:"Multiply Overload"}),(0,t.jsx)(r.br,{}),"\n",(0,t.jsx)("a",{href:"N_Avalonia",children:"Avalonia Namespace"})]})]})}function h(e={}){let{wrapper:r}={...(0,i.a)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}function p(e,r){throw Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},116070:function(e,r,n){n.d(r,{Z:()=>o,a:()=>a});var l=n(841699);let t={},i=l.createContext(t);function a(e){let r=l.useContext(i);return l.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),l.createElement(i.Provider,{value:r},e.children)}},816962:function(e){e.exports=JSON.parse('{"id":"M_Avalonia_PixelVector_op_Multiply_1","title":"Multiply(PixelVector, Int32) Operator","description":"Scales a vector.","source":"@site/docs/M_Avalonia_PixelVector_op_Multiply_1.md","sourceDirName":".","slug":"/M_Avalonia_PixelVector_op_Multiply_1","permalink":"/Ava-ApiTests/docs/M_Avalonia_PixelVector_op_Multiply_1","draft":false,"unlisted":false,"editUrl":"https://github.com/timunie/Ava-ApiTests/docs/M_Avalonia_PixelVector_op_Multiply_1.md","tags":[],"version":"current","frontMatter":{}}')}}]);