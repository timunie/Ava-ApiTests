"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["914820"],{482811:function(e,n,o){o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var i=o(965146),t=o(696773),r=o(116070);let s={},a="UseGLibMainLoop Property",l={},c=[{value:"Definition",id:"definition",level:2},{value:"Property Value",id:"property-value",level:4},{value:"See Also",id:"see-also",level:2},{value:"Reference",id:"reference",level:4}];function d(e){let n={br:"br",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,r.a)(),...e.components},{TabItem:o,Tabs:i}=n;return o||h("TabItem",!0),i||h("Tabs",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"useglibmainloop-property",children:"UseGLibMainLoop Property"})}),"\n",(0,t.jsx)(n.p,{children:"If this option is set to true, GMainLoop and GSource based dispatcher implementation will be used instead of epoll-based one. Use this if you need to use GLib-based libraries on the main thread"}),"\n",(0,t.jsx)(n.h2,{id:"definition",children:"Definition"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Namespace:"})," ",(0,t.jsx)("a",{href:"N_Avalonia",children:"Avalonia"}),(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)(n.strong,{children:"Assembly:"})," Avalonia.X11 (in Avalonia.X11.dll)"]}),"\n",(0,t.jsxs)(i,{groupId:"api-code-preview",children:[(0,t.jsx)(o,{value:"csharp",label:"C#",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:"public bool UseGLibMainLoop { get; set; }\n"})})}),(0,t.jsx)(o,{value:"vb",label:"VB",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-vb",children:"Public Property UseGLibMainLoop As Boolean\r\n	Get\r\n	Set\n"})})}),(0,t.jsx)(o,{value:"fsharp",label:"F#",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fsharp",children:"member UseGLibMainLoop : bool with get, set\n"})})})]}),"\n",(0,t.jsx)("a",{href:"https://github.com/AvaloniaUI/Avalonia/tree/master/src/Avalonia.X11/X11Platform.cs#L380",title:"View the source code",children:"View Source"}),"\n",(0,t.jsx)(n.h4,{id:"property-value",children:"Property Value"}),"\n",(0,t.jsx)("a",{href:"https://learn.microsoft.com/dotnet/api/system.boolean",target:"_blank",rel:"noopener noreferrer",children:"Boolean"}),"\n",(0,t.jsx)(n.h2,{id:"see-also",children:"See Also"}),"\n",(0,t.jsx)(n.h4,{id:"reference",children:"Reference"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)("a",{href:"T_Avalonia_X11PlatformOptions",children:"X11PlatformOptions Class"}),(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)("a",{href:"N_Avalonia",children:"Avalonia Namespace"})]})]})}function p(e={}){let{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}function h(e,n){throw Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},116070:function(e,n,o){o.d(n,{Z:()=>a,a:()=>s});var i=o(841699);let t={},r=i.createContext(t);function s(e){let n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),i.createElement(r.Provider,{value:n},e.children)}},965146:function(e){e.exports=JSON.parse('{"id":"P_Avalonia_X11PlatformOptions_UseGLibMainLoop","title":"UseGLibMainLoop Property","description":"If this option is set to true, GMainLoop and GSource based dispatcher implementation will be used instead of epoll-based one. Use this if you need to use GLib-based libraries on the main thread","source":"@site/docs/P_Avalonia_X11PlatformOptions_UseGLibMainLoop.md","sourceDirName":".","slug":"/P_Avalonia_X11PlatformOptions_UseGLibMainLoop","permalink":"/Ava-ApiTests/docs/P_Avalonia_X11PlatformOptions_UseGLibMainLoop","draft":false,"unlisted":false,"editUrl":"https://github.com/timunie/Ava-ApiTests/docs/P_Avalonia_X11PlatformOptions_UseGLibMainLoop.md","tags":[],"version":"current","frontMatter":{}}')}}]);